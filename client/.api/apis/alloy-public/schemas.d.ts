declare const GetBankAccountsAccountIdentifierOrToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly account_identifier_or_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of bank account to get details for.";
                };
            };
            readonly required: readonly ["account_identifier_or_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly type: "number";
                    readonly examples: readonly [2];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The page of history results to return. Default is 1.";
                };
                readonly per_page: {
                    readonly type: "number";
                    readonly examples: readonly [1000];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "How many history results per page to return. Default/maximum is 1000.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly account_token: {
                    readonly type: "string";
                    readonly examples: readonly ["A-WO6WloK6odpcoxJkTKAt"];
                };
                readonly external_account_id: {
                    readonly type: "string";
                };
                readonly account_class: {
                    readonly type: "string";
                };
                readonly account_name: {
                    readonly type: "string";
                };
                readonly account_number: {
                    readonly type: "string";
                };
                readonly routing_number: {
                    readonly type: "string";
                };
                readonly opening_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                };
                readonly maturity_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                };
                readonly closing_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                };
                readonly cif_number: {
                    readonly type: "string";
                };
                readonly card_network: {
                    readonly type: "string";
                };
                readonly country_code: {
                    readonly type: "string";
                };
                readonly currency: {
                    readonly type: "string";
                };
                readonly product_code: {
                    readonly type: "string";
                };
                readonly product_name: {
                    readonly type: "string";
                };
                readonly status: {
                    readonly type: "string";
                };
                readonly status_detail: {
                    readonly type: "string";
                };
                readonly credit_limit: {
                    readonly type: "string";
                };
                readonly account_balance: {
                    readonly type: "string";
                };
                readonly entities: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly anyOf: readonly [{
                            readonly title: "Linked by External ID";
                            readonly required: readonly ["external_entity_id"];
                            readonly properties: {
                                readonly account_holder_type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["primary", "secondary"];
                                    readonly description: "`primary` `secondary`";
                                };
                                readonly external_entity_id: {
                                    readonly type: "string";
                                };
                                readonly entity_token: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        }, {
                            readonly title: "Linked by Entity Token";
                            readonly required: readonly ["entity_token"];
                            readonly properties: {
                                readonly account_holder_type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["primary", "secondary"];
                                    readonly description: "`primary` `secondary`";
                                };
                                readonly external_entity_id: {
                                    readonly type: "string";
                                };
                                readonly entity_token: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        }];
                    };
                };
                readonly history: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly credit_limit: {
                                readonly type: "string";
                            };
                            readonly account_balance: {
                                readonly type: "string";
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetBatchesBatchToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly batch_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of batch to retrieve";
                };
            };
            readonly required: readonly ["batch_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly evaluations: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly batch_token: {
                    readonly type: "string";
                };
                readonly batch_status: {
                    readonly type: "string";
                };
                readonly created_at: {
                    readonly type: "number";
                };
                readonly completed_at: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly total_records: {
                            readonly type: "number";
                        };
                        readonly evaluation_status: {
                            readonly type: "object";
                            readonly properties: {
                                readonly complete: {
                                    readonly type: "number";
                                };
                                readonly failed: {
                                    readonly type: "number";
                                };
                                readonly waiting: {
                                    readonly type: "number";
                                };
                                readonly webhook_pending: {
                                    readonly type: "number";
                                };
                                readonly other: {
                                    readonly type: "number";
                                };
                                readonly none: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly evaluation_result: {
                            readonly type: "object";
                            readonly properties: {
                                readonly partial: {
                                    readonly type: "number";
                                };
                                readonly success: {
                                    readonly type: "number";
                                };
                                readonly none: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly row_status: {
                            readonly type: "object";
                            readonly properties: {
                                readonly pending: {
                                    readonly type: "number";
                                };
                                readonly complete: {
                                    readonly type: "number";
                                };
                                readonly failed: {
                                    readonly type: "number";
                                };
                                readonly timed_out: {
                                    readonly type: "number";
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCases: {
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly status_code: {
                        readonly type: "number";
                        readonly description: "The standard HTTP status code for the request";
                    };
                    readonly error: {
                        readonly type: "string";
                        readonly description: "A nullable string, indicated what went wrong for a failed request";
                    };
                    readonly page: {
                        readonly type: "number";
                        readonly description: "The page itself, for the provided query";
                    };
                    readonly pages: {
                        readonly type: "number";
                        readonly description: "The number of overall pages, for the provided filter parameters";
                    };
                    readonly per_page: {
                        readonly type: "number";
                        readonly description: "The max number of items per pages, for the provided query";
                    };
                    readonly total: {
                        readonly type: "number";
                        readonly description: "The total number of cases, for the provided filter parameters";
                    };
                    readonly _embedded: {
                        readonly type: "object";
                        readonly description: "A container for the cases themseleves, and their related business objects";
                        readonly properties: {
                            readonly case_token: {
                                readonly type: "string";
                                readonly description: "A unique identifier for the case itself, generated by Alloy's internal system";
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "A unique identifier for the entity itself, generated by Alloy's internal system. Currently, cases can only have one entity related to it";
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly description: "The current status of the case. This is nullable, as some cases may not have an initial status";
                            };
                            readonly closed: {
                                readonly type: "boolean";
                                readonly description: "This represents if the case is open or not";
                            };
                            readonly sandbox: {
                                readonly type: "boolean";
                                readonly description: "This represents if the case is a \"real\" case, or if has been used as a test. Similar to the \"environment\" on evaluations";
                            };
                            readonly unread: {
                                readonly type: "boolean";
                                readonly description: "This represents if the case has been read by a user, since it's last update";
                            };
                            readonly created_at: {
                                readonly type: "number";
                                readonly description: "A Unix timestamp for when the case was created";
                            };
                            readonly updated_at: {
                                readonly type: "number";
                                readonly description: "A Unix timestamp for when the case was last updated";
                            };
                            readonly closed_at: {
                                readonly type: "number";
                                readonly description: "A Unix timestamp for when the case was closed. This is null if the case is still open";
                            };
                            readonly assigned_agent_email: {
                                readonly type: "string";
                                readonly description: "If the case is currently assigned, this is the email of that individual";
                            };
                            readonly assigned_agent_name: {
                                readonly type: "string";
                                readonly description: "If the case is currently assigned, this is the full name of that individual";
                            };
                            readonly program_name: {
                                readonly type: "string";
                            };
                            readonly alerts: {
                                readonly type: "array";
                                readonly description: "The tags related to the case. ALL of these tags MUST be case generating, at the time they we linked to the case. All of these tags must have the same type";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly customer_tag_type_name: {
                                readonly type: "string";
                                readonly description: "This is essentially the \"Case Type.\" All tags associated to a case, must have the same type as this value tied to the case";
                            };
                            readonly customer_tag_type_description: {
                                readonly type: "string";
                                readonly description: "This is a extended description for the type itself";
                            };
                            readonly is_escalated: {
                                readonly type: "boolean";
                                readonly description: "An indicator for if the case was escalated to a different assignee. This is cleared out, upon a different assignee being chosen";
                            };
                            readonly is_manual: {
                                readonly type: "boolean";
                                readonly description: "Represents if the case was generated by Alloy's internal system, or some kind of manual interaction";
                            };
                            readonly created_by_agent_email: {
                                readonly type: "string";
                                readonly description: "If the case was manually generated, this is the full name of who took that action";
                            };
                            readonly created_by_agent_name: {
                                readonly type: "string";
                                readonly description: "If the case was manually generated, this is the email of who took that action";
                            };
                            readonly _embedded: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly entity: {
                                        readonly type: "object";
                                        readonly description: "Relevant entity data, for the entity tied to this case";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                            };
                                            readonly _links: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly self: {
                                                        readonly properties: {
                                                            readonly href: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly type: "object";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly _links: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly self: {
                                        readonly properties: {
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                    readonly evidences: {
                                        readonly properties: {
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                    readonly works: {
                                        readonly properties: {
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCasesCaseToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to get.";
                };
            };
            readonly required: readonly ["case_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "A container for the cases themseleves, and their related business objects";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly description: "A unique identifier for the case itself, generated by Alloy's internal system";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly description: "A unique identifier for the entity itself, generated by Alloy's internal system. Currently, cases can only have one entity related to it";
                };
                readonly status: {
                    readonly type: "string";
                    readonly description: "The current status of the case. This is nullable, as some cases may not have an initial status";
                };
                readonly closed: {
                    readonly type: "boolean";
                    readonly description: "This represents if the case is open or not";
                };
                readonly sandbox: {
                    readonly type: "boolean";
                    readonly description: "This represents if the case is a \"real\" case, or if has been used as a test. Similar to the \"environment\" on evaluations";
                };
                readonly unread: {
                    readonly type: "boolean";
                    readonly description: "This represents if the case has been read by a user, since it's last update";
                };
                readonly created_at: {
                    readonly type: "number";
                    readonly description: "A Unix timestamp for when the case was created";
                };
                readonly updated_at: {
                    readonly type: "number";
                    readonly description: "A Unix timestamp for when the case was last updated";
                };
                readonly closed_at: {
                    readonly type: "number";
                    readonly description: "A Unix timestamp for when the case was closed. This is null if the case is still open";
                };
                readonly assigned_agent_email: {
                    readonly type: "string";
                    readonly description: "If the case is currently assigned, this is the email of that individual";
                };
                readonly assigned_agent_name: {
                    readonly type: "string";
                    readonly description: "If the case is currently assigned, this is the full name of that individual";
                };
                readonly program_name: {
                    readonly type: "string";
                };
                readonly alerts: {
                    readonly type: "array";
                    readonly description: "The tags related to the case. ALL of these tags MUST be case generating, at the time they we linked to the case. All of these tags must have the same type";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly customer_tag_type_name: {
                    readonly type: "string";
                    readonly description: "This is essentially the \"Case Type.\" All tags associated to a case, must have the same type as this value tied to the case";
                };
                readonly customer_tag_type_description: {
                    readonly type: "string";
                    readonly description: "This is a extended description for the type itself";
                };
                readonly is_escalated: {
                    readonly type: "boolean";
                    readonly description: "An indicator for if the case was escalated to a different assignee. This is cleared out, upon a different assignee being chosen";
                };
                readonly is_manual: {
                    readonly type: "boolean";
                    readonly description: "Represents if the case was generated by Alloy's internal system, or some kind of manual interaction";
                };
                readonly created_by_agent_email: {
                    readonly type: "string";
                    readonly description: "If the case was manually generated, this is the full name of who took that action";
                };
                readonly created_by_agent_name: {
                    readonly type: "string";
                    readonly description: "If the case was manually generated, this is the email of who took that action";
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly entity: {
                            readonly type: "object";
                            readonly description: "Relevant entity data, for the entity tied to this case";
                            readonly properties: {
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly entity_token: {
                                    readonly type: "string";
                                };
                                readonly external_entity_id: {
                                    readonly type: "string";
                                };
                                readonly type: {
                                    readonly type: "string";
                                };
                                readonly _links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly self: {
                                            readonly properties: {
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly type: "object";
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        };
                        readonly evidences: {
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        };
                        readonly works: {
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCasesCaseTokenEvidences: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to get evidence for.";
                };
            };
            readonly required: readonly ["case_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                };
                readonly error: {
                    readonly type: "string";
                };
                readonly _embedded: {
                    readonly properties: {
                        readonly evidences: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly created_at: {
                                        readonly type: "number";
                                        readonly description: "A Unix timestamp, representing when the evidence was created in Alloy's internal system";
                                    };
                                    readonly occurred_at: {
                                        readonly type: "number";
                                        readonly description: "A Unix timestamp, representing when the evidence occurred. For example, this could be a transaction timestamp.";
                                    };
                                    readonly transaction_id: {
                                        readonly type: "string";
                                        readonly description: "A nullable string, representing the identifier for transaction linked to a case";
                                    };
                                    readonly evaluation_token: {
                                        readonly type: "string";
                                        readonly description: "A nullable string, representing the evaluation token linked to an evidence";
                                    };
                                    readonly is_manual: {
                                        readonly type: "boolean";
                                        readonly description: "Indication of if the evidence was added manually by a user";
                                    };
                                    readonly is_portfolio_eval: {
                                        readonly type: "boolean";
                                    };
                                    readonly portfolio_evaluation_token: {
                                        readonly type: "string";
                                        readonly description: "A nullable string, representing the portfolio evaluation token linked to an evidence";
                                    };
                                    readonly alerts: {
                                        readonly type: "array";
                                        readonly description: "The alert(s) that were added as part of this evidence";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly _embedded: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly transaction: {
                                                readonly properties: {
                                                    readonly transaction_id: {
                                                        readonly type: "number";
                                                    };
                                                    readonly amount: {
                                                        readonly type: "number";
                                                    };
                                                    readonly currency_code: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly type: "object";
                                            };
                                        };
                                    };
                                    readonly _links: {
                                        readonly properties: {
                                            readonly case: {
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly type: "object";
                                            };
                                            readonly self: {
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly type: "object";
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCasesCaseTokenEvidencesEvaluationTokenAlert: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to fetch dataset for.";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of the evaluation associated to the case to fetch dataset for.";
                };
            };
            readonly required: readonly ["case_token", "evaluation_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCasesCaseTokenWorks: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to get works for.";
                };
            };
            readonly required: readonly ["case_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly description: "The standard HTTP status code for the request";
                };
                readonly error: {
                    readonly type: "string";
                    readonly description: "A nullable string, indicating what went wrong for a failed request";
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly works: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly description: "The specific type that an auditable action is\n\n`status` `closure` `note` `read` `assignment_created` `assignment_removed` `manual_evidence_added` `case_escalation_created` `case_escalation_removed`";
                                        readonly enum: readonly ["status", "closure", "note", "read", "assignment_created", "assignment_removed", "manual_evidence_added", "case_escalation_created", "case_escalation_removed"];
                                    };
                                    readonly note: {
                                        readonly type: "string";
                                        readonly description: "An optional, user generated note describing why they took an action";
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly description: "The status that the case was changed to";
                                    };
                                    readonly closed: {
                                        readonly type: "boolean";
                                        readonly description: "If the case was closed on this action, its value will be true";
                                    };
                                    readonly reasons: {
                                        readonly type: "array";
                                        readonly description: "The reasons for taking a certain action";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly assigned_agent: {
                                        readonly type: "string";
                                        readonly description: "The agent assigned during this action";
                                    };
                                    readonly tag_name: {
                                        readonly type: "string";
                                        readonly description: "The tag that was manually added during this action";
                                    };
                                    readonly created_at: {
                                        readonly type: "number";
                                        readonly description: "When this action was taken";
                                    };
                                    readonly _embedded: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly created_by: {
                                                readonly type: "object";
                                                readonly description: "Represents who took this manual action";
                                                readonly properties: {
                                                    readonly name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly email: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        };
                        readonly case: {
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesBusinessesEntityToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Business token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["B-aCF4FAkGKiTIZJFhproR"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["087ac67e-17ab-4529-8d1a-a8b2214d305f"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly business_name: {
                    readonly type: "string";
                    readonly examples: readonly ["Alloy"];
                };
                readonly business_alternate_name: {
                    readonly type: "string";
                    readonly examples: readonly ["DBA First Mile Group"];
                };
                readonly business_registry_id: {
                    readonly type: "string";
                    readonly examples: readonly ["123456789"];
                };
                readonly business_federal_ein: {
                    readonly type: "string";
                    readonly examples: readonly ["987654321"];
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["safeandseamless@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["5550001234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["business"];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [400];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "string";
                    readonly examples: readonly [1652205025227];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["2ohfhwqoq2nm"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly name: {
                    readonly type: "string";
                };
                readonly type: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly archived: {
                    readonly type: "boolean";
                };
                readonly created: {
                    readonly type: "number";
                };
                readonly evaluations: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly evaluation_token: {
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly type: "number";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly application_name: {
                                readonly type: "string";
                            };
                            readonly outcome: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly documents: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly document_token: {
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly type: "number";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly reviews: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly review_token: {
                                readonly description: "Unique ID for the Review.";
                                readonly type: "string";
                            };
                            readonly entity_token: {
                                readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                                readonly type: "string";
                            };
                            readonly group_token: {
                                readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                                readonly type: "string";
                            };
                            readonly application_token: {
                                readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                readonly type: "string";
                            };
                            readonly outcome: {
                                readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                                readonly type: "string";
                            };
                            readonly application_name: {
                                readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                readonly type: "string";
                            };
                            readonly reviewer: {
                                readonly description: "Email of the Agent that created the Review.";
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly description: "Unix timestamp when the Review was created.";
                                readonly type: "number";
                            };
                            readonly reasons: {
                                readonly type: "array";
                                readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly agent: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly email: {
                                        readonly description: "Valid email of agent with Alloy account access.";
                                        readonly type: "string";
                                    };
                                    readonly external_id: {
                                        readonly description: "Unique external ID associated with the Agent, if any.";
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly notes: {
                                readonly type: "array";
                                readonly description: "Array of notes associated with the Review, if any.";
                                readonly items: {
                                    readonly properties: {
                                        readonly note: {
                                            readonly description: "Content to include in the body of the note.";
                                            readonly type: "string";
                                        };
                                        readonly note_author_agent_email: {
                                            readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                            readonly type: "string";
                                        };
                                        readonly created_at: {
                                            readonly description: "Unix timestamp when the note was created.";
                                            readonly type: "number";
                                        };
                                        readonly updated_at: {
                                            readonly description: "Unix timestamp when the note was last updated.";
                                            readonly type: "number";
                                        };
                                    };
                                    readonly type: "object";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityTokenDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly document_token: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly extension: {
                        readonly type: "string";
                    };
                    readonly uploaded: {
                        readonly type: "boolean";
                    };
                    readonly timestamp: {
                        readonly type: "number";
                    };
                    readonly approved: {
                        readonly type: "string";
                    };
                    readonly approval_agent_email: {
                        readonly type: "string";
                    };
                    readonly approval_timestamp: {
                        readonly type: "number";
                    };
                    readonly notes: {
                        readonly type: "array";
                        readonly items: {
                            readonly properties: {
                                readonly note: {
                                    readonly type: "string";
                                };
                                readonly note_author_agent_email: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "number";
                                };
                                readonly updated_at: {
                                    readonly type: "number";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityTokenDocumentsDocumentToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with document.";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["document_token", "entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "string";
            readonly format: "binary";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityTokenEvaluationsEvaluationToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with entity.";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with evaluation.";
                };
            };
            readonly required: readonly ["entity_token", "evaluation_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly result: {
                            readonly type: "string";
                        };
                        readonly score: {
                            readonly type: "number";
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome: {
                            readonly type: "string";
                        };
                    };
                };
                readonly supplied: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly matching: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly diligence: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly related_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly raw_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly audit_archive: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityTokenReviews: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Entity or Group associated with the Review.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly review_token: {
                        readonly description: "Unique ID for the Review.";
                        readonly type: "string";
                    };
                    readonly entity_token: {
                        readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                        readonly type: "string";
                    };
                    readonly group_token: {
                        readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                        readonly type: "string";
                    };
                    readonly application_token: {
                        readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                        readonly type: "string";
                    };
                    readonly outcome: {
                        readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                        readonly type: "string";
                    };
                    readonly application_name: {
                        readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                        readonly type: "string";
                    };
                    readonly reviewer: {
                        readonly description: "Email of the Agent that created the Review.";
                        readonly type: "string";
                    };
                    readonly timestamp: {
                        readonly description: "Unix timestamp when the Review was created.";
                        readonly type: "number";
                    };
                    readonly reasons: {
                        readonly type: "array";
                        readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                    readonly agent: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email: {
                                readonly description: "Valid email of agent with Alloy account access.";
                                readonly type: "string";
                            };
                            readonly external_id: {
                                readonly description: "Unique external ID associated with the Agent, if any.";
                                readonly type: "string";
                            };
                        };
                    };
                    readonly notes: {
                        readonly type: "array";
                        readonly description: "Array of notes associated with the Review, if any.";
                        readonly items: {
                            readonly properties: {
                                readonly note: {
                                    readonly description: "Content to include in the body of the note.";
                                    readonly type: "string";
                                };
                                readonly note_author_agent_email: {
                                    readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly description: "Unix timestamp when the note was created.";
                                    readonly type: "number";
                                };
                                readonly updated_at: {
                                    readonly description: "Unix timestamp when the note was last updated.";
                                    readonly type: "number";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesEntityTokenReviewsReviewToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Entity or Group associated with the Review.";
                };
                readonly review_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Review.";
                };
            };
            readonly required: readonly ["entity_token", "review_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly review_token: {
                    readonly description: "Unique ID for the Review.";
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                    readonly type: "string";
                };
                readonly group_token: {
                    readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly outcome: {
                    readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                    readonly type: "string";
                };
                readonly application_name: {
                    readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly reviewer: {
                    readonly description: "Email of the Agent that created the Review.";
                    readonly type: "string";
                };
                readonly timestamp: {
                    readonly description: "Unix timestamp when the Review was created.";
                    readonly type: "number";
                };
                readonly reasons: {
                    readonly type: "array";
                    readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly agent: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email: {
                            readonly description: "Valid email of agent with Alloy account access.";
                            readonly type: "string";
                        };
                        readonly external_id: {
                            readonly description: "Unique external ID associated with the Agent, if any.";
                            readonly type: "string";
                        };
                    };
                };
                readonly notes: {
                    readonly type: "array";
                    readonly description: "Array of notes associated with the Review, if any.";
                    readonly items: {
                        readonly properties: {
                            readonly note: {
                                readonly description: "Content to include in the body of the note.";
                                readonly type: "string";
                            };
                            readonly note_author_agent_email: {
                                readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly description: "Unix timestamp when the note was created.";
                                readonly type: "number";
                            };
                            readonly updated_at: {
                                readonly description: "Unix timestamp when the note was last updated.";
                                readonly type: "number";
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntitiesPersonsEntityToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Person token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["P-asldkfhj"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["person-entity"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly gender: {
                    readonly type: "string";
                    readonly examples: readonly ["male"];
                };
                readonly birth_date: {
                    readonly type: "string";
                };
                readonly name_first: {
                    readonly type: "string";
                    readonly examples: readonly ["John"];
                };
                readonly name_middle: {
                    readonly type: "string";
                };
                readonly name_last: {
                    readonly type: "string";
                    readonly examples: readonly ["Doe"];
                };
                readonly document_ssn: {
                    readonly type: "string";
                };
                readonly document_id_card: {
                    readonly type: "string";
                };
                readonly document_license: {
                    readonly type: "string";
                };
                readonly document_passport: {
                    readonly type: "string";
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["john@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["555-000-1234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["person"];
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [400];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "string";
                    readonly examples: readonly [1652205025227];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["2ohfhwqoq2nm"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEntityFeedback: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEvaluationsEvaluationToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly evaluation_token: {
                    readonly type: "string";
                    readonly examples: readonly ["L-5zKNd6TaKRoUILGAFTD6"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with evaluation.";
                };
            };
            readonly required: readonly ["evaluation_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly result: {
                            readonly type: "string";
                        };
                        readonly score: {
                            readonly type: "number";
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome: {
                            readonly type: "string";
                        };
                    };
                };
                readonly supplied: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly matching: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly diligence: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly related_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly raw_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly audit_archive: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEventsSchema: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly enum: readonly ["person_created", "person_updated", "business_created", "business_updated", "bank_account_created", "bank_account_updated", "external_account_created", "external_account_updated", "transaction", "login"];
                    readonly examples: readonly ["login"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The type of event for the schema";
                };
            };
            readonly required: readonly ["type"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetGroupsEntityToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly name: {
                    readonly type: "string";
                };
                readonly type: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly archived: {
                    readonly type: "boolean";
                };
                readonly meta: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly external_entity_id: {
                    readonly type: "string";
                };
                readonly created: {
                    readonly type: "number";
                };
                readonly identity_details: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly evaluations: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly evaluation_token: {
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly type: "number";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly application_name: {
                                readonly type: "string";
                            };
                            readonly outcome: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly documents: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly document_token: {
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly type: "number";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly reviews: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly review_token: {
                                readonly description: "Unique ID for the Review.";
                                readonly type: "string";
                            };
                            readonly entity_token: {
                                readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                                readonly type: "string";
                            };
                            readonly group_token: {
                                readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                                readonly type: "string";
                            };
                            readonly application_token: {
                                readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                readonly type: "string";
                            };
                            readonly outcome: {
                                readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                                readonly type: "string";
                            };
                            readonly application_name: {
                                readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                readonly type: "string";
                            };
                            readonly reviewer: {
                                readonly description: "Email of the Agent that created the Review.";
                                readonly type: "string";
                            };
                            readonly timestamp: {
                                readonly description: "Unix timestamp when the Review was created.";
                                readonly type: "number";
                            };
                            readonly reasons: {
                                readonly type: "array";
                                readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly agent: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly email: {
                                        readonly description: "Valid email of agent with Alloy account access.";
                                        readonly type: "string";
                                    };
                                    readonly external_id: {
                                        readonly description: "Unique external ID associated with the Agent, if any.";
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly notes: {
                                readonly type: "array";
                                readonly description: "Array of notes associated with the Review, if any.";
                                readonly items: {
                                    readonly properties: {
                                        readonly note: {
                                            readonly description: "Content to include in the body of the note.";
                                            readonly type: "string";
                                        };
                                        readonly note_author_agent_email: {
                                            readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                            readonly type: "string";
                                        };
                                        readonly created_at: {
                                            readonly description: "Unix timestamp when the note was created.";
                                            readonly type: "number";
                                        };
                                        readonly updated_at: {
                                            readonly description: "Unix timestamp when the note was last updated.";
                                            readonly type: "number";
                                        };
                                    };
                                    readonly type: "object";
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly child_entities: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly entity_token: {
                            readonly type: "string";
                        };
                        readonly archived: {
                            readonly type: "boolean";
                        };
                        readonly created: {
                            readonly type: "number";
                        };
                        readonly evaluations: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly evaluation_token: {
                                        readonly type: "string";
                                    };
                                    readonly timestamp: {
                                        readonly type: "number";
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                    };
                                    readonly application_name: {
                                        readonly type: "string";
                                    };
                                    readonly outcome: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                        readonly documents: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly document_token: {
                                        readonly type: "string";
                                    };
                                    readonly timestamp: {
                                        readonly type: "number";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                        readonly reviews: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly review_token: {
                                        readonly description: "Unique ID for the Review.";
                                        readonly type: "string";
                                    };
                                    readonly entity_token: {
                                        readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                                        readonly type: "string";
                                    };
                                    readonly group_token: {
                                        readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                                        readonly type: "string";
                                    };
                                    readonly application_token: {
                                        readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                        readonly type: "string";
                                    };
                                    readonly outcome: {
                                        readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                                        readonly type: "string";
                                    };
                                    readonly application_name: {
                                        readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                                        readonly type: "string";
                                    };
                                    readonly reviewer: {
                                        readonly description: "Email of the Agent that created the Review.";
                                        readonly type: "string";
                                    };
                                    readonly timestamp: {
                                        readonly description: "Unix timestamp when the Review was created.";
                                        readonly type: "number";
                                    };
                                    readonly reasons: {
                                        readonly type: "array";
                                        readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly agent: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly email: {
                                                readonly description: "Valid email of agent with Alloy account access.";
                                                readonly type: "string";
                                            };
                                            readonly external_id: {
                                                readonly description: "Unique external ID associated with the Agent, if any.";
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly notes: {
                                        readonly type: "array";
                                        readonly description: "Array of notes associated with the Review, if any.";
                                        readonly items: {
                                            readonly properties: {
                                                readonly note: {
                                                    readonly description: "Content to include in the body of the note.";
                                                    readonly type: "string";
                                                };
                                                readonly note_author_agent_email: {
                                                    readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                                    readonly type: "string";
                                                };
                                                readonly created_at: {
                                                    readonly description: "Unix timestamp when the note was created.";
                                                    readonly type: "number";
                                                };
                                                readonly updated_at: {
                                                    readonly description: "Unix timestamp when the note was last updated.";
                                                    readonly type: "number";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysApplicationsExtExternalApplicationIdLatest: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly external_application_id: {
                    readonly type: "string";
                    readonly examples: readonly ["EXT-123456"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "External application identifier";
                };
            };
            readonly required: readonly ["external_application_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly hideFields: {
                    readonly type: "string";
                    readonly examples: readonly ["name_first,name_last,document_ssn"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of fields to obfuscate in the full evaluation response (only relevant within the `completed_evaluation` type events, and provided the query parameter `fullData` is also set to `true`).\nFor example, if `hideFields=document_ssn`, then `\"document_ssn\": \"123456789\"` would be returned as `\"document_ssn\": \"*********\"`.\nThis obfuscation will apply to the `supplied`, `formatted`, and `meta` objects in the full evaluation response, including inside nested objects within those objects.\n";
                };
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
                readonly journeyToken: {
                    readonly type: "string";
                    readonly examples: readonly ["J-2t94Ur3wOGmaVUyD4r8"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Optional journey token filter";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                    readonly examples: readonly ["completed"];
                    readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                };
                readonly sandbox: {
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059958368];
                };
                readonly updated_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961458];
                };
                readonly closed_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961464];
                };
                readonly complete_outcome: {
                    readonly type: "string";
                    readonly examples: readonly ["Approved"];
                };
                readonly is_shadow_app: {
                    readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                    readonly type: "boolean";
                };
                readonly is_part_of_shadow_test: {
                    readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                    readonly type: "boolean";
                };
                readonly journey_application_status: {
                    readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                    readonly type: "string";
                };
                readonly is_archived: {
                    readonly type: "boolean";
                };
                readonly external_group_id: {
                    readonly type: "string";
                };
                readonly external_application_id: {
                    readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                    readonly type: "string";
                };
                readonly is_rerun: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly archived_at: {
                    readonly type: "string";
                };
                readonly terminal_reconciliation_output: {
                    readonly type: "object";
                    readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                    readonly properties: {
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Fraud Risk"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["adverse_action", any];
                                        readonly description: "`adverse_action`";
                                    };
                                };
                            };
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["fraud_tag"];
                            };
                        };
                        readonly output_attributes: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "number";
                                }];
                                readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                            };
                        };
                        readonly matrix_models: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                readonly properties: {
                                    readonly matrix_model_public_version: {
                                        readonly type: "integer";
                                    };
                                    readonly matrix_model_token: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly result: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly enum: readonly ["executed", "not_executed"];
                                        readonly examples: readonly ["completed"];
                                        readonly description: "`executed` `not_executed`";
                                    };
                                    readonly x_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "x-coordinate of the matrix";
                                    };
                                    readonly x_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly y_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "y-coordinate of the matrix";
                                    };
                                    readonly y_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly application_meta: {
                    readonly type: "object";
                    readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                    readonly additionalProperties: true;
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly rerun: {
                            readonly description: "Rerun information";
                            readonly type: "object";
                            readonly properties: {
                                readonly initiated_by: {
                                    readonly type: "string";
                                    readonly enum: readonly ["api", "dashboard"];
                                    readonly examples: readonly ["dashboard"];
                                    readonly description: "`api` `dashboard`";
                                };
                                readonly previous_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                                readonly root_external_group_id: {
                                    readonly type: "string";
                                };
                                readonly root_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                            };
                        };
                        readonly events: {
                            readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_application_event_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["alert", "application"];
                                        readonly description: "`alert` `application`";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                        readonly examples: readonly ["started_application"];
                                        readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                    };
                                    readonly external_partner_id: {
                                        readonly type: "string";
                                    };
                                    readonly external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly reason: {
                                        readonly type: "string";
                                    };
                                    readonly reasons: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly timestamp: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1634059958414];
                                    };
                                    readonly outcome: {
                                        readonly type: "string";
                                        readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                    };
                                    readonly evaluation_token: {
                                        readonly type: "string";
                                        readonly description: "Identifying evaluation token (only in evaluation type events)";
                                    };
                                    readonly entity_token: {
                                        readonly type: "string";
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                    };
                                    readonly error_data: {
                                        readonly type: "object";
                                        readonly description: "Additional error data populated when available for `error` event types";
                                        readonly properties: {
                                            readonly error: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly details: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly message: {
                                                        readonly type: "string";
                                                    };
                                                    readonly minor_code: {
                                                        readonly type: "integer";
                                                    };
                                                    readonly error_token: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly timestamp: {
                                                readonly type: "integer";
                                            };
                                            readonly status_code: {
                                                readonly type: "integer";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                            readonly evaluation_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_version_id: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                    readonly _embedded: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly node: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["1632850505316"];
                                                    };
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                        readonly examples: readonly ["workflow"];
                                                        readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                    };
                                                    readonly config: {
                                                        readonly description: "Config related to the specific node, depending on the type";
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly workflow_name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sdk_config: {
                                                        readonly type: "object";
                                                        readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                        readonly properties: {
                                                            readonly documents: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                            readonly selfie: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly evaluation: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly case: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly journey: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["application", "alert"];
                                    readonly examples: readonly ["application"];
                                    readonly description: "`application` `alert`";
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                };
                                readonly journey_version_num: {
                                    readonly type: "string";
                                };
                                readonly _links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly self: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly href: {
                                                    readonly type: "string";
                                                    readonly description: "GET route for the Journey";
                                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                };
                                            };
                                        };
                                        readonly callback_by_entity_application_token: {
                                            readonly type: "object";
                                            readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                };
                            };
                        };
                        readonly child_entities: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                        readonly examples: readonly ["external_entity_id123"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["person"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_branch_name: {
                                        readonly type: "string";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                    };
                                    readonly sandbox_persona_name: {
                                        readonly type: "string";
                                        readonly description: "When applicable, name of sandbox persona used for this child entity";
                                    };
                                };
                            };
                        };
                        readonly entity_applications: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly entity_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_status_details: {
                                        readonly type: "object";
                                        readonly description: "Additional details for applications that have status `data_request`";
                                        readonly properties: {
                                            readonly required: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly or: {
                                                readonly type: "string";
                                            };
                                            readonly optional: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly output: {
                                        readonly type: "object";
                                        readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                        readonly properties: {
                                            readonly outcome_reasons: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Fraud Risk"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["adverse_action", any];
                                                            readonly description: "`adverse_action`";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly tags: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["fraud_tag"];
                                                };
                                            };
                                            readonly output_attributes: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }];
                                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                };
                                            };
                                            readonly matrix_models: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "object";
                                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                    readonly properties: {
                                                        readonly matrix_model_public_version: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly matrix_model_token: {
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly result: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly status: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["executed", "not_executed"];
                                                            readonly examples: readonly ["completed"];
                                                            readonly description: "`executed` `not_executed`";
                                                        };
                                                        readonly x_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "x-coordinate of the matrix";
                                                        };
                                                        readonly x_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly y_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "y-coordinate of the matrix";
                                                        };
                                                        readonly y_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly entity: {
                            readonly description: "The journey application entity";
                            readonly type: "object";
                            readonly properties: {
                                readonly external_entity_identifier: {
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly examples: readonly ["group"];
                                };
                            };
                        };
                        readonly multi_environment_config: {
                            readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                            readonly type: "object";
                            readonly properties: {
                                readonly multi_environment_config_token: {
                                    readonly type: "string";
                                };
                                readonly multi_environment_config_notes: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "string";
                                    readonly examples: readonly [1634059958368];
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_public_version: {
                                    readonly type: "number";
                                };
                                readonly actions: {
                                    readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly journey_action_id: {
                                                readonly type: "number";
                                            };
                                            readonly action_version: {
                                                readonly type: "number";
                                            };
                                            readonly action_name: {
                                                readonly type: "string";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                                readonly workflows: {
                                    readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly workflow_name: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_node_type: {
                                                readonly description: "The type of node this workflow is used as, for example Step Up";
                                                readonly type: "string";
                                            };
                                            readonly workflow_token: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_public_version: {
                                                readonly type: "number";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                readonly type: "string";
                                            };
                                            readonly configured_services: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly service_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly has_credentials: {
                                                            readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly sandbox: {
                                                            readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly credentials_description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly is_pending_additional_entities: {
                            readonly type: "boolean";
                            readonly default: false;
                            readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "GET route for the Application";
                                    readonly type: "string";
                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [401];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4011];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Unauthorized"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Your supplied credentials are invalid."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725393617598];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [404];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly external_application_id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["X43jkf-01"];
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["1731f999-7390-4e28-be34-9bbb43dfs"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["nsDnk3oWWaKg2doAv9RWG43sdjfdX"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [500];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5000];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["31e6e353-e62b-4fe2-be16-ea37ea9a992c"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "503": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [503];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5031];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Oops our database server is unreachable. The engineers have been notified."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysJourneyTokenApplicationsJourneyApplicationToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
                readonly hideFields: {
                    readonly type: "string";
                    readonly examples: readonly ["name_first,name_last,document_ssn"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of fields to obfuscate in the full evaluation response (only relevant within the `completed_evaluation` type events, and provided the query parameter `fullData` is also set to `true`).\nFor example, if `hideFields=document_ssn`, then `\"document_ssn\": \"123456789\"` would be returned as `\"document_ssn\": \"*********\"`.\nThis obfuscation will apply to the `supplied`, `formatted`, and `meta` objects in the full evaluation response, including inside nested objects within those objects.\n";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                    readonly examples: readonly ["completed"];
                    readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                };
                readonly sandbox: {
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059958368];
                };
                readonly updated_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961458];
                };
                readonly closed_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961464];
                };
                readonly complete_outcome: {
                    readonly type: "string";
                    readonly examples: readonly ["Approved"];
                };
                readonly is_shadow_app: {
                    readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                    readonly type: "boolean";
                };
                readonly is_part_of_shadow_test: {
                    readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                    readonly type: "boolean";
                };
                readonly journey_application_status: {
                    readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                    readonly type: "string";
                };
                readonly is_archived: {
                    readonly type: "boolean";
                };
                readonly external_group_id: {
                    readonly type: "string";
                };
                readonly external_application_id: {
                    readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                    readonly type: "string";
                };
                readonly is_rerun: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly archived_at: {
                    readonly type: "string";
                };
                readonly terminal_reconciliation_output: {
                    readonly type: "object";
                    readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                    readonly properties: {
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Fraud Risk"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["adverse_action", any];
                                        readonly description: "`adverse_action`";
                                    };
                                };
                            };
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["fraud_tag"];
                            };
                        };
                        readonly output_attributes: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "number";
                                }];
                                readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                            };
                        };
                        readonly matrix_models: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                readonly properties: {
                                    readonly matrix_model_public_version: {
                                        readonly type: "integer";
                                    };
                                    readonly matrix_model_token: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly result: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly enum: readonly ["executed", "not_executed"];
                                        readonly examples: readonly ["completed"];
                                        readonly description: "`executed` `not_executed`";
                                    };
                                    readonly x_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "x-coordinate of the matrix";
                                    };
                                    readonly x_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly y_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "y-coordinate of the matrix";
                                    };
                                    readonly y_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly application_meta: {
                    readonly type: "object";
                    readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                    readonly additionalProperties: true;
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly rerun: {
                            readonly description: "Rerun information";
                            readonly type: "object";
                            readonly properties: {
                                readonly initiated_by: {
                                    readonly type: "string";
                                    readonly enum: readonly ["api", "dashboard"];
                                    readonly examples: readonly ["dashboard"];
                                    readonly description: "`api` `dashboard`";
                                };
                                readonly previous_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                                readonly root_external_group_id: {
                                    readonly type: "string";
                                };
                                readonly root_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                            };
                        };
                        readonly events: {
                            readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_application_event_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["alert", "application"];
                                        readonly description: "`alert` `application`";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                        readonly examples: readonly ["started_application"];
                                        readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                    };
                                    readonly external_partner_id: {
                                        readonly type: "string";
                                    };
                                    readonly external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly reason: {
                                        readonly type: "string";
                                    };
                                    readonly reasons: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly timestamp: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1634059958414];
                                    };
                                    readonly outcome: {
                                        readonly type: "string";
                                        readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                    };
                                    readonly evaluation_token: {
                                        readonly type: "string";
                                        readonly description: "Identifying evaluation token (only in evaluation type events)";
                                    };
                                    readonly entity_token: {
                                        readonly type: "string";
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                    };
                                    readonly error_data: {
                                        readonly type: "object";
                                        readonly description: "Additional error data populated when available for `error` event types";
                                        readonly properties: {
                                            readonly error: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly details: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly message: {
                                                        readonly type: "string";
                                                    };
                                                    readonly minor_code: {
                                                        readonly type: "integer";
                                                    };
                                                    readonly error_token: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly timestamp: {
                                                readonly type: "integer";
                                            };
                                            readonly status_code: {
                                                readonly type: "integer";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                            readonly evaluation_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_version_id: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                    readonly _embedded: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly node: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["1632850505316"];
                                                    };
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                        readonly examples: readonly ["workflow"];
                                                        readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                    };
                                                    readonly config: {
                                                        readonly description: "Config related to the specific node, depending on the type";
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly workflow_name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sdk_config: {
                                                        readonly type: "object";
                                                        readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                        readonly properties: {
                                                            readonly documents: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                            readonly selfie: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly evaluation: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly case: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly journey: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["application", "alert"];
                                    readonly examples: readonly ["application"];
                                    readonly description: "`application` `alert`";
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                };
                                readonly journey_version_num: {
                                    readonly type: "string";
                                };
                                readonly _links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly self: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly href: {
                                                    readonly type: "string";
                                                    readonly description: "GET route for the Journey";
                                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                };
                                            };
                                        };
                                        readonly callback_by_entity_application_token: {
                                            readonly type: "object";
                                            readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                };
                            };
                        };
                        readonly child_entities: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                        readonly examples: readonly ["external_entity_id123"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["person"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_branch_name: {
                                        readonly type: "string";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                    };
                                    readonly sandbox_persona_name: {
                                        readonly type: "string";
                                        readonly description: "When applicable, name of sandbox persona used for this child entity";
                                    };
                                };
                            };
                        };
                        readonly entity_applications: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly entity_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_status_details: {
                                        readonly type: "object";
                                        readonly description: "Additional details for applications that have status `data_request`";
                                        readonly properties: {
                                            readonly required: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly or: {
                                                readonly type: "string";
                                            };
                                            readonly optional: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly output: {
                                        readonly type: "object";
                                        readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                        readonly properties: {
                                            readonly outcome_reasons: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Fraud Risk"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["adverse_action", any];
                                                            readonly description: "`adverse_action`";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly tags: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["fraud_tag"];
                                                };
                                            };
                                            readonly output_attributes: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }];
                                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                };
                                            };
                                            readonly matrix_models: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "object";
                                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                    readonly properties: {
                                                        readonly matrix_model_public_version: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly matrix_model_token: {
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly result: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly status: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["executed", "not_executed"];
                                                            readonly examples: readonly ["completed"];
                                                            readonly description: "`executed` `not_executed`";
                                                        };
                                                        readonly x_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "x-coordinate of the matrix";
                                                        };
                                                        readonly x_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly y_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "y-coordinate of the matrix";
                                                        };
                                                        readonly y_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly entity: {
                            readonly description: "The journey application entity";
                            readonly type: "object";
                            readonly properties: {
                                readonly external_entity_identifier: {
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly examples: readonly ["group"];
                                };
                            };
                        };
                        readonly multi_environment_config: {
                            readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                            readonly type: "object";
                            readonly properties: {
                                readonly multi_environment_config_token: {
                                    readonly type: "string";
                                };
                                readonly multi_environment_config_notes: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "string";
                                    readonly examples: readonly [1634059958368];
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_public_version: {
                                    readonly type: "number";
                                };
                                readonly actions: {
                                    readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly journey_action_id: {
                                                readonly type: "number";
                                            };
                                            readonly action_version: {
                                                readonly type: "number";
                                            };
                                            readonly action_name: {
                                                readonly type: "string";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                                readonly workflows: {
                                    readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly workflow_name: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_node_type: {
                                                readonly description: "The type of node this workflow is used as, for example Step Up";
                                                readonly type: "string";
                                            };
                                            readonly workflow_token: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_public_version: {
                                                readonly type: "number";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                readonly type: "string";
                                            };
                                            readonly configured_services: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly service_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly has_credentials: {
                                                            readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly sandbox: {
                                                            readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly credentials_description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly is_pending_additional_entities: {
                            readonly type: "boolean";
                            readonly default: false;
                            readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "GET route for the Application";
                                    readonly type: "string";
                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly title: "Request Body Failure";
                readonly properties: {
                    readonly status_code: {
                        readonly type: "string";
                        readonly examples: readonly [400];
                    };
                    readonly error: {
                        readonly type: "object";
                        readonly properties: {
                            readonly minor_code: {
                                readonly type: "number";
                                readonly examples: readonly [4003];
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly message: {
                                readonly type: "string";
                            };
                            readonly details: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly error_token: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly timestamp: {
                        readonly type: "number";
                        readonly examples: readonly [1725386185011];
                    };
                    readonly evaluation_token: {
                        readonly type: "string";
                        readonly examples: readonly ["L-5zKNd6TaKRoUILGAFTD6"];
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly examples: readonly ["P-A7dEY59iV6SZhLKGq812"];
                    };
                    readonly application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["nsDnk3oWWaKg2doAv9RWGrRnPOPs126X"];
                    };
                    readonly application_version_id: {
                        readonly type: "string";
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [401];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4011];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Unauthorized"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Your supplied credentials are invalid."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725393617598];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [404];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["J-dT8zCu7TQo5tfXzSgrBX"];
                                };
                                readonly journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-mmVXL2SMEfVQ2pZhszlGX"];
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["1731f999-7390-4e28-be34-9bbbee5251a2"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["nsDnk3oWWaKg2doAv9RWGrRnPOPsy1fX"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [500];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5000];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["31e6e353-e62b-4fe2-be16-ea37ea9a992c"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "503": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [503];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5031];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Oops our database server is unreachable. The engineers have been notified."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysJourneyTokenApplicationsJourneyApplicationTokenNotes: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly note: {
                        readonly type: "string";
                        readonly description: "The text content of the note being added to the Journey Application";
                    };
                    readonly note_author_agent_email: {
                        readonly type: "string";
                        readonly description: "Email address of the agent that created the note";
                        readonly examples: readonly ["matt@alloy.com"];
                    };
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly description: "Token associated with your Journey Application";
                        readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    };
                    readonly created_at: {
                        readonly type: "string";
                        readonly description: "Timestamp of when the Journey Application was created";
                    };
                    readonly updated_at: {
                        readonly type: "string";
                        readonly description: "Timestamp of when the Journey Application was last updated";
                    };
                    readonly deleted_at: {
                        readonly type: "string";
                        readonly description: "Timestamp of when the Journey Application was deleted";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysJourneyTokenBatchesJourneyBatchToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey";
                };
                readonly journey_batch_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JB-NOGIVYpdGJ3IG5kQXlpc"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey application batch";
                };
            };
            readonly required: readonly ["journey_token", "journey_batch_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_batch_status: {
                    readonly type: "string";
                    readonly enum: readonly ["pending", "complete", "failed", "pre_run"];
                    readonly description: "Current status of batch\n\n`pending` `complete` `failed` `pre_run`";
                };
                readonly journey_batch_token: {
                    readonly type: "string";
                    readonly description: "Unique identifier for newly created batch";
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "Link to journey batch";
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly applications: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "Link to batch journey applications";
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly error: {
                    readonly type: "string";
                };
                readonly completed_at: {
                    readonly type: "number";
                    readonly description: "Timestamp of batch completion";
                };
                readonly created_at: {
                    readonly type: "number";
                    readonly description: "Timestamp of batch creation";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly status: {
                            readonly type: "object";
                            readonly properties: {
                                readonly queued: {
                                    readonly type: "number";
                                };
                                readonly running: {
                                    readonly type: "number";
                                };
                                readonly waiting_review: {
                                    readonly type: "number";
                                };
                                readonly error: {
                                    readonly type: "number";
                                };
                                readonly completed: {
                                    readonly type: "number";
                                };
                                readonly data_request: {
                                    readonly type: "number";
                                };
                                readonly pending_action: {
                                    readonly type: "number";
                                };
                                readonly pending_documents: {
                                    readonly type: "number";
                                };
                                readonly withdrawn: {
                                    readonly type: "number";
                                };
                                readonly pending_journey_application_review: {
                                    readonly type: "number";
                                };
                                readonly pending_additional_entities: {
                                    readonly type: "number";
                                };
                                readonly pending_step_up: {
                                    readonly type: "number";
                                };
                                readonly pending_workflow_service: {
                                    readonly type: "number";
                                };
                                readonly expired: {
                                    readonly type: "number";
                                };
                                readonly pending_reconciliation: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly task_status: {
                            readonly type: "object";
                            readonly properties: {
                                readonly response_returned: {
                                    readonly type: "number";
                                };
                                readonly application_failed: {
                                    readonly type: "number";
                                };
                                readonly pending: {
                                    readonly type: "number";
                                };
                                readonly timed_out: {
                                    readonly type: "number";
                                };
                            };
                        };
                        readonly total_records: {
                            readonly type: "number";
                            readonly description: "Number of tasks in the batch";
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysJourneyTokenBatchesJourneyBatchTokenApplications: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey";
                };
                readonly journey_batch_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JB-NOGIVYpdGJ3IG5kQXlpc"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey application batch";
                };
            };
            readonly required: readonly ["journey_token", "journey_batch_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly type: "number";
                    readonly examples: readonly [1];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which page number to return. Default is 1";
                };
                readonly per_page: {
                    readonly type: "number";
                    readonly examples: readonly [1000];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "How many results per page to return. Default/maximum is 1000";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_batch_status: {
                    readonly type: "string";
                    readonly enum: readonly ["pending", "complete", "failed", "pre_run"];
                    readonly description: "Current status of batch\n\n`pending` `complete` `failed` `pre_run`";
                };
                readonly journey_batch_token: {
                    readonly type: "string";
                    readonly description: "Unique identifier for newly created batch";
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "Link to journey batch";
                                    readonly type: "string";
                                };
                                readonly journey_batch: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly href: {
                                            readonly description: "Link to batch journey applications";
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                readonly error: {
                    readonly type: "string";
                };
                readonly status_code: {
                    readonly type: "number";
                    readonly description: "Status code for batch execution";
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly journey_applications: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_application_token: {
                                        readonly type: "string";
                                    };
                                    readonly sandbox: {
                                        readonly type: "boolean";
                                    };
                                    readonly created_at: {
                                        readonly type: "string";
                                    };
                                    readonly recent_outcome: {
                                        readonly type: "string";
                                    };
                                    readonly complete_outcome: {
                                        readonly type: "string";
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                    };
                                    readonly task_status: {
                                        readonly type: "string";
                                    };
                                    readonly external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly journey_application_status: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly page: {
                    readonly type: "number";
                    readonly default: 1;
                    readonly description: "Default is 1";
                };
                readonly per_page: {
                    readonly type: "number";
                    readonly default: 1000;
                    readonly description: "Default/maximum is 1000";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetJourneysJourneyTokenParameters: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
            };
            readonly required: readonly ["journey_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-journey-version": {
                    readonly type: "number";
                    readonly description: "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n";
                    readonly examples: readonly [1];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                };
                readonly journey_version: {
                    readonly type: "string";
                };
                readonly timestamp: {
                    readonly type: "integer";
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly branch_name: {
                                readonly type: "string";
                            };
                            readonly workflows: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly workflow_name: {
                                            readonly type: "string";
                                        };
                                        readonly parameters: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly required: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly optional: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly or: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLists: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [200];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly list_token: {
                                readonly type: "string";
                                readonly examples: readonly ["I-o2RgMSb72V1p8834bokr"];
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly examples: readonly ["Allowlist"];
                            };
                            readonly is_blacklist: {
                                readonly type: "boolean";
                            };
                            readonly is_whitelist: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly description: {
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly examples: readonly ["2024-02-23T16:52:36.957Z"];
                            };
                            readonly entities_count: {
                                readonly type: "number";
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetListsListToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly list_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of List to operate on";
                };
            };
            readonly required: readonly ["list_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly records: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of records to retrieve";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Offset of retrieved records";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [200];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Denylisted entities"];
                };
                readonly list_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-23jkr423ojdfn23jon"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly status_code: {
                                readonly type: "number";
                                readonly examples: readonly [200];
                            };
                            readonly error: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly timestamp: {
                                readonly type: "integer";
                                readonly examples: readonly [1557675468774];
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly examples: readonly ["Denylisted entities"];
                            };
                            readonly list_token: {
                                readonly type: "string";
                                readonly examples: readonly ["I-grYZsEoy623M3LiZrK66"];
                            };
                            readonly data: {
                                readonly type: "string";
                                readonly examples: readonly ["https://sandbox.alloy.co/lists/I-grYZsEoy623M3LiZrK66"];
                            };
                            readonly records_added: {
                                readonly type: "integer";
                                readonly examples: readonly [1];
                            };
                            readonly total_records: {
                                readonly type: "integer";
                                readonly examples: readonly [1];
                            };
                        };
                    };
                };
                readonly paging: {
                    readonly type: "object";
                    readonly properties: {
                        readonly next: {
                            readonly type: "string";
                            readonly examples: readonly ["api.alloy.co/lists/I-23jkr423ojdfn23jon?records=2&offset=4"];
                        };
                        readonly previous: {
                            readonly type: "string";
                            readonly examples: readonly ["api.alloy.co/lists/I-23jkr423ojdfn23jon?records=2&offset=0"];
                        };
                        readonly total_records: {
                            readonly type: "integer";
                            readonly examples: readonly [1];
                        };
                        readonly page_records: {
                            readonly type: "integer";
                            readonly examples: readonly [20];
                        };
                        readonly offset: {
                            readonly type: "integer";
                            readonly examples: readonly [20];
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetParameters: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly required: {
                    readonly type: "array";
                    readonly description: "The required fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["name_first"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["First name"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly ["^[^d]*$"];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
                readonly optional: {
                    readonly type: "array";
                    readonly description: "The optional fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["email_address"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["Email address"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly [""];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
                readonly or: {
                    readonly type: "array";
                    readonly description: "Fields that may be required for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly required: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly key: {
                                            readonly type: "string";
                                            readonly examples: readonly ["document_license"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["string"];
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                            readonly examples: readonly ["US issued drivers license number"];
                                        };
                                        readonly regex: {
                                            readonly type: "string";
                                            readonly examples: readonly [""];
                                        };
                                        readonly properties: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPublishedAttributes: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly published_attributes: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "An array of published attributes.";
                        readonly type: "object";
                        readonly properties: {
                            readonly archived: {
                                readonly type: "boolean";
                                readonly description: "indicates whether the published attribute has been archived";
                            };
                            readonly published_attribute_token: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "An Alloy system generated unique ID for the published attribute.";
                                readonly examples: readonly ["PA-54eKJIaGGzXdJcyBgrqK"];
                            };
                            readonly published_attribute_name: {
                                readonly description: "The name of the published attribute. If the published attribute is an input attribute in a workflow, this name will serve as the selector in the Evaluation payload.";
                                readonly type: "string";
                                readonly examples: readonly ["meta.income"];
                            };
                            readonly data_type: {
                                readonly description: "The data type of the published attribute.\n\n`integer` `decimal` `string` `boolean` `date` `timestamp`";
                                readonly type: "string";
                                readonly enum: readonly ["integer", "decimal", "string", "boolean", "date", "timestamp"];
                                readonly examples: readonly ["integer"];
                            };
                            readonly default_value: {
                                readonly description: "A default value is assigned to the published attribute for each object of the `object_type`. If the published attribute is being used as an input attribute, then this value will be used if there is no value provided in the evaluation payload.";
                                readonly anyOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "number";
                                }, {
                                    readonly type: "boolean";
                                }];
                                readonly examples: readonly ["100000,"];
                            };
                            readonly default_value_note: {
                                readonly description: "A description of the default value.";
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["base income"];
                            };
                            readonly contains_pii: {
                                readonly description: "This is set to true when the published attribute contains PII. If it's true this field will be stored encrypted. Unable to be changed once set.";
                                readonly type: "boolean";
                            };
                            readonly object_type: {
                                readonly description: "The object type to which this published attribute applies. Currently only entity is supported.\n\n`entity`";
                                readonly type: "string";
                                readonly enum: readonly ["entity"];
                                readonly examples: readonly ["entity"];
                            };
                            readonly value_expires_in: {
                                readonly description: "The number of seconds that this published attribute's values will persist for.";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly jq_filter: {
                                readonly description: "A way to transform JSON using the jq cli tool.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly description: {
                                readonly description: "A description of the published attribute.";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPublishedAttributesPublishedAttributeToken: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "published-attribute-token": {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Published attribute token associated with published attribute. Token is available via the Published Attribute List on the Settings page of the dashboard if needed.";
                };
            };
            readonly required: readonly ["published-attribute-token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly published_attributes: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "An array of published attributes.";
                        readonly type: "object";
                        readonly properties: {
                            readonly archived: {
                                readonly type: "boolean";
                                readonly description: "indicates whether the published attribute has been archived";
                            };
                            readonly published_attribute_token: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "An Alloy system generated unique ID for the published attribute.";
                                readonly examples: readonly ["PA-54eKJIaGGzXdJcyBgrqK"];
                            };
                            readonly published_attribute_name: {
                                readonly description: "The name of the published attribute. If the published attribute is an input attribute in a workflow, this name will serve as the selector in the Evaluation payload.";
                                readonly type: "string";
                                readonly examples: readonly ["meta.income"];
                            };
                            readonly data_type: {
                                readonly description: "The data type of the published attribute.\n\n`integer` `decimal` `string` `boolean` `date` `timestamp`";
                                readonly type: "string";
                                readonly enum: readonly ["integer", "decimal", "string", "boolean", "date", "timestamp"];
                                readonly examples: readonly ["integer"];
                            };
                            readonly default_value: {
                                readonly description: "A default value is assigned to the published attribute for each object of the `object_type`. If the published attribute is being used as an input attribute, then this value will be used if there is no value provided in the evaluation payload.";
                                readonly anyOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "number";
                                }, {
                                    readonly type: "boolean";
                                }];
                                readonly examples: readonly ["100000,"];
                            };
                            readonly default_value_note: {
                                readonly description: "A description of the default value.";
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["base income"];
                            };
                            readonly contains_pii: {
                                readonly description: "This is set to true when the published attribute contains PII. If it's true this field will be stored encrypted. Unable to be changed once set.";
                                readonly type: "boolean";
                            };
                            readonly object_type: {
                                readonly description: "The object type to which this published attribute applies. Currently only entity is supported.\n\n`entity`";
                                readonly type: "string";
                                readonly enum: readonly ["entity"];
                                readonly examples: readonly ["entity"];
                            };
                            readonly value_expires_in: {
                                readonly description: "The number of seconds that this published attribute's values will persist for.";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly jq_filter: {
                                readonly description: "A way to transform JSON using the jq cli tool.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly description: {
                                readonly description: "A description of the published attribute.";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [404];
                };
                readonly timestamp: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly description: "The minor code associated with the error.";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly description: "The type of error.";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly description: "A message indicating what the error is.";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly description: "The details of the error.";
                            readonly additionalProperties: true;
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPublishedAttributesPublishedAttributeTokenValues: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "published-attribute-token": {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Published attribute token associated with published attribute.";
                };
            };
            readonly required: readonly ["published-attribute-token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The page number to return.";
                };
                readonly per_page: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The number of items per page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-entity-token": {
                    readonly type: "string";
                    readonly description: "An Alloy-generated string to identify the entity.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-external-entity-id": {
                    readonly type: "string";
                    readonly description: "A client-generated string to identify the entity.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly values: {
                    readonly type: "object";
                    readonly description: "The values of a published attribute by entity, sorted by the most recent timestamp.";
                    readonly properties: {
                        readonly value: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "number";
                            }, {
                                readonly type: "boolean";
                            }];
                            readonly description: "The published attribute's value must be one of the following types:\n  * Option 1: string\n  * Option 2: number\n  * Option 3: boolean\n";
                        };
                        readonly entity_token: {
                            readonly type: "string";
                            readonly description: "Alloy-generated identifier for the entity that you want to set this published attribute's value for.";
                        };
                        readonly timestamp: {
                            readonly description: "ISO 8601 date. Used to determine the most recent value of the published attribute, which will be used in the evaluation. If not provided, defaults to the current date time.";
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly expires_at: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly nullable: true;
                            readonly description: "The date and time the published attribute value expires";
                            readonly readOnly: true;
                        };
                        readonly created_at: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly description: "The date and time the published attribute value was created.";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly page: {
                    readonly type: "integer";
                    readonly description: "Pagination number.";
                    readonly examples: readonly [1];
                };
                readonly per_page: {
                    readonly type: "integer";
                    readonly description: "The number of published attribute values to show per page.";
                    readonly examples: readonly [1000];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [400];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "string";
                    readonly examples: readonly [1694013116568];
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["pQRTFSwRECWDgql5s6vrkPB0cv97LF8t"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [404];
                };
                readonly timestamp: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly description: "The minor code associated with the error.";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly description: "The type of error.";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly description: "A message indicating what the error is.";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly description: "The details of the error.";
                            readonly additionalProperties: true;
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetTransactionsTransactionId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly transaction_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique external identifier for the transaction.";
                };
            };
            readonly required: readonly ["transaction_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly external_transaction_id: {
                    readonly description: "Unique external identifier for the transaction.";
                    readonly type: "string";
                };
                readonly amount: {
                    readonly description: "Amount in cents. +/- indicate direction of funds.";
                    readonly type: "integer";
                };
                readonly currency: {
                    readonly description: "3-character currency code (e.g. \"USD\")";
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly external_entity_id: {
                    readonly type: "string";
                };
                readonly external_account_id: {
                    readonly type: "string";
                };
                readonly account_token: {
                    readonly type: "string";
                };
                readonly counterparty: {
                    readonly type: "object";
                    readonly anyOf: readonly [{
                        readonly title: "Specify Account Number";
                        readonly required: readonly ["account_number"];
                        readonly properties: {
                            readonly external_counterparty_id: {
                                readonly type: "string";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly counterparty_type: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly merchant_category_code: {
                                readonly type: "string";
                            };
                            readonly name_on_card: {
                                readonly type: "string";
                            };
                            readonly avs: {
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly type: "string";
                            };
                            readonly merchant_category_description: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Specify External Counterparty ID";
                        readonly required: readonly ["external_counterparty_id"];
                        readonly properties: {
                            readonly external_counterparty_id: {
                                readonly type: "string";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly counterparty_type: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly merchant_category_code: {
                                readonly type: "string";
                            };
                            readonly name_on_card: {
                                readonly type: "string";
                            };
                            readonly avs: {
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly type: "string";
                            };
                            readonly merchant_category_description: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                        };
                        readonly type: "object";
                    }];
                };
                readonly category: {
                    readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)\n\n`Adjustment` `ATM Rebate` `Bill Pay` `Deposit` `Direct Deposit Bonus` `Interest` `Overdraft Fee` `Payment` `Promo` `Purchase` `Purchase Return` `Return` `Service Charge` `Withdrawal`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                };
                readonly transaction_settled_date: {
                    readonly description: "ISO 8601 date. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly description: {
                    readonly description: "A description of the transaction. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly type_code: {
                    readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                    readonly type: readonly ["string", "null"];
                };
                readonly type_description: {
                    readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly is_approved: {
                    readonly description: "If the transaction was approved by the customer";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_reversal: {
                    readonly description: "If the transaction is a refund";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly process_method: {
                    readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`, `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)\n\n`Card` `Internal` `Check` `P2P` `ACH` `Cash` `Wire`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Card", "Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                };
                readonly is_triggered_by_user: {
                    readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly interaction_point: {
                    readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)\n\n`Android` `ATM` `Card Swipe Terminal` `iOS` `Mobile` `Online Form` `Point of Sale` `Teller` `3rd Party App`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                };
                readonly return_code: {
                    readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                    readonly type: readonly ["string", "null"];
                };
                readonly return_code_reason: {
                    readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.\n\n`Unauthorized`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Unauthorized"];
                };
                readonly status: {
                    readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)\n\n`Acknowledged` `Accepted` `Rejected` `Paused` `Pending` `Completed` `Declined` `Cancelled`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
                };
                readonly status_detail: {
                    readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly response_code: {
                    readonly description: "Response codes returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly iso_message: {
                    readonly description: "ISO standard value returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly entry_mode: {
                    readonly description: "POS entry modes on card transactions";
                    readonly type: readonly ["number", "null"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchAccountsBankAccountToken: {
    readonly body: {
        readonly properties: {
            readonly entities: {
                readonly description: "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)";
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly required: readonly ["account_holder_type"];
                    readonly properties: {
                        readonly entity_token: {
                            readonly type: "string";
                            readonly description: "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both.";
                        };
                        readonly external_entity_id: {
                            readonly type: "string";
                            readonly description: "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both.";
                            readonly examples: readonly ["entity-01"];
                        };
                        readonly account_holder_type: {
                            readonly type: "string";
                            readonly enum: readonly ["primary", "secondary"];
                            readonly examples: readonly ["primary"];
                        };
                    };
                };
            };
            readonly bank_account_token: {
                readonly description: "Alloy-generated unique identifier for the account";
                readonly type: "string";
                readonly readOnly: true;
            };
            readonly external_account_id: {
                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                readonly type: "string";
                readonly maxLength: 60;
                readonly examples: readonly ["test-account-001"];
            };
            readonly account_number: {
                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                readonly type: "string";
            };
            readonly account_class: {
                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                readonly type: "string";
                readonly enum: readonly ["deposit", "credit", "brokerage"];
                readonly examples: readonly ["deposit"];
            };
            readonly account_name: {
                readonly description: "Name of the account.";
                readonly type: "string";
            };
            readonly routing_number: {
                readonly description: "Routing number associated with the account.";
                readonly type: "string";
            };
            readonly account_type: {
                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["merchant account", "person"];
            };
            readonly is_linked_account: {
                readonly description: "Determines whether the account is a funding source or linked account.";
                readonly type: readonly ["boolean", "null"];
            };
            readonly link_timestamp: {
                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                readonly type: readonly ["string", "null"];
                readonly format: "date-time";
            };
            readonly unlink_timestamp: {
                readonly description: "ISO 8601 date. Cannot be future-dated.";
                readonly type: readonly ["string", "null"];
                readonly format: "date-time";
            };
            readonly opening_date: {
                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly country_code: {
                readonly type: readonly ["string", "null"];
                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                readonly maxLength: 2;
            };
            readonly account_snapshot: {
                readonly type: readonly ["object", "null"];
                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                readonly required: readonly ["timestamp"];
                readonly properties: {
                    readonly timestamp: {
                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                        readonly type: "string";
                        readonly format: "date";
                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                    };
                    readonly meta: {
                        readonly description: "JSON object with any meta information related to the account snpashot.";
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly details: {
                        readonly description: "JSON object with any details related to the account snapshot.";
                        readonly type: "object";
                        readonly properties: {
                            readonly status: {
                                readonly type: "string";
                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                readonly examples: readonly ["Active"];
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly loan_credit_limit: {
                                readonly type: "integer";
                            };
                            readonly interest_rate: {
                                readonly type: "number";
                            };
                            readonly original_interest_rate: {
                                readonly type: "number";
                            };
                            readonly original_amount: {
                                readonly type: "integer";
                            };
                            readonly ach_push_limit: {
                                readonly type: "integer";
                            };
                            readonly ach_pull_limit: {
                                readonly type: "integer";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly email_address: {
                                readonly type: "string";
                            };
                            readonly phone_number: {
                                readonly type: "string";
                            };
                            readonly mailing_address_line1: {
                                readonly type: "string";
                            };
                            readonly mailing_address_line2: {
                                readonly type: "string";
                            };
                            readonly mailing_address_city: {
                                readonly type: "string";
                            };
                            readonly mailing_address_state: {
                                readonly type: "string";
                            };
                            readonly mailing_address_postal_code: {
                                readonly type: "string";
                            };
                            readonly mailing_address_country_code: {
                                readonly description: "3-character country code (e.g. \"USA\")";
                                readonly type: "string";
                            };
                            readonly primary_address_line1: {
                                readonly type: "string";
                            };
                            readonly primary_address_line2: {
                                readonly type: "string";
                            };
                            readonly primary_address_city: {
                                readonly type: "string";
                            };
                            readonly primary_address_state: {
                                readonly type: "string";
                            };
                            readonly primary_address_postal_code: {
                                readonly type: "string";
                            };
                            readonly primary_address_country_code: {
                                readonly description: "3-character country code (e.g. \"USA\").";
                                readonly type: "string";
                                readonly maxLength: 3;
                            };
                        };
                    };
                    readonly account_view: {
                        readonly description: "JSON object";
                        readonly type: "object";
                        readonly properties: {
                            readonly account_balance: {
                                readonly description: "Account balance in cents.";
                                readonly type: "integer";
                            };
                            readonly date_last_activity: {
                                readonly description: "ISO 8601 timestamp of last activity.";
                                readonly type: "string";
                            };
                            readonly is_good_standing: {
                                readonly type: "boolean";
                            };
                            readonly past_due_days: {
                                readonly type: "integer";
                            };
                        };
                    };
                };
            };
            readonly product_code: {
                readonly description: "Identifier of the product name.";
                readonly type: readonly ["string", "null"];
            };
            readonly product_name: {
                readonly description: "Name of the product associated with the account.";
                readonly type: readonly ["string", "null"];
            };
            readonly product_number: {
                readonly type: readonly ["string", "null"];
                readonly description: "Product number that corresponds to the product_name associated with the account.";
            };
            readonly maturity_date: {
                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly closing_date: {
                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly cif_number: {
                readonly type: readonly ["string", "null"];
                readonly description: "Unique identifier used by bank cores to refer to a customer.";
            };
            readonly card_network: {
                readonly type: readonly ["string", "null"];
                readonly description: "Card network of the card that was used in this transaction.";
                readonly maxLength: 20;
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
            };
            readonly tokenization_method: {
                readonly type: readonly ["string", "null"];
                readonly description: "method of tokenization used to anonymize account information.";
                readonly maxLength: 20;
            };
            readonly merchant_category_code: {
                readonly type: readonly ["string", "null"];
                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                readonly maxLength: 20;
            };
            readonly name_on_card: {
                readonly type: readonly ["string", "null"];
                readonly description: "ame on the card used in this transaction.";
                readonly maxLength: 100;
            };
            readonly account_number_last4: {
                readonly type: readonly ["string", "null"];
                readonly description: "Last four digits of account number";
                readonly maxLength: 4;
            };
            readonly avs: {
                readonly type: readonly ["string", "null"];
                readonly description: "Verifies the numeric portions of the address against the billing address.";
                readonly maxLength: 20;
            };
            readonly currency: {
                readonly type: readonly ["string", "null"];
                readonly description: "ISO-4217 currency code.";
                readonly maxLength: 4;
            };
            readonly meta: {
                readonly description: "JSON object with any meta information related to the account";
                readonly type: readonly ["object", "null"];
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly bank_account_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["bank_account_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly entities: {
                    readonly description: "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["account_holder_type"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both.";
                                readonly examples: readonly ["P-MSBW0ff3TQG7IYPvaoHs"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both.";
                                readonly examples: readonly ["entity-01"];
                            };
                            readonly account_holder_type: {
                                readonly type: "string";
                                readonly enum: readonly ["primary", "secondary"];
                                readonly examples: readonly ["primary"];
                                readonly description: "`primary` `secondary`";
                            };
                        };
                    };
                };
                readonly bank_account_token: {
                    readonly description: "Alloy-generated unique identifier for the account";
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly examples: readonly ["A-P1HmBXO3a2lElibmotg7"];
                };
                readonly external_account_id: {
                    readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                    readonly type: "string";
                    readonly maxLength: 60;
                    readonly examples: readonly ["test-account-001"];
                };
                readonly account_number: {
                    readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                    readonly type: "string";
                };
                readonly account_class: {
                    readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                    readonly type: "string";
                    readonly enum: readonly ["deposit", "credit", "brokerage"];
                    readonly examples: readonly ["deposit"];
                };
                readonly account_name: {
                    readonly description: "Name of the account.";
                    readonly type: "string";
                };
                readonly routing_number: {
                    readonly description: "Routing number associated with the account.";
                    readonly type: "string";
                };
                readonly account_type: {
                    readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["merchant account", "person"];
                };
                readonly is_linked_account: {
                    readonly description: "Determines whether the account is a funding source or linked account.";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly link_timestamp: {
                    readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlink_timestamp: {
                    readonly description: "ISO 8601 date. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly opening_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly country_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                    readonly maxLength: 2;
                };
                readonly account_snapshot: {
                    readonly type: readonly ["object", "null"];
                    readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                    readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly product_code: {
                    readonly description: "Identifier of the product name.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_name: {
                    readonly description: "Name of the product associated with the account.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Product number that corresponds to the product_name associated with the account.";
                };
                readonly maturity_date: {
                    readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly closing_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly cif_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Unique identifier used by bank cores to refer to a customer.";
                };
                readonly card_network: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Card network of the card that was used in this transaction.";
                    readonly maxLength: 20;
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                };
                readonly tokenization_method: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "method of tokenization used to anonymize account information.";
                    readonly maxLength: 20;
                };
                readonly merchant_category_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                    readonly maxLength: 20;
                };
                readonly name_on_card: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ame on the card used in this transaction.";
                    readonly maxLength: 100;
                };
                readonly account_number_last4: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Last four digits of account number";
                    readonly maxLength: 4;
                };
                readonly avs: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Verifies the numeric portions of the address against the billing address.";
                    readonly maxLength: 20;
                };
                readonly currency: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ISO-4217 currency code.";
                    readonly maxLength: 4;
                    readonly examples: readonly ["USD"];
                };
                readonly meta: {
                    readonly description: "JSON object with any meta information related to the account";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchEntitiesBusinessesEntityToken: {
    readonly body: {
        readonly properties: {
            readonly external_entity_id: {
                readonly type: "string";
                readonly examples: readonly ["087ac67e-17ab-4529-8d1a-a8b2214d305f"];
            };
            readonly business_name: {
                readonly type: "string";
                readonly examples: readonly ["Alloy"];
            };
            readonly business_alternate_name: {
                readonly type: "string";
                readonly examples: readonly ["DBA First Mile Group"];
            };
            readonly business_registry_id: {
                readonly type: "string";
                readonly examples: readonly ["123456789"];
            };
            readonly business_federal_ein: {
                readonly type: "string";
                readonly examples: readonly ["987654321"];
            };
            readonly addresses: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly emails: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email_address: {
                            readonly type: "string";
                            readonly examples: readonly ["safeandseamless@alloy.com"];
                        };
                    };
                };
            };
            readonly phones: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly phone_number: {
                            readonly type: "string";
                            readonly examples: readonly ["555-000-1234"];
                        };
                    };
                };
            };
            readonly pii_status: {
                readonly type: "string";
                readonly enum: readonly ["successful", "failed", "pending"];
                readonly examples: readonly ["successful"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Business token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["B-aCF4FAkGKiTIZJFhproR"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["087ac67e-17ab-4529-8d1a-a8b2214d305f"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly business_name: {
                    readonly type: "string";
                    readonly examples: readonly ["Alloy"];
                };
                readonly business_alternate_name: {
                    readonly type: "string";
                    readonly examples: readonly ["DBA First Mile Group"];
                };
                readonly business_registry_id: {
                    readonly type: "string";
                    readonly examples: readonly ["123456789"];
                };
                readonly business_federal_ein: {
                    readonly type: "string";
                    readonly examples: readonly ["987654321"];
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["safeandseamless@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["5550001234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["business"];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchEntitiesEntityTokenDocumentsDocumentToken: {
    readonly body: {
        readonly required: readonly ["approved", "type", "approval_agent_email", "name"];
        readonly properties: {
            readonly approved: {
                readonly type: "boolean";
            };
            readonly type: {
                readonly type: "string";
            };
            readonly approval_agent_email: {
                readonly type: "string";
            };
            readonly name: {
                readonly type: "string";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with document.";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["document_token", "entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly document_token: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly extension: {
                        readonly type: "string";
                    };
                    readonly uploaded: {
                        readonly type: "boolean";
                    };
                    readonly timestamp: {
                        readonly type: "number";
                    };
                    readonly approved: {
                        readonly type: "string";
                    };
                    readonly approval_agent_email: {
                        readonly type: "string";
                    };
                    readonly approval_timestamp: {
                        readonly type: "number";
                    };
                    readonly notes: {
                        readonly type: "array";
                        readonly items: {
                            readonly properties: {
                                readonly note: {
                                    readonly type: "string";
                                };
                                readonly note_author_agent_email: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "number";
                                };
                                readonly updated_at: {
                                    readonly type: "number";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchEntitiesPersonsEntityToken: {
    readonly body: {
        readonly properties: {
            readonly external_entity_id: {
                readonly type: "string";
                readonly examples: readonly ["person-entity"];
            };
            readonly gender: {
                readonly type: "string";
                readonly examples: readonly ["male"];
            };
            readonly birth_date: {
                readonly type: "string";
                readonly examples: readonly ["1998-02-03"];
            };
            readonly name_first: {
                readonly type: "string";
                readonly examples: readonly ["John"];
            };
            readonly name_middle: {
                readonly type: "string";
            };
            readonly name_last: {
                readonly type: "string";
                readonly examples: readonly ["Doe"];
            };
            readonly document_ssn: {
                readonly type: "string";
                readonly examples: readonly ["123456789"];
            };
            readonly document_id_card: {
                readonly type: "string";
            };
            readonly document_license: {
                readonly type: "string";
            };
            readonly document_passport: {
                readonly type: "string";
            };
            readonly addresses: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly emails: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email_address: {
                            readonly type: "string";
                            readonly examples: readonly ["john@alloy.com"];
                        };
                    };
                };
            };
            readonly phones: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly phone_number: {
                            readonly type: "string";
                            readonly examples: readonly ["555-000-1234"];
                        };
                    };
                };
            };
            readonly pii_status: {
                readonly type: "string";
                readonly enum: readonly ["successful", "failed", "pending"];
                readonly examples: readonly ["successful"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Person token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["P-asldkfhj"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["person-entity"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly gender: {
                    readonly type: "string";
                    readonly examples: readonly ["male"];
                };
                readonly birth_date: {
                    readonly type: "string";
                };
                readonly name_first: {
                    readonly type: "string";
                    readonly examples: readonly ["John"];
                };
                readonly name_middle: {
                    readonly type: "string";
                };
                readonly name_last: {
                    readonly type: "string";
                    readonly examples: readonly ["Doe"];
                };
                readonly document_ssn: {
                    readonly type: "string";
                };
                readonly document_id_card: {
                    readonly type: "string";
                };
                readonly document_license: {
                    readonly type: "string";
                };
                readonly document_passport: {
                    readonly type: "string";
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["john@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["555-000-1234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["person"];
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchEvaluationsEvaluationToken: {
    readonly body: {
        readonly type: "object";
        readonly additionalProperties: true;
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly evaluation_token: {
                    readonly type: "string";
                    readonly examples: readonly ["L-5zKNd6TaKRoUILGAFTD6"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with evaluation.";
                };
            };
            readonly required: readonly ["evaluation_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly required: {
                    readonly type: "array";
                    readonly description: "The required fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["name_first"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["First name"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly ["^[^d]*$"];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
                readonly optional: {
                    readonly type: "array";
                    readonly description: "The optional fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["email_address"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["Email address"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly [""];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "201": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly result: {
                            readonly type: "string";
                        };
                        readonly score: {
                            readonly type: "number";
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome: {
                            readonly type: "string";
                        };
                    };
                };
                readonly supplied: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly matching: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly diligence: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly related_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly raw_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly audit_archive: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchPublishedAttributesPublishedAttributeToken: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly data_type: {
                readonly readOnly: true;
                readonly description: "The data type of the published attribute.";
                readonly type: "string";
                readonly enum: readonly ["integer", "decimal", "string", "boolean", "date", "timestamp"];
            };
            readonly object_type: {
                readonly readOnly: true;
                readonly description: "The object type to which this published attribute applies. Currently only entity is supported.";
                readonly type: "string";
                readonly enum: readonly ["entity"];
            };
            readonly contains_pii: {
                readonly readOnly: true;
                readonly description: "This is set to true when the published attribute contains PII. If it's true this field will be stored encrypted. Unable to be changed once set.";
                readonly type: "boolean";
            };
            readonly published_attribute_name: {
                readonly description: "The name of the published attribute. If the published attribute is an input attribute in a workflow, this name will serve as the selector in the Evaluation payload.";
                readonly type: "string";
            };
            readonly archived: {
                readonly type: "boolean";
                readonly description: "indicates whether the published attribute has been archived";
            };
            readonly published_attribute_token: {
                readonly type: "string";
                readonly readOnly: true;
                readonly description: "An Alloy system generated unique ID for the published attribute.";
            };
            readonly default_value: {
                readonly description: "A default value is assigned to the published attribute for each object of the `object_type`. If the published attribute is being used as an input attribute, then this value will be used if there is no value provided in the evaluation payload.";
                readonly anyOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "number";
                }, {
                    readonly type: "boolean";
                }];
            };
            readonly default_value_note: {
                readonly description: "A description of the default value.";
                readonly type: readonly ["string", "null"];
            };
            readonly value_expires_in: {
                readonly description: "The number of seconds that this published attribute's values will persist for.";
                readonly type: readonly ["integer", "null"];
            };
            readonly jq_filter: {
                readonly description: "A way to transform JSON using the jq cli tool.";
                readonly type: readonly ["string", "null"];
            };
            readonly description: {
                readonly description: "A description of the published attribute.";
                readonly type: readonly ["string", "null"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "published-attribute-token": {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Published attribute token associated with published attribute. Token is available via the Published Attribute List on the Settings page of the dashboard if needed.";
                };
            };
            readonly required: readonly ["published-attribute-token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly published_attribute_token: {
                    readonly type: "string";
                    readonly description: "The published attribute token that was updated.";
                    readonly examples: readonly ["PA-54eKJIaGGzXdJcyBgrqK"];
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "The message signifying that that published attribute was successfully updated.";
                    readonly examples: readonly ["published attribute has been updated"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [404];
                };
                readonly timestamp: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly description: "The minor code associated with the error.";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly description: "The type of error.";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly description: "A message indicating what the error is.";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly description: "The details of the error.";
                            readonly additionalProperties: true;
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PatchTransactionsTransactionId: {
    readonly body: {
        readonly properties: {
            readonly transaction_id: {
                readonly description: "Unique external identifier for the transaction. Required if using counterparty MLA.";
                readonly readOnly: true;
            };
            readonly source: {
                readonly readOnly: true;
                readonly type: "object";
                readonly description: "The account that is being evaluated. Typically this is the account that is owned by your organization.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                readonly anyOf: readonly [{
                    readonly required: readonly ["external_account_id"];
                    readonly properties: {
                        readonly bank_account_token: {
                            readonly description: "Alloy-generated unique identifier for the account";
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly external_account_id: {
                            readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                            readonly type: "string";
                            readonly maxLength: 60;
                        };
                        readonly account_number: {
                            readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                            readonly type: "string";
                            readonly enum: readonly ["deposit", "credit", "brokerage"];
                        };
                        readonly account_name: {
                            readonly description: "Name of the account.";
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly description: "Routing number associated with the account.";
                            readonly type: "string";
                        };
                        readonly account_type: {
                            readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                            readonly type: readonly ["string", "null"];
                            readonly enum: readonly ["merchant account", "person"];
                        };
                        readonly is_linked_account: {
                            readonly description: "Determines whether the account is a funding source or linked account.";
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly link_timestamp: {
                            readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly unlink_timestamp: {
                            readonly description: "ISO 8601 date. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly opening_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly country_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                            readonly maxLength: 2;
                        };
                        readonly account_snapshot: {
                            readonly type: readonly ["object", "null"];
                            readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                            readonly required: readonly ["timestamp"];
                            readonly properties: {
                                readonly timestamp: {
                                    readonly description: "ISO 8601 timestamp of the account snapshot.";
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                                readonly meta: {
                                    readonly description: "JSON object with any meta information related to the account snpashot.";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly details: {
                                    readonly description: "JSON object with any details related to the account snapshot.";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                        };
                                        readonly status_detail: {
                                            readonly type: "string";
                                        };
                                        readonly loan_credit_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_amount: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_push_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_pull_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly email_address: {
                                            readonly type: "string";
                                        };
                                        readonly phone_number: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\")";
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\").";
                                            readonly type: "string";
                                            readonly maxLength: 3;
                                        };
                                    };
                                };
                                readonly account_view: {
                                    readonly description: "JSON object";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly account_balance: {
                                            readonly description: "Account balance in cents.";
                                            readonly type: "integer";
                                        };
                                        readonly date_last_activity: {
                                            readonly description: "ISO 8601 timestamp of last activity.";
                                            readonly type: "string";
                                        };
                                        readonly is_good_standing: {
                                            readonly type: "boolean";
                                        };
                                        readonly past_due_days: {
                                            readonly type: "integer";
                                        };
                                    };
                                };
                            };
                        };
                        readonly product_code: {
                            readonly description: "Identifier of the product name.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_name: {
                            readonly description: "Name of the product associated with the account.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Product number that corresponds to the product_name associated with the account.";
                        };
                        readonly maturity_date: {
                            readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly closing_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly cif_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Unique identifier used by bank cores to refer to a customer.";
                        };
                        readonly card_network: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Card network of the card that was used in this transaction.";
                            readonly maxLength: 20;
                        };
                        readonly expiration_date: {
                            readonly type: readonly ["string", "null"];
                        };
                        readonly tokenization_method: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "method of tokenization used to anonymize account information.";
                            readonly maxLength: 20;
                        };
                        readonly merchant_category_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                            readonly maxLength: 20;
                        };
                        readonly name_on_card: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ame on the card used in this transaction.";
                            readonly maxLength: 100;
                        };
                        readonly account_number_last4: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Last four digits of account number";
                            readonly maxLength: 4;
                        };
                        readonly avs: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Verifies the numeric portions of the address against the billing address.";
                            readonly maxLength: 20;
                        };
                        readonly currency: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ISO-4217 currency code.";
                            readonly maxLength: 4;
                            readonly examples: readonly ["USD"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account";
                            readonly type: readonly ["object", "null"];
                            readonly additionalProperties: true;
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly required: readonly ["account_number"];
                    readonly properties: {
                        readonly bank_account_token: {
                            readonly description: "Alloy-generated unique identifier for the account";
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly external_account_id: {
                            readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                            readonly type: "string";
                            readonly maxLength: 60;
                        };
                        readonly account_number: {
                            readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                            readonly type: "string";
                            readonly enum: readonly ["deposit", "credit", "brokerage"];
                        };
                        readonly account_name: {
                            readonly description: "Name of the account.";
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly description: "Routing number associated with the account.";
                            readonly type: "string";
                        };
                        readonly account_type: {
                            readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                            readonly type: readonly ["string", "null"];
                            readonly enum: readonly ["merchant account", "person"];
                        };
                        readonly is_linked_account: {
                            readonly description: "Determines whether the account is a funding source or linked account.";
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly link_timestamp: {
                            readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly unlink_timestamp: {
                            readonly description: "ISO 8601 date. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly opening_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly country_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                            readonly maxLength: 2;
                        };
                        readonly account_snapshot: {
                            readonly type: readonly ["object", "null"];
                            readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                            readonly required: readonly ["timestamp"];
                            readonly properties: {
                                readonly timestamp: {
                                    readonly description: "ISO 8601 timestamp of the account snapshot.";
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                                readonly meta: {
                                    readonly description: "JSON object with any meta information related to the account snpashot.";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly details: {
                                    readonly description: "JSON object with any details related to the account snapshot.";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                        };
                                        readonly status_detail: {
                                            readonly type: "string";
                                        };
                                        readonly loan_credit_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_amount: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_push_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_pull_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly email_address: {
                                            readonly type: "string";
                                        };
                                        readonly phone_number: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\")";
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\").";
                                            readonly type: "string";
                                            readonly maxLength: 3;
                                        };
                                    };
                                };
                                readonly account_view: {
                                    readonly description: "JSON object";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly account_balance: {
                                            readonly description: "Account balance in cents.";
                                            readonly type: "integer";
                                        };
                                        readonly date_last_activity: {
                                            readonly description: "ISO 8601 timestamp of last activity.";
                                            readonly type: "string";
                                        };
                                        readonly is_good_standing: {
                                            readonly type: "boolean";
                                        };
                                        readonly past_due_days: {
                                            readonly type: "integer";
                                        };
                                    };
                                };
                            };
                        };
                        readonly product_code: {
                            readonly description: "Identifier of the product name.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_name: {
                            readonly description: "Name of the product associated with the account.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Product number that corresponds to the product_name associated with the account.";
                        };
                        readonly maturity_date: {
                            readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly closing_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly cif_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Unique identifier used by bank cores to refer to a customer.";
                        };
                        readonly card_network: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Card network of the card that was used in this transaction.";
                            readonly maxLength: 20;
                        };
                        readonly expiration_date: {
                            readonly type: readonly ["string", "null"];
                        };
                        readonly tokenization_method: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "method of tokenization used to anonymize account information.";
                            readonly maxLength: 20;
                        };
                        readonly merchant_category_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                            readonly maxLength: 20;
                        };
                        readonly name_on_card: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ame on the card used in this transaction.";
                            readonly maxLength: 100;
                        };
                        readonly account_number_last4: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Last four digits of account number";
                            readonly maxLength: 4;
                        };
                        readonly avs: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Verifies the numeric portions of the address against the billing address.";
                            readonly maxLength: 20;
                        };
                        readonly currency: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ISO-4217 currency code.";
                            readonly maxLength: 4;
                            readonly examples: readonly ["USD"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account";
                            readonly type: readonly ["object", "null"];
                            readonly additionalProperties: true;
                        };
                    };
                    readonly type: "object";
                }];
            };
            readonly destination: {
                readonly readOnly: true;
                readonly type: "object";
                readonly description: "The counterparty account that is interacting with the `source_account`-- for example, a merchant account.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                readonly anyOf: readonly [{
                    readonly required: readonly ["external_account_id"];
                    readonly properties: {
                        readonly name_first: {
                            readonly type: "string";
                        };
                        readonly name_last: {
                            readonly type: "string";
                        };
                        readonly birth_date: {
                            readonly description: "YYYY-MM-DD";
                            readonly type: "string";
                        };
                        readonly address_line_1: {
                            readonly type: "string";
                        };
                        readonly address_line_2: {
                            readonly type: "string";
                        };
                        readonly address_city: {
                            readonly type: "string";
                        };
                        readonly address_state: {
                            readonly type: "string";
                        };
                        readonly address_postal_code: {
                            readonly type: "string";
                        };
                        readonly address_country_code: {
                            readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                            readonly type: "string";
                        };
                        readonly bank_account_token: {
                            readonly description: "Alloy-generated unique identifier for the account";
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly external_account_id: {
                            readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                            readonly type: "string";
                            readonly maxLength: 60;
                            readonly examples: readonly ["test-account-001"];
                        };
                        readonly account_number: {
                            readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                            readonly type: "string";
                            readonly enum: readonly ["deposit", "credit", "brokerage"];
                            readonly examples: readonly ["deposit"];
                        };
                        readonly account_name: {
                            readonly description: "Name of the account.";
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly description: "Routing number associated with the account.";
                            readonly type: "string";
                        };
                        readonly account_type: {
                            readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                            readonly type: readonly ["string", "null"];
                            readonly enum: readonly ["merchant account", "person"];
                        };
                        readonly is_linked_account: {
                            readonly description: "Determines whether the account is a funding source or linked account.";
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly link_timestamp: {
                            readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly unlink_timestamp: {
                            readonly description: "ISO 8601 date. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly opening_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly country_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                            readonly maxLength: 2;
                        };
                        readonly account_snapshot: {
                            readonly type: readonly ["object", "null"];
                            readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                            readonly required: readonly ["timestamp"];
                            readonly properties: {
                                readonly timestamp: {
                                    readonly description: "ISO 8601 timestamp of the account snapshot.";
                                    readonly type: "string";
                                    readonly format: "date";
                                    readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                };
                                readonly meta: {
                                    readonly description: "JSON object with any meta information related to the account snpashot.";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly details: {
                                    readonly description: "JSON object with any details related to the account snapshot.";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                            readonly examples: readonly ["Active"];
                                        };
                                        readonly status_detail: {
                                            readonly type: "string";
                                        };
                                        readonly loan_credit_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_amount: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_push_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_pull_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly email_address: {
                                            readonly type: "string";
                                        };
                                        readonly phone_number: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\")";
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\").";
                                            readonly type: "string";
                                            readonly maxLength: 3;
                                        };
                                    };
                                };
                                readonly account_view: {
                                    readonly description: "JSON object";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly account_balance: {
                                            readonly description: "Account balance in cents.";
                                            readonly type: "integer";
                                        };
                                        readonly date_last_activity: {
                                            readonly description: "ISO 8601 timestamp of last activity.";
                                            readonly type: "string";
                                        };
                                        readonly is_good_standing: {
                                            readonly type: "boolean";
                                        };
                                        readonly past_due_days: {
                                            readonly type: "integer";
                                        };
                                    };
                                };
                            };
                        };
                        readonly product_code: {
                            readonly description: "Identifier of the product name.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_name: {
                            readonly description: "Name of the product associated with the account.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Product number that corresponds to the product_name associated with the account.";
                        };
                        readonly maturity_date: {
                            readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly closing_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly cif_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Unique identifier used by bank cores to refer to a customer.";
                        };
                        readonly card_network: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Card network of the card that was used in this transaction.";
                            readonly maxLength: 20;
                        };
                        readonly expiration_date: {
                            readonly type: readonly ["string", "null"];
                        };
                        readonly tokenization_method: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "method of tokenization used to anonymize account information.";
                            readonly maxLength: 20;
                        };
                        readonly merchant_category_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                            readonly maxLength: 20;
                        };
                        readonly name_on_card: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ame on the card used in this transaction.";
                            readonly maxLength: 100;
                        };
                        readonly account_number_last4: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Last four digits of account number";
                            readonly maxLength: 4;
                        };
                        readonly avs: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Verifies the numeric portions of the address against the billing address.";
                            readonly maxLength: 20;
                        };
                        readonly currency: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ISO-4217 currency code.";
                            readonly maxLength: 4;
                            readonly examples: readonly ["USD"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account";
                            readonly type: readonly ["object", "null"];
                            readonly additionalProperties: true;
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly required: readonly ["account_number"];
                    readonly properties: {
                        readonly name_first: {
                            readonly type: "string";
                        };
                        readonly name_last: {
                            readonly type: "string";
                        };
                        readonly birth_date: {
                            readonly description: "YYYY-MM-DD";
                            readonly type: "string";
                        };
                        readonly address_line_1: {
                            readonly type: "string";
                        };
                        readonly address_line_2: {
                            readonly type: "string";
                        };
                        readonly address_city: {
                            readonly type: "string";
                        };
                        readonly address_state: {
                            readonly type: "string";
                        };
                        readonly address_postal_code: {
                            readonly type: "string";
                        };
                        readonly address_country_code: {
                            readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                            readonly type: "string";
                        };
                        readonly bank_account_token: {
                            readonly description: "Alloy-generated unique identifier for the account";
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly external_account_id: {
                            readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                            readonly type: "string";
                            readonly maxLength: 60;
                            readonly examples: readonly ["test-account-001"];
                        };
                        readonly account_number: {
                            readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                            readonly type: "string";
                            readonly enum: readonly ["deposit", "credit", "brokerage"];
                            readonly examples: readonly ["deposit"];
                        };
                        readonly account_name: {
                            readonly description: "Name of the account.";
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly description: "Routing number associated with the account.";
                            readonly type: "string";
                        };
                        readonly account_type: {
                            readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                            readonly type: readonly ["string", "null"];
                            readonly enum: readonly ["merchant account", "person"];
                        };
                        readonly is_linked_account: {
                            readonly description: "Determines whether the account is a funding source or linked account.";
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly link_timestamp: {
                            readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly unlink_timestamp: {
                            readonly description: "ISO 8601 date. Cannot be future-dated.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly opening_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly country_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                            readonly maxLength: 2;
                        };
                        readonly account_snapshot: {
                            readonly type: readonly ["object", "null"];
                            readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                            readonly required: readonly ["timestamp"];
                            readonly properties: {
                                readonly timestamp: {
                                    readonly description: "ISO 8601 timestamp of the account snapshot.";
                                    readonly type: "string";
                                    readonly format: "date";
                                    readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                };
                                readonly meta: {
                                    readonly description: "JSON object with any meta information related to the account snpashot.";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly details: {
                                    readonly description: "JSON object with any details related to the account snapshot.";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                            readonly examples: readonly ["Active"];
                                        };
                                        readonly status_detail: {
                                            readonly type: "string";
                                        };
                                        readonly loan_credit_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_interest_rate: {
                                            readonly type: "number";
                                        };
                                        readonly original_amount: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_push_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly ach_pull_limit: {
                                            readonly type: "integer";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly email_address: {
                                            readonly type: "string";
                                        };
                                        readonly phone_number: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly mailing_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\")";
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line1: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_line2: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_city: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_state: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly primary_address_country_code: {
                                            readonly description: "3-character country code (e.g. \"USA\").";
                                            readonly type: "string";
                                            readonly maxLength: 3;
                                        };
                                    };
                                };
                                readonly account_view: {
                                    readonly description: "JSON object";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly account_balance: {
                                            readonly description: "Account balance in cents.";
                                            readonly type: "integer";
                                        };
                                        readonly date_last_activity: {
                                            readonly description: "ISO 8601 timestamp of last activity.";
                                            readonly type: "string";
                                        };
                                        readonly is_good_standing: {
                                            readonly type: "boolean";
                                        };
                                        readonly past_due_days: {
                                            readonly type: "integer";
                                        };
                                    };
                                };
                            };
                        };
                        readonly product_code: {
                            readonly description: "Identifier of the product name.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_name: {
                            readonly description: "Name of the product associated with the account.";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly product_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Product number that corresponds to the product_name associated with the account.";
                        };
                        readonly maturity_date: {
                            readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly closing_date: {
                            readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                            readonly type: readonly ["string", "null"];
                            readonly format: "date";
                        };
                        readonly cif_number: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Unique identifier used by bank cores to refer to a customer.";
                        };
                        readonly card_network: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Card network of the card that was used in this transaction.";
                            readonly maxLength: 20;
                        };
                        readonly expiration_date: {
                            readonly type: readonly ["string", "null"];
                        };
                        readonly tokenization_method: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "method of tokenization used to anonymize account information.";
                            readonly maxLength: 20;
                        };
                        readonly merchant_category_code: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                            readonly maxLength: 20;
                        };
                        readonly name_on_card: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ame on the card used in this transaction.";
                            readonly maxLength: 100;
                        };
                        readonly account_number_last4: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Last four digits of account number";
                            readonly maxLength: 4;
                        };
                        readonly avs: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "Verifies the numeric portions of the address against the billing address.";
                            readonly maxLength: 20;
                        };
                        readonly currency: {
                            readonly type: readonly ["string", "null"];
                            readonly description: "ISO-4217 currency code.";
                            readonly maxLength: 4;
                            readonly examples: readonly ["USD"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account";
                            readonly type: readonly ["object", "null"];
                            readonly additionalProperties: true;
                        };
                    };
                    readonly type: "object";
                }];
            };
            readonly account_snapshot: {
                readonly readOnly: true;
                readonly description: "Snapshot of the source account of the transaction. Note that this is not a separate call, it is part of either an /accounts call or an /evaluations call";
                readonly type: readonly ["object", "null"];
                readonly required: readonly ["timestamp"];
                readonly properties: {
                    readonly timestamp: {
                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                        readonly type: "string";
                        readonly format: "date";
                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                    };
                    readonly meta: {
                        readonly description: "JSON object with any meta information related to the account snpashot.";
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly details: {
                        readonly description: "JSON object with any details related to the account snapshot.";
                        readonly type: "object";
                        readonly properties: {
                            readonly status: {
                                readonly type: "string";
                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                readonly examples: readonly ["Active"];
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly loan_credit_limit: {
                                readonly type: "integer";
                            };
                            readonly interest_rate: {
                                readonly type: "number";
                            };
                            readonly original_interest_rate: {
                                readonly type: "number";
                            };
                            readonly original_amount: {
                                readonly type: "integer";
                            };
                            readonly ach_push_limit: {
                                readonly type: "integer";
                            };
                            readonly ach_pull_limit: {
                                readonly type: "integer";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly email_address: {
                                readonly type: "string";
                            };
                            readonly phone_number: {
                                readonly type: "string";
                            };
                            readonly mailing_address_line1: {
                                readonly type: "string";
                            };
                            readonly mailing_address_line2: {
                                readonly type: "string";
                            };
                            readonly mailing_address_city: {
                                readonly type: "string";
                            };
                            readonly mailing_address_state: {
                                readonly type: "string";
                            };
                            readonly mailing_address_postal_code: {
                                readonly type: "string";
                            };
                            readonly mailing_address_country_code: {
                                readonly description: "3-character country code (e.g. \"USA\")";
                                readonly type: "string";
                            };
                            readonly primary_address_line1: {
                                readonly type: "string";
                            };
                            readonly primary_address_line2: {
                                readonly type: "string";
                            };
                            readonly primary_address_city: {
                                readonly type: "string";
                            };
                            readonly primary_address_state: {
                                readonly type: "string";
                            };
                            readonly primary_address_postal_code: {
                                readonly type: "string";
                            };
                            readonly primary_address_country_code: {
                                readonly description: "3-character country code (e.g. \"USA\").";
                                readonly type: "string";
                                readonly maxLength: 3;
                            };
                        };
                    };
                    readonly account_view: {
                        readonly description: "JSON object";
                        readonly type: "object";
                        readonly properties: {
                            readonly account_balance: {
                                readonly description: "Account balance in cents.";
                                readonly type: "integer";
                            };
                            readonly date_last_activity: {
                                readonly description: "ISO 8601 timestamp of last activity.";
                                readonly type: "string";
                            };
                            readonly is_good_standing: {
                                readonly type: "boolean";
                            };
                            readonly past_due_days: {
                                readonly type: "integer";
                            };
                        };
                    };
                };
            };
            readonly transaction_date: {
                readonly description: "ISO 8601 date. Used as the transaction's date or date to look back from when evaluating an account.";
                readonly type: "string";
                readonly examples: readonly ["2021-10-24 18:02:00+00"];
            };
            readonly amount: {
                readonly description: "Amount in cents";
                readonly type: "integer";
                readonly examples: readonly [200];
            };
            readonly currency: {
                readonly description: "3-character currency code (e.g. \"USD\")";
                readonly type: "string";
                readonly examples: readonly ["USD"];
            };
            readonly process_method: {
                readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`. `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["Card. Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                readonly examples: readonly ["ACH"];
            };
            readonly category: {
                readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                readonly examples: readonly ["Deposit"];
            };
            readonly interaction_point: {
                readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                readonly examples: readonly ["iOS"];
            };
            readonly type_code: {
                readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                readonly type: readonly ["string", "null"];
            };
            readonly type_description: {
                readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
            };
            readonly is_approved: {
                readonly description: "If the transaction was approved by the customer";
                readonly type: readonly ["boolean", "null"];
                readonly examples: readonly [true];
            };
            readonly is_reversal: {
                readonly description: "If the transaction is a refund";
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_triggered_by_user: {
                readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_international_override: {
                readonly description: "True if the transaction is international";
                readonly type: readonly ["boolean", "null"];
            };
            readonly return_code: {
                readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                readonly type: readonly ["string", "null"];
            };
            readonly return_code_reason: {
                readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["Unauthorized"];
            };
            readonly entry_mode: {
                readonly description: "POS entry modes on card transactions";
                readonly type: readonly ["number", "null"];
            };
            readonly response_code: {
                readonly description: "Response codes returned on card transactions";
                readonly type: readonly ["number", "null"];
            };
            readonly status: {
                readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)";
                readonly type: readonly ["string", "null"];
                readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
            };
            readonly status_detail: {
                readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
            };
            readonly iso_message: {
                readonly description: "ISO standard value returned on card transactions";
                readonly type: readonly ["number", "null"];
            };
            readonly settled_at: {
                readonly description: "ISO 8601 date. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly ["2021-10-24 18:03:00+00"];
            };
            readonly latest_transaction_date: {
                readonly description: "ISO 8601 date. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly ["2021-10-24 18:02:00+00"];
            };
            readonly description: {
                readonly description: "A description of the transaction. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly ["Mobile App Deposit"];
            };
            readonly approval_code: {
                readonly description: "The raw approval code provided by the customer. Currently not used in decisioning.";
                readonly type: readonly ["string", "null"];
            };
            readonly transaction_meta: {
                readonly description: "Object containing extra raw data not stored in other columns. Currently not used in decisioning.";
                readonly type: readonly ["object", "null"];
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly transaction_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique external identifier for the transaction.";
                };
            };
            readonly required: readonly ["transaction_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "integer";
                    readonly examples: readonly [200];
                };
                readonly error: {
                    readonly type: "string";
                };
                readonly source: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly description: "The account that is being evaluated. Typically this is the account that is owned by your organization.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                    readonly anyOf: readonly [{
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly required: readonly ["account_number"];
                        readonly properties: {
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }];
                };
                readonly destination: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly description: "The counterparty account that is interacting with the `source_account`-- for example, a merchant account.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                    readonly anyOf: readonly [{
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly description: "YYYY-MM-DD";
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                                readonly type: "string";
                            };
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                                readonly examples: readonly ["test-account-001"];
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                                readonly examples: readonly ["deposit"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly required: readonly ["account_number"];
                        readonly properties: {
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly description: "YYYY-MM-DD";
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                                readonly type: "string";
                            };
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                                readonly examples: readonly ["test-account-001"];
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                                readonly examples: readonly ["deposit"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }];
                };
                readonly account_snapshot: {
                    readonly readOnly: true;
                    readonly description: "Snapshot of the source account of the transaction. Note that this is not a separate call, it is part of either an /accounts call or an /evaluations call";
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                            readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                    readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly transaction_id: {
                    readonly description: "Unique external identifier for the transaction. Required if using counterparty MLA.";
                };
                readonly transaction_date: {
                    readonly description: "ISO 8601 date. Used as the transaction's date or date to look back from when evaluating an account.";
                    readonly type: "string";
                    readonly examples: readonly ["2021-10-24T18:02:00.000Z"];
                };
                readonly amount: {
                    readonly description: "Amount in cents";
                    readonly type: "integer";
                    readonly examples: readonly ["200"];
                };
                readonly currency: {
                    readonly description: "3-character currency code (e.g. \"USD\")";
                    readonly type: "string";
                };
                readonly process_method: {
                    readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`. `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)\n\n`Card. Internal` `Check` `P2P` `ACH` `Cash` `Wire`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Card. Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                    readonly examples: readonly ["ACH"];
                };
                readonly category: {
                    readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)\n\n`Adjustment` `ATM Rebate` `Bill Pay` `Deposit` `Direct Deposit Bonus` `Interest` `Overdraft Fee` `Payment` `Promo` `Purchase` `Purchase Return` `Return` `Service Charge` `Withdrawal`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                    readonly examples: readonly ["Deposit"];
                };
                readonly interaction_point: {
                    readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)\n\n`Android` `ATM` `Card Swipe Terminal` `iOS` `Mobile` `Online Form` `Point of Sale` `Teller` `3rd Party App`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                    readonly examples: readonly ["iOS"];
                };
                readonly type_code: {
                    readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                    readonly type: readonly ["string", "null"];
                };
                readonly type_description: {
                    readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly is_approved: {
                    readonly description: "If the transaction was approved by the customer";
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [true];
                };
                readonly is_reversal: {
                    readonly description: "If the transaction is a refund";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_triggered_by_user: {
                    readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [true];
                };
                readonly is_international_override: {
                    readonly description: "True if the transaction is international";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly return_code: {
                    readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                    readonly type: readonly ["string", "null"];
                };
                readonly return_code_reason: {
                    readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.\n\n`Unauthorized`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Unauthorized"];
                };
                readonly entry_mode: {
                    readonly description: "POS entry modes on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly response_code: {
                    readonly description: "Response codes returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly status: {
                    readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)\n\n`Acknowledged` `Accepted` `Rejected` `Paused` `Pending` `Completed` `Declined` `Cancelled`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
                };
                readonly status_detail: {
                    readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly iso_message: {
                    readonly description: "ISO standard value returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly settled_at: {
                    readonly description: "ISO 8601 date. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2021-10-24T18:03:00.000Z"];
                };
                readonly latest_transaction_date: {
                    readonly description: "ISO 8601 date. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2021-10-24T18:02:00.000Z"];
                };
                readonly description: {
                    readonly description: "A description of the transaction. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["Mobile App Deposit"];
                };
                readonly approval_code: {
                    readonly description: "The raw approval code provided by the customer. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly transaction_meta: {
                    readonly description: "Object containing extra raw data not stored in other columns. Currently not used in decisioning.";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostAccounts: {
    readonly body: {
        readonly type: "object";
        readonly description: "The account that is being evaluated. Typically this is the account that is owned by your organization.\nThe body must contain either an `external_account_id` or `account_number`.\n";
        readonly anyOf: readonly [{
            readonly required: readonly ["external_account_id"];
            readonly properties: {
                readonly entities: {
                    readonly description: "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["account_holder_type"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both.";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both.";
                            };
                            readonly account_holder_type: {
                                readonly type: "string";
                                readonly enum: readonly ["primary", "secondary"];
                            };
                        };
                    };
                };
                readonly bank_account_token: {
                    readonly description: "Alloy-generated unique identifier for the account";
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly external_account_id: {
                    readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                    readonly type: "string";
                    readonly maxLength: 60;
                };
                readonly account_number: {
                    readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                    readonly type: "string";
                };
                readonly account_class: {
                    readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                    readonly type: "string";
                    readonly enum: readonly ["deposit", "credit", "brokerage"];
                };
                readonly account_name: {
                    readonly description: "Name of the account.";
                    readonly type: "string";
                };
                readonly routing_number: {
                    readonly description: "Routing number associated with the account.";
                    readonly type: "string";
                };
                readonly account_type: {
                    readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["merchant account", "person"];
                };
                readonly is_linked_account: {
                    readonly description: "Determines whether the account is a funding source or linked account.";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly link_timestamp: {
                    readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlink_timestamp: {
                    readonly description: "ISO 8601 date. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly opening_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly country_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                    readonly maxLength: 2;
                };
                readonly account_snapshot: {
                    readonly type: readonly ["object", "null"];
                    readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly product_code: {
                    readonly description: "Identifier of the product name.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_name: {
                    readonly description: "Name of the product associated with the account.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Product number that corresponds to the product_name associated with the account.";
                };
                readonly maturity_date: {
                    readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly closing_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly cif_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Unique identifier used by bank cores to refer to a customer.";
                };
                readonly card_network: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Card network of the card that was used in this transaction.";
                    readonly maxLength: 20;
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                };
                readonly tokenization_method: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "method of tokenization used to anonymize account information.";
                    readonly maxLength: 20;
                };
                readonly merchant_category_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                    readonly maxLength: 20;
                };
                readonly name_on_card: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ame on the card used in this transaction.";
                    readonly maxLength: 100;
                };
                readonly account_number_last4: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Last four digits of account number";
                    readonly maxLength: 4;
                };
                readonly avs: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Verifies the numeric portions of the address against the billing address.";
                    readonly maxLength: 20;
                };
                readonly currency: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ISO-4217 currency code.";
                    readonly maxLength: 4;
                };
                readonly meta: {
                    readonly description: "JSON object with any meta information related to the account";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
            readonly type: "object";
        }, {
            readonly required: readonly ["account_number"];
            readonly properties: {
                readonly entities: {
                    readonly description: "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["account_holder_type"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both.";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both.";
                            };
                            readonly account_holder_type: {
                                readonly type: "string";
                                readonly enum: readonly ["primary", "secondary"];
                            };
                        };
                    };
                };
                readonly bank_account_token: {
                    readonly description: "Alloy-generated unique identifier for the account";
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly external_account_id: {
                    readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                    readonly type: "string";
                    readonly maxLength: 60;
                };
                readonly account_number: {
                    readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                    readonly type: "string";
                };
                readonly account_class: {
                    readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                    readonly type: "string";
                    readonly enum: readonly ["deposit", "credit", "brokerage"];
                };
                readonly account_name: {
                    readonly description: "Name of the account.";
                    readonly type: "string";
                };
                readonly routing_number: {
                    readonly description: "Routing number associated with the account.";
                    readonly type: "string";
                };
                readonly account_type: {
                    readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["merchant account", "person"];
                };
                readonly is_linked_account: {
                    readonly description: "Determines whether the account is a funding source or linked account.";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly link_timestamp: {
                    readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlink_timestamp: {
                    readonly description: "ISO 8601 date. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly opening_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly country_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                    readonly maxLength: 2;
                };
                readonly account_snapshot: {
                    readonly type: readonly ["object", "null"];
                    readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly product_code: {
                    readonly description: "Identifier of the product name.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_name: {
                    readonly description: "Name of the product associated with the account.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Product number that corresponds to the product_name associated with the account.";
                };
                readonly maturity_date: {
                    readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly closing_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly cif_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Unique identifier used by bank cores to refer to a customer.";
                };
                readonly card_network: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Card network of the card that was used in this transaction.";
                    readonly maxLength: 20;
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                };
                readonly tokenization_method: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "method of tokenization used to anonymize account information.";
                    readonly maxLength: 20;
                };
                readonly merchant_category_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                    readonly maxLength: 20;
                };
                readonly name_on_card: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ame on the card used in this transaction.";
                    readonly maxLength: 100;
                };
                readonly account_number_last4: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Last four digits of account number";
                    readonly maxLength: 4;
                };
                readonly avs: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Verifies the numeric portions of the address against the billing address.";
                    readonly maxLength: 20;
                };
                readonly currency: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ISO-4217 currency code.";
                    readonly maxLength: 4;
                };
                readonly meta: {
                    readonly description: "JSON object with any meta information related to the account";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
            readonly type: "object";
        }];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly entities: {
                    readonly description: "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly required: readonly ["account_holder_type"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both.";
                                readonly examples: readonly ["P-MSBW0ff3TQG7IYPvaoHs"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both.";
                                readonly examples: readonly ["entity-01"];
                            };
                            readonly account_holder_type: {
                                readonly type: "string";
                                readonly enum: readonly ["primary", "secondary"];
                                readonly examples: readonly ["primary"];
                                readonly description: "`primary` `secondary`";
                            };
                        };
                    };
                };
                readonly bank_account_token: {
                    readonly description: "Alloy-generated unique identifier for the account";
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly examples: readonly ["A-P1HmBXO3a2lElibmotg7"];
                };
                readonly external_account_id: {
                    readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                    readonly type: "string";
                    readonly maxLength: 60;
                    readonly examples: readonly ["test-account-001"];
                };
                readonly account_number: {
                    readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                    readonly type: "string";
                };
                readonly account_class: {
                    readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).\n\n`deposit` `credit` `brokerage`";
                    readonly type: "string";
                    readonly enum: readonly ["deposit", "credit", "brokerage"];
                    readonly examples: readonly ["deposit"];
                };
                readonly account_name: {
                    readonly description: "Name of the account.";
                    readonly type: "string";
                };
                readonly routing_number: {
                    readonly description: "Routing number associated with the account.";
                    readonly type: "string";
                };
                readonly account_type: {
                    readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).\n\n`merchant account` `person`";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["merchant account", "person"];
                };
                readonly is_linked_account: {
                    readonly description: "Determines whether the account is a funding source or linked account.";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly link_timestamp: {
                    readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlink_timestamp: {
                    readonly description: "ISO 8601 date. Cannot be future-dated.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly opening_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly country_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                    readonly maxLength: 2;
                };
                readonly account_snapshot: {
                    readonly type: readonly ["object", "null"];
                    readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                    readonly description: "`Active` `Deactivated` `Frozen` `Pending` `Inactive`";
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly product_code: {
                    readonly description: "Identifier of the product name.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_name: {
                    readonly description: "Name of the product associated with the account.";
                    readonly type: readonly ["string", "null"];
                };
                readonly product_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Product number that corresponds to the product_name associated with the account.";
                };
                readonly maturity_date: {
                    readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly closing_date: {
                    readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly cif_number: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Unique identifier used by bank cores to refer to a customer.";
                };
                readonly card_network: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Card network of the card that was used in this transaction.";
                    readonly maxLength: 20;
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                };
                readonly tokenization_method: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "method of tokenization used to anonymize account information.";
                    readonly maxLength: 20;
                };
                readonly merchant_category_code: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                    readonly maxLength: 20;
                };
                readonly name_on_card: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ame on the card used in this transaction.";
                    readonly maxLength: 100;
                };
                readonly account_number_last4: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Last four digits of account number";
                    readonly maxLength: 4;
                };
                readonly avs: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Verifies the numeric portions of the address against the billing address.";
                    readonly maxLength: 20;
                };
                readonly currency: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "ISO-4217 currency code.";
                    readonly maxLength: 4;
                };
                readonly meta: {
                    readonly description: "JSON object with any meta information related to the account";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostCasesCaseTokenEvidences: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to create an evidence for.";
                };
            };
            readonly required: readonly ["case_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
                readonly message: {
                    readonly type: "string";
                    readonly examples: readonly ["Manual case evidence insertions were successful."];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "206": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
                readonly message: {
                    readonly type: "string";
                    readonly examples: readonly ["Manual case evidence insertions were partially successful."];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostCasesCaseTokenWorks: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly case_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of case to get works for.";
                };
            };
            readonly required: readonly ["case_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostCasesMultiWorks: {
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly message: {
                    readonly type: "string";
                    readonly examples: readonly ["All cases updated!"];
                };
                readonly "updated-cases": {
                    readonly type: "array";
                    readonly description: "An array of case tokens that were successfully updated";
                    readonly items: {
                        readonly type: "string";
                        readonly examples: readonly ["C-123"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostDocuments: {
    readonly body: {
        readonly required: readonly ["name", "extension", "type"];
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly examples: readonly ["license_photo"];
            };
            readonly extension: {
                readonly type: "string";
                readonly examples: readonly ["jpg"];
            };
            readonly type: {
                readonly type: "string";
                readonly examples: readonly ["license"];
            };
            readonly note: {
                readonly type: "string";
                readonly examples: readonly ["This is a license photo"];
            };
            readonly note_author_agent_email: {
                readonly type: "string";
                readonly examples: readonly ["cool_agent@fakedomain.net"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                };
                readonly type: {
                    readonly type: "string";
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly extension: {
                    readonly type: "string";
                };
                readonly uploaded: {
                    readonly type: "boolean";
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly approved: {
                    readonly type: "string";
                };
                readonly approval_agent_email: {
                    readonly type: "string";
                };
                readonly approval_timestamp: {
                    readonly type: "number";
                };
                readonly notes: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly note: {
                                readonly type: "string";
                            };
                            readonly note_author_agent_email: {
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly type: "number";
                            };
                            readonly updated_at: {
                                readonly type: "number";
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesBusinesses: {
    readonly body: {
        readonly properties: {
            readonly external_entity_id: {
                readonly type: "string";
                readonly examples: readonly ["087ac67e-17ab-4529-8d1a-a8b2214d305f"];
            };
            readonly business_name: {
                readonly type: "string";
                readonly examples: readonly ["Alloy"];
            };
            readonly business_alternate_name: {
                readonly type: "string";
                readonly examples: readonly ["DBA First Mile Group"];
            };
            readonly business_registry_id: {
                readonly type: "string";
                readonly examples: readonly ["123456789"];
            };
            readonly business_federal_ein: {
                readonly type: "string";
                readonly examples: readonly ["987654321"];
            };
            readonly addresses: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly emails: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email_address: {
                            readonly type: "string";
                            readonly examples: readonly ["safeandseamless@alloy.com"];
                        };
                    };
                };
            };
            readonly phones: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly phone_number: {
                            readonly type: "string";
                            readonly examples: readonly ["555-000-1234"];
                        };
                    };
                };
            };
            readonly pii_status: {
                readonly type: "string";
                readonly enum: readonly ["successful", "failed", "pending"];
                readonly examples: readonly ["successful"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["B-aCF4FAkGKiTIZJFhproR"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["087ac67e-17ab-4529-8d1a-a8b2214d305f"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly business_name: {
                    readonly type: "string";
                    readonly examples: readonly ["Alloy"];
                };
                readonly business_alternate_name: {
                    readonly type: "string";
                    readonly examples: readonly ["DBA First Mile Group"];
                };
                readonly business_registry_id: {
                    readonly type: "string";
                    readonly examples: readonly ["123456789"];
                };
                readonly business_federal_ein: {
                    readonly type: "string";
                    readonly examples: readonly ["987654321"];
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["safeandseamless@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["5550001234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["business"];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [400];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "string";
                    readonly examples: readonly [1652205025227];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["2ohfhwqoq2nm"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesEntityTokenDocuments: {
    readonly body: {
        readonly required: readonly ["name", "extension", "type"];
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly examples: readonly ["license_photo"];
            };
            readonly extension: {
                readonly type: "string";
                readonly examples: readonly ["jpg"];
            };
            readonly type: {
                readonly type: "string";
                readonly examples: readonly ["license"];
            };
            readonly note: {
                readonly type: "string";
                readonly examples: readonly ["This is a license photo"];
            };
            readonly note_author_agent_email: {
                readonly type: "string";
                readonly examples: readonly ["cool_agent@fakedomain.net"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                };
                readonly type: {
                    readonly type: "string";
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly extension: {
                    readonly type: "string";
                };
                readonly uploaded: {
                    readonly type: "boolean";
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly approved: {
                    readonly type: "string";
                };
                readonly approval_agent_email: {
                    readonly type: "string";
                };
                readonly approval_timestamp: {
                    readonly type: "number";
                };
                readonly notes: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly note: {
                                readonly type: "string";
                            };
                            readonly note_author_agent_email: {
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly type: "number";
                            };
                            readonly updated_at: {
                                readonly type: "number";
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesEntityTokenDocumentsDocumentTokenNotes: {
    readonly body: {
        readonly required: readonly ["note", "note_author_agent_email"];
        readonly properties: {
            readonly note: {
                readonly type: "string";
            };
            readonly note_author_agent_email: {
                readonly type: "string";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with document.";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["document_token", "entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly note: {
                    readonly type: "string";
                };
                readonly note_author_agent_email: {
                    readonly type: "string";
                };
                readonly created_at: {
                    readonly type: "number";
                };
                readonly updated_at: {
                    readonly type: "number";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesEntityTokenNotes: {
    readonly body: {
        readonly required: readonly ["note", "note_author_agent_email"];
        readonly properties: {
            readonly note: {
                readonly type: "string";
            };
            readonly note_author_agent_email: {
                readonly type: "string";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with entity.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly external_entity_id: {
                    readonly type: "string";
                };
                readonly note: {
                    readonly type: "string";
                };
                readonly note_author_agent_email: {
                    readonly type: "string";
                };
                readonly created_at: {
                    readonly type: "number";
                };
                readonly updated_at: {
                    readonly type: "number";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesEntityTokenReviews: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["agent", "reasons", "outcome"];
        readonly properties: {
            readonly agent: {
                readonly type: "object";
                readonly required: readonly ["email"];
                readonly properties: {
                    readonly email: {
                        readonly description: "Valid email of agent with Alloy account access.";
                        readonly type: "string";
                    };
                };
            };
            readonly reasons: {
                readonly type: "array";
                readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly outcome: {
                readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                readonly type: "string";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Entity or Group associated with the Review. If a Group Token is passed, the Group Token is set to the `entity_token` parameter in the response.";
                };
            };
            readonly required: readonly ["entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly review_token: {
                    readonly description: "Unique ID for the Review.";
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                    readonly type: "string";
                };
                readonly group_token: {
                    readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly outcome: {
                    readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                    readonly type: "string";
                };
                readonly application_name: {
                    readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly reviewer: {
                    readonly description: "Email of the Agent that created the Review.";
                    readonly type: "string";
                };
                readonly timestamp: {
                    readonly description: "Unix timestamp when the Review was created.";
                    readonly type: "number";
                };
                readonly reasons: {
                    readonly type: "array";
                    readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly agent: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email: {
                            readonly description: "Valid email of agent with Alloy account access.";
                            readonly type: "string";
                        };
                        readonly external_id: {
                            readonly description: "Unique external ID associated with the Agent, if any.";
                            readonly type: "string";
                        };
                    };
                };
                readonly notes: {
                    readonly type: "array";
                    readonly description: "Array of notes associated with the Review, if any.";
                    readonly items: {
                        readonly properties: {
                            readonly note: {
                                readonly description: "Content to include in the body of the note.";
                                readonly type: "string";
                            };
                            readonly note_author_agent_email: {
                                readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly description: "Unix timestamp when the note was created.";
                                readonly type: "number";
                            };
                            readonly updated_at: {
                                readonly description: "Unix timestamp when the note was last updated.";
                                readonly type: "number";
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesEntityTokenReviewsReviewTokenNotes: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["note", "note_author_agent_email"];
        readonly properties: {
            readonly note: {
                readonly description: "Content to include in the body of the note.";
                readonly type: "string";
            };
            readonly note_author_agent_email: {
                readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                readonly type: "string";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Entity or Group associated with the Review.";
                };
                readonly review_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Review.";
                };
            };
            readonly required: readonly ["entity_token", "review_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly note: {
                    readonly description: "Content to include in the body of the note.";
                    readonly type: "string";
                };
                readonly note_author_agent_email: {
                    readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                    readonly type: "string";
                };
                readonly created_at: {
                    readonly description: "Unix timestamp when the note was created.";
                    readonly type: "number";
                };
                readonly updated_at: {
                    readonly description: "Unix timestamp when the note was last updated.";
                    readonly type: "number";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntitiesMerge: {
    readonly body: {
        readonly properties: {
            readonly primary_entity_token: {
                readonly type: "string";
                readonly description: "Required if `primary_external_entity_id` is not supplied";
            };
            readonly primary_external_entity_id: {
                readonly type: "string";
                readonly description: "Required if `primary_entity_token` is not supplied";
            };
            readonly secondary_entity_token: {
                readonly type: "string";
                readonly description: "Required if `secondary_external_entity_id` is not supplied";
            };
            readonly secondary_external_entity_id: {
                readonly type: "string";
                readonly description: "Required if `secondary_entity_token` is not supplied";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
};
declare const PostEntitiesPersons: {
    readonly body: {
        readonly properties: {
            readonly external_entity_id: {
                readonly type: "string";
                readonly examples: readonly ["person-entity"];
            };
            readonly gender: {
                readonly type: "string";
                readonly examples: readonly ["male"];
            };
            readonly birth_date: {
                readonly type: "string";
                readonly examples: readonly ["1998-02-03"];
            };
            readonly name_first: {
                readonly type: "string";
                readonly examples: readonly ["John"];
            };
            readonly name_middle: {
                readonly type: "string";
            };
            readonly name_last: {
                readonly type: "string";
                readonly examples: readonly ["Doe"];
            };
            readonly document_ssn: {
                readonly type: "string";
                readonly examples: readonly ["123456789"];
            };
            readonly document_id_card: {
                readonly type: "string";
            };
            readonly document_license: {
                readonly type: "string";
            };
            readonly document_passport: {
                readonly type: "string";
            };
            readonly addresses: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly emails: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email_address: {
                            readonly type: "string";
                            readonly examples: readonly ["john@alloy.com"];
                        };
                    };
                };
            };
            readonly phones: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly phone_number: {
                            readonly type: "string";
                            readonly examples: readonly ["555-000-1234"];
                        };
                    };
                };
            };
            readonly pii_status: {
                readonly type: "string";
                readonly enum: readonly ["successful", "failed", "pending"];
                readonly examples: readonly ["successful"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["P-asldkfhj"];
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly examples: readonly ["person-entity"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly examples: readonly ["1652195922608"];
                };
                readonly gender: {
                    readonly type: "string";
                    readonly examples: readonly ["male"];
                };
                readonly birth_date: {
                    readonly type: "string";
                };
                readonly name_first: {
                    readonly type: "string";
                    readonly examples: readonly ["John"];
                };
                readonly name_middle: {
                    readonly type: "string";
                };
                readonly name_last: {
                    readonly type: "string";
                    readonly examples: readonly ["Doe"];
                };
                readonly document_ssn: {
                    readonly type: "string";
                };
                readonly document_id_card: {
                    readonly type: "string";
                };
                readonly document_license: {
                    readonly type: "string";
                };
                readonly document_passport: {
                    readonly type: "string";
                };
                readonly addresses: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly emails: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly email_address: {
                                readonly type: "string";
                                readonly examples: readonly ["john@alloy.com"];
                            };
                        };
                    };
                };
                readonly phones: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly phone_number: {
                                readonly type: "string";
                                readonly examples: readonly ["555-000-1234"];
                            };
                        };
                    };
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["person"];
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly _links: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [400];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "string";
                    readonly examples: readonly [1652205025227];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["2ohfhwqoq2nm"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEntityFeedback: {
    readonly body: {
        readonly type: "array";
        readonly items: {
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-DyXtV1DTODmhZZjhiGG"];
                };
                readonly external_entity_identifier: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly feedback_case_status: {
                    readonly type: "string";
                    readonly description: "Allowed values are (`\"open\"`, `\"closed\"`, `\"escalated\"`, `\"pending_review\"`)";
                    readonly examples: readonly ["closed"];
                };
                readonly feedback_case_reason: {
                    readonly type: "string";
                    readonly description: "Allowed values are (`\"aml\"`, `\"confirm_fraud\"`, `\"suspected_fraud\"`, `\"no_issue\"`, `\"other\"`)";
                    readonly examples: readonly ["confirm_fraud"];
                };
                readonly feedback_fraud_type: {
                    readonly type: "string";
                    readonly description: "Allowed values are (`\"ato\"`, `\"first_party\"`, `\"second_party\"`, `\"synthetic\"`, `\"check_fraud_deposit\"`, `\"check_fraud_inclearing\"`, `\"check_fraud_cashed\"`, `\"payment_fraud_wire\"`, `\"payment_fraud_ach\"`, `\"payment_fraud_p2p\"`, `\"scam\"`, `\"mule\"`, `\"identity_theft\"`, `\"other\"`)";
                    readonly examples: readonly ["first_party"];
                };
                readonly feedback_fraud_channel: {
                    readonly type: "string";
                    readonly description: "Allowed values are (`\"branch\"`, `\"atm\"`, `\"online\"`, `\"mobile\"`)";
                    readonly examples: readonly ["mobile"];
                };
                readonly feedback_entity_status: {
                    readonly type: "string";
                    readonly description: "Allowed values are (`\"suspect\"`, `\"victim\"`, `\"witness\"`, `\"other\"`)";
                    readonly examples: readonly ["victim"];
                };
                readonly loss_amount: {
                    readonly type: "number";
                    readonly format: "double";
                    readonly description: "Positive integer";
                    readonly examples: readonly [500];
                    readonly minimum: -1.7976931348623157e+308;
                    readonly maximum: 1.7976931348623157e+308;
                };
                readonly exposure_amount: {
                    readonly type: "number";
                    readonly format: "double";
                    readonly description: "Positive integer";
                    readonly examples: readonly [500];
                    readonly minimum: -1.7976931348623157e+308;
                    readonly maximum: 1.7976931348623157e+308;
                };
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEvaluations: {
    readonly body: {
        readonly oneOf: readonly [{
            readonly title: "Evaluation Body";
            readonly type: "object";
            readonly additionalProperties: true;
        }, {
            readonly title: "Transaction Evaluation Body";
            readonly type: "object";
            readonly required: readonly ["transaction_id", "transaction_date", "amount", "source", "destination", "currency"];
            readonly properties: {
                readonly transaction_id: {
                    readonly description: "Unique external identifier for the transaction. Required if using counterparty MLA.";
                };
                readonly transaction_date: {
                    readonly description: "ISO 8601 date. Used as the transaction's date or date to look back from when evaluating an account.";
                    readonly type: "string";
                };
                readonly amount: {
                    readonly description: "Amount in cents";
                    readonly type: "integer";
                };
                readonly currency: {
                    readonly description: "3-character currency code (e.g. \"USD\")";
                    readonly type: "string";
                };
                readonly source: {
                    readonly type: "object";
                    readonly description: "The account that is being evaluated. Typically this is the account that is owned by your organization.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                    readonly anyOf: readonly [{
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly required: readonly ["account_number"];
                        readonly properties: {
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }];
                };
                readonly destination: {
                    readonly type: "object";
                    readonly description: "The counterparty account that is interacting with the `source_account`-- for example, a merchant account.\nThe body must contain either an `external_account_id` or `account_number`.\n";
                    readonly anyOf: readonly [{
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly description: "YYYY-MM-DD";
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                                readonly type: "string";
                            };
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                                readonly examples: readonly ["test-account-001"];
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                                readonly examples: readonly ["deposit"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly examples: readonly ["Active"];
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly required: readonly ["account_number"];
                        readonly properties: {
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly description: "YYYY-MM-DD";
                                readonly type: "string";
                            };
                            readonly address_line_1: {
                                readonly type: "string";
                            };
                            readonly address_line_2: {
                                readonly type: "string";
                            };
                            readonly address_city: {
                                readonly type: "string";
                            };
                            readonly address_state: {
                                readonly type: "string";
                            };
                            readonly address_postal_code: {
                                readonly type: "string";
                            };
                            readonly address_country_code: {
                                readonly description: "2-character ISO 3166-1 alpha-2 country code, e.g. \"US\".";
                                readonly type: "string";
                            };
                            readonly bank_account_token: {
                                readonly description: "Alloy-generated unique identifier for the account";
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly external_account_id: {
                                readonly description: "Unique identifier associated with the account. At least one of `external_account_id` or `account_number` must be provided.";
                                readonly type: "string";
                                readonly maxLength: 60;
                                readonly examples: readonly ["test-account-001"];
                            };
                            readonly account_number: {
                                readonly description: "Bank account number. At least one of `account_number` or `external_account_id` must be provided.";
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly description: "Allowed values are (`\"deposit\"`, `\"credit\"`, `\"brokerage\"`).";
                                readonly type: "string";
                                readonly enum: readonly ["deposit", "credit", "brokerage"];
                                readonly examples: readonly ["deposit"];
                            };
                            readonly account_name: {
                                readonly description: "Name of the account.";
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly description: "Routing number associated with the account.";
                                readonly type: "string";
                            };
                            readonly account_type: {
                                readonly description: "Allowed values are (`\"merchant account\"`, `\"person\"`, `null`).";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["merchant account", "person"];
                            };
                            readonly is_linked_account: {
                                readonly description: "Determines whether the account is a funding source or linked account.";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly link_timestamp: {
                                readonly description: "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlink_timestamp: {
                                readonly description: "ISO 8601 date. Cannot be future-dated.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly opening_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly country_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "2-character ISO Code (mainly used for merchant accounts).";
                                readonly maxLength: 2;
                            };
                            readonly account_snapshot: {
                                readonly type: readonly ["object", "null"];
                                readonly description: "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.";
                                readonly required: readonly ["timestamp"];
                                readonly properties: {
                                    readonly timestamp: {
                                        readonly description: "ISO 8601 timestamp of the account snapshot.";
                                        readonly type: "string";
                                        readonly format: "date";
                                        readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                                    };
                                    readonly meta: {
                                        readonly description: "JSON object with any meta information related to the account snpashot.";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly details: {
                                        readonly description: "JSON object with any details related to the account snapshot.";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly status: {
                                                readonly type: "string";
                                                readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                                readonly examples: readonly ["Active"];
                                            };
                                            readonly status_detail: {
                                                readonly type: "string";
                                            };
                                            readonly loan_credit_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_interest_rate: {
                                                readonly type: "number";
                                            };
                                            readonly original_amount: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_push_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly ach_pull_limit: {
                                                readonly type: "integer";
                                            };
                                            readonly name_first: {
                                                readonly type: "string";
                                            };
                                            readonly name_last: {
                                                readonly type: "string";
                                            };
                                            readonly email_address: {
                                                readonly type: "string";
                                            };
                                            readonly phone_number: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly mailing_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\")";
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line1: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_line2: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_city: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_state: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_postal_code: {
                                                readonly type: "string";
                                            };
                                            readonly primary_address_country_code: {
                                                readonly description: "3-character country code (e.g. \"USA\").";
                                                readonly type: "string";
                                                readonly maxLength: 3;
                                            };
                                        };
                                    };
                                    readonly account_view: {
                                        readonly description: "JSON object";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly account_balance: {
                                                readonly description: "Account balance in cents.";
                                                readonly type: "integer";
                                            };
                                            readonly date_last_activity: {
                                                readonly description: "ISO 8601 timestamp of last activity.";
                                                readonly type: "string";
                                            };
                                            readonly is_good_standing: {
                                                readonly type: "boolean";
                                            };
                                            readonly past_due_days: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly product_code: {
                                readonly description: "Identifier of the product name.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_name: {
                                readonly description: "Name of the product associated with the account.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly product_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Product number that corresponds to the product_name associated with the account.";
                            };
                            readonly maturity_date: {
                                readonly description: "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly closing_date: {
                                readonly description: "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly cif_number: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Unique identifier used by bank cores to refer to a customer.";
                            };
                            readonly card_network: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Card network of the card that was used in this transaction.";
                                readonly maxLength: 20;
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tokenization_method: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "method of tokenization used to anonymize account information.";
                                readonly maxLength: 20;
                            };
                            readonly merchant_category_code: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "The merchant category code (MCC) is used to classify a business by the purposes it serves or the products it sells.";
                                readonly maxLength: 20;
                            };
                            readonly name_on_card: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ame on the card used in this transaction.";
                                readonly maxLength: 100;
                            };
                            readonly account_number_last4: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Last four digits of account number";
                                readonly maxLength: 4;
                            };
                            readonly avs: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Verifies the numeric portions of the address against the billing address.";
                                readonly maxLength: 20;
                            };
                            readonly currency: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "ISO-4217 currency code.";
                                readonly maxLength: 4;
                            };
                            readonly meta: {
                                readonly description: "JSON object with any meta information related to the account";
                                readonly type: readonly ["object", "null"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly type: "object";
                    }];
                };
                readonly account_snapshot: {
                    readonly description: "Snapshot of the source account of the transaction. Note that this is not a separate call, it is part of either an /accounts call or an /evaluations call";
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["timestamp"];
                    readonly properties: {
                        readonly timestamp: {
                            readonly description: "ISO 8601 timestamp of the account snapshot.";
                            readonly type: "string";
                            readonly format: "date";
                            readonly examples: readonly ["2022-03-21T21:50:07.623Z"];
                        };
                        readonly meta: {
                            readonly description: "JSON object with any meta information related to the account snpashot.";
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly details: {
                            readonly description: "JSON object with any details related to the account snapshot.";
                            readonly type: "object";
                            readonly properties: {
                                readonly status: {
                                    readonly type: "string";
                                    readonly enum: readonly [any, "Active", "Deactivated", "Frozen", "Pending", "Inactive"];
                                    readonly examples: readonly ["Active"];
                                };
                                readonly status_detail: {
                                    readonly type: "string";
                                };
                                readonly loan_credit_limit: {
                                    readonly type: "integer";
                                };
                                readonly interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_interest_rate: {
                                    readonly type: "number";
                                };
                                readonly original_amount: {
                                    readonly type: "integer";
                                };
                                readonly ach_push_limit: {
                                    readonly type: "integer";
                                };
                                readonly ach_pull_limit: {
                                    readonly type: "integer";
                                };
                                readonly name_first: {
                                    readonly type: "string";
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line1: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_line2: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_city: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_state: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly mailing_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\")";
                                    readonly type: "string";
                                };
                                readonly primary_address_line1: {
                                    readonly type: "string";
                                };
                                readonly primary_address_line2: {
                                    readonly type: "string";
                                };
                                readonly primary_address_city: {
                                    readonly type: "string";
                                };
                                readonly primary_address_state: {
                                    readonly type: "string";
                                };
                                readonly primary_address_postal_code: {
                                    readonly type: "string";
                                };
                                readonly primary_address_country_code: {
                                    readonly description: "3-character country code (e.g. \"USA\").";
                                    readonly type: "string";
                                    readonly maxLength: 3;
                                };
                            };
                        };
                        readonly account_view: {
                            readonly description: "JSON object";
                            readonly type: "object";
                            readonly properties: {
                                readonly account_balance: {
                                    readonly description: "Account balance in cents.";
                                    readonly type: "integer";
                                };
                                readonly date_last_activity: {
                                    readonly description: "ISO 8601 timestamp of last activity.";
                                    readonly type: "string";
                                };
                                readonly is_good_standing: {
                                    readonly type: "boolean";
                                };
                                readonly past_due_days: {
                                    readonly type: "integer";
                                };
                            };
                        };
                    };
                };
                readonly process_method: {
                    readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`. `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Card. Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                };
                readonly category: {
                    readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                };
                readonly interaction_point: {
                    readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                };
                readonly type_code: {
                    readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                    readonly type: readonly ["string", "null"];
                };
                readonly type_description: {
                    readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly is_approved: {
                    readonly description: "If the transaction was approved by the customer";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_reversal: {
                    readonly description: "If the transaction is a refund";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_triggered_by_user: {
                    readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_international_override: {
                    readonly description: "True if the transaction is international";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly return_code: {
                    readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                    readonly type: readonly ["string", "null"];
                };
                readonly return_code_reason: {
                    readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Unauthorized"];
                };
                readonly entry_mode: {
                    readonly description: "POS entry modes on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly response_code: {
                    readonly description: "Response codes returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly status: {
                    readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)";
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
                };
                readonly status_detail: {
                    readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly iso_message: {
                    readonly description: "ISO standard value returned on card transactions";
                    readonly type: readonly ["number", "null"];
                };
                readonly settled_at: {
                    readonly description: "ISO 8601 date. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly latest_transaction_date: {
                    readonly description: "ISO 8601 date. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly description: {
                    readonly description: "A description of the transaction. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly approval_code: {
                    readonly description: "The raw approval code provided by the customer. Currently not used in decisioning.";
                    readonly type: readonly ["string", "null"];
                };
                readonly transaction_meta: {
                    readonly description: "Object containing extra raw data not stored in other columns. Currently not used in decisioning.";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                };
            };
        }];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly Authorization: {
                    readonly type: "string";
                    readonly description: "Basic authorization header per the OAuth Client Authorization Header standard.\n\nThe format is `Basic <auth_string>`, where `<auth_string>` is the base64 encode of the string `application_token:application_secret` (the application token and application secret, separated by a colon character).\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-entity-token": {
                    readonly type: "string";
                    readonly description: "If running an additional evaluation for an existing entity - the existing entity token can be provided to connect the new evaluation to the entity.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-external-entity-id": {
                    readonly type: "string";
                    readonly description: "A string to identify the entity created by the evaluation in your system.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-parent-entity-token": {
                    readonly type: "string";
                    readonly description: "A token of an entity to be used as a parent entity.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-entity-type": {
                    readonly description: "For transactions workflows, specifies whether the entity associated with\nthe evaluation is a `business` or `person` entity. Defaults to `person`.\n";
                    readonly type: "string";
                    readonly enum: readonly ["business", "person"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-hydrate-counterparty-data": {
                    readonly type: "boolean";
                    readonly description: "Optional boolean value, required to be true for using counterparty sanction screening in a transaction workflow.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-hydrate-entity-data": {
                    readonly type: "boolean";
                    readonly description: "Optional boolean value, required to be true for using source entity sanction screening in a transaction workflow.\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly required: {
                    readonly type: "array";
                    readonly description: "The required fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["name_first"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["First name"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly ["^[^d]*$"];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
                readonly optional: {
                    readonly type: "array";
                    readonly description: "The optional fields for this workflow";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly key: {
                                readonly type: "string";
                                readonly examples: readonly ["email_address"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["Email address"];
                            };
                            readonly regex: {
                                readonly type: "string";
                                readonly examples: readonly [""];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "201": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly result: {
                            readonly type: "string";
                        };
                        readonly score: {
                            readonly type: "number";
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome: {
                            readonly type: "string";
                        };
                    };
                };
                readonly supplied: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly matching: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly diligence: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly related_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly raw_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly audit_archive: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostEvents: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly event_type: {
                readonly type: "string";
                readonly enum: readonly ["person_created", "person_updated", "business_created", "business_updated", "bank_account_created", "bank_account_updated", "external_account_created", "external_account_updated", "transaction", "login"];
            };
            readonly data: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly title: "Person Created data";
                    readonly required: readonly ["external_entity_id"];
                    readonly properties: {
                        readonly external_entity_id: {
                            readonly type: "string";
                        };
                        readonly gender: {
                            readonly type: "string";
                        };
                        readonly birth_date: {
                            readonly type: "string";
                        };
                        readonly document_ssn: {
                            readonly type: "string";
                        };
                        readonly name_first: {
                            readonly type: "string";
                        };
                        readonly name_last: {
                            readonly type: "string";
                        };
                        readonly document_id_card: {
                            readonly type: "string";
                        };
                        readonly document_license: {
                            readonly type: "string";
                        };
                        readonly document_passport: {
                            readonly type: "string";
                        };
                        readonly addresses: {
                            readonly type: "array";
                            readonly description: "List of addresses for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Full address for an entity";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                        readonly examples: readonly ["primary"];
                                    };
                                    readonly line_1: {
                                        readonly type: "string";
                                        readonly examples: readonly ["41 E. 11th"];
                                    };
                                    readonly line_2: {
                                        readonly type: "string";
                                        readonly examples: readonly ["2nd floor"];
                                    };
                                    readonly city: {
                                        readonly type: "string";
                                        readonly examples: readonly ["New York"];
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                        readonly examples: readonly ["NY"];
                                    };
                                    readonly postal_code: {
                                        readonly type: "string";
                                        readonly examples: readonly [10003];
                                    };
                                    readonly country_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["US"];
                                    };
                                };
                            };
                        };
                        readonly emails: {
                            readonly type: "array";
                            readonly description: "List of emails for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Email for an entity";
                                readonly properties: {
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["events@alloy.com"];
                                    };
                                };
                            };
                        };
                        readonly phones: {
                            readonly type: "array";
                            readonly description: "List of phone numbers for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Phone for an entity";
                                readonly properties: {
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [5555555555];
                                    };
                                };
                            };
                        };
                        readonly timestamp: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly title: "Person Updated data";
                    readonly anyOf: readonly [{
                        readonly title: "Updated by External ID";
                        readonly required: readonly ["external_entity_id"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly gender: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly type: "string";
                            };
                            readonly document_ssn: {
                                readonly type: "string";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly document_id_card: {
                                readonly type: "string";
                            };
                            readonly document_license: {
                                readonly type: "string";
                            };
                            readonly document_passport: {
                                readonly type: "string";
                            };
                            readonly addresses: {
                                readonly type: "array";
                                readonly description: "List of addresses for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Full address for an entity";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                            readonly examples: readonly ["primary"];
                                        };
                                        readonly line_1: {
                                            readonly type: "string";
                                            readonly examples: readonly ["41 E. 11th"];
                                        };
                                        readonly line_2: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2nd floor"];
                                        };
                                        readonly city: {
                                            readonly type: "string";
                                            readonly examples: readonly ["New York"];
                                        };
                                        readonly state: {
                                            readonly type: "string";
                                            readonly examples: readonly ["NY"];
                                        };
                                        readonly postal_code: {
                                            readonly type: "string";
                                            readonly examples: readonly [10003];
                                        };
                                        readonly country_code: {
                                            readonly type: "string";
                                            readonly examples: readonly ["US"];
                                        };
                                    };
                                };
                            };
                            readonly emails: {
                                readonly type: "array";
                                readonly description: "List of emails for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Email for an entity";
                                    readonly properties: {
                                        readonly email_address: {
                                            readonly type: "string";
                                            readonly examples: readonly ["events@alloy.com"];
                                        };
                                    };
                                };
                            };
                            readonly phones: {
                                readonly type: "array";
                                readonly description: "List of phone numbers for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Phone for an entity";
                                    readonly properties: {
                                        readonly phone_number: {
                                            readonly type: "string";
                                            readonly examples: readonly [5555555555];
                                        };
                                    };
                                };
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly examples: readonly ["P-R21gUOQ8rwCvmx8tIscf"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Updated by Entity Token";
                        readonly required: readonly ["entity_token"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly gender: {
                                readonly type: "string";
                            };
                            readonly birth_date: {
                                readonly type: "string";
                            };
                            readonly document_ssn: {
                                readonly type: "string";
                            };
                            readonly name_first: {
                                readonly type: "string";
                            };
                            readonly name_last: {
                                readonly type: "string";
                            };
                            readonly document_id_card: {
                                readonly type: "string";
                            };
                            readonly document_license: {
                                readonly type: "string";
                            };
                            readonly document_passport: {
                                readonly type: "string";
                            };
                            readonly addresses: {
                                readonly type: "array";
                                readonly description: "List of addresses for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Full address for an entity";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                            readonly examples: readonly ["primary"];
                                        };
                                        readonly line_1: {
                                            readonly type: "string";
                                            readonly examples: readonly ["41 E. 11th"];
                                        };
                                        readonly line_2: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2nd floor"];
                                        };
                                        readonly city: {
                                            readonly type: "string";
                                            readonly examples: readonly ["New York"];
                                        };
                                        readonly state: {
                                            readonly type: "string";
                                            readonly examples: readonly ["NY"];
                                        };
                                        readonly postal_code: {
                                            readonly type: "string";
                                            readonly examples: readonly [10003];
                                        };
                                        readonly country_code: {
                                            readonly type: "string";
                                            readonly examples: readonly ["US"];
                                        };
                                    };
                                };
                            };
                            readonly emails: {
                                readonly type: "array";
                                readonly description: "List of emails for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Email for an entity";
                                    readonly properties: {
                                        readonly email_address: {
                                            readonly type: "string";
                                            readonly examples: readonly ["events@alloy.com"];
                                        };
                                    };
                                };
                            };
                            readonly phones: {
                                readonly type: "array";
                                readonly description: "List of phone numbers for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Phone for an entity";
                                    readonly properties: {
                                        readonly phone_number: {
                                            readonly type: "string";
                                            readonly examples: readonly [5555555555];
                                        };
                                    };
                                };
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly examples: readonly ["P-R21gUOQ8rwCvmx8tIscf"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                }, {
                    readonly title: "Business Created data";
                    readonly required: readonly ["external_entity_id", "business_name"];
                    readonly properties: {
                        readonly external_entity_id: {
                            readonly type: "string";
                        };
                        readonly business_name: {
                            readonly type: "string";
                        };
                        readonly business_alternate_name: {
                            readonly type: "string";
                        };
                        readonly business_registry_id: {
                            readonly type: "string";
                        };
                        readonly business_federal_ein: {
                            readonly type: "string";
                        };
                        readonly addresses: {
                            readonly type: "array";
                            readonly description: "List of addresses for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Full address for an entity";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                        readonly examples: readonly ["primary"];
                                    };
                                    readonly line_1: {
                                        readonly type: "string";
                                        readonly examples: readonly ["41 E. 11th"];
                                    };
                                    readonly line_2: {
                                        readonly type: "string";
                                        readonly examples: readonly ["2nd floor"];
                                    };
                                    readonly city: {
                                        readonly type: "string";
                                        readonly examples: readonly ["New York"];
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                        readonly examples: readonly ["NY"];
                                    };
                                    readonly postal_code: {
                                        readonly type: "string";
                                        readonly examples: readonly [10003];
                                    };
                                    readonly country_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["US"];
                                    };
                                };
                            };
                        };
                        readonly emails: {
                            readonly type: "array";
                            readonly description: "List of emails for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Email for an entity";
                                readonly properties: {
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["events@alloy.com"];
                                    };
                                };
                            };
                        };
                        readonly phones: {
                            readonly type: "array";
                            readonly description: "List of phone numbers for the given entity.\n";
                            readonly items: {
                                readonly type: "object";
                                readonly description: "Phone for an entity";
                                readonly properties: {
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [5555555555];
                                    };
                                };
                            };
                        };
                        readonly timestamp: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly title: "Business Updated data";
                    readonly anyOf: readonly [{
                        readonly title: "Updated by External ID";
                        readonly required: readonly ["external_entity_id"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly business_name: {
                                readonly type: "string";
                            };
                            readonly business_alternate_name: {
                                readonly type: "string";
                            };
                            readonly business_registry_id: {
                                readonly type: "string";
                            };
                            readonly business_federal_ein: {
                                readonly type: "string";
                            };
                            readonly addresses: {
                                readonly type: "array";
                                readonly description: "List of addresses for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Full address for an entity";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                            readonly examples: readonly ["primary"];
                                        };
                                        readonly line_1: {
                                            readonly type: "string";
                                            readonly examples: readonly ["41 E. 11th"];
                                        };
                                        readonly line_2: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2nd floor"];
                                        };
                                        readonly city: {
                                            readonly type: "string";
                                            readonly examples: readonly ["New York"];
                                        };
                                        readonly state: {
                                            readonly type: "string";
                                            readonly examples: readonly ["NY"];
                                        };
                                        readonly postal_code: {
                                            readonly type: "string";
                                            readonly examples: readonly [10003];
                                        };
                                        readonly country_code: {
                                            readonly type: "string";
                                            readonly examples: readonly ["US"];
                                        };
                                    };
                                };
                            };
                            readonly emails: {
                                readonly type: "array";
                                readonly description: "List of emails for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Email for an entity";
                                    readonly properties: {
                                        readonly email_address: {
                                            readonly type: "string";
                                            readonly examples: readonly ["events@alloy.com"];
                                        };
                                    };
                                };
                            };
                            readonly phones: {
                                readonly type: "array";
                                readonly description: "List of phone numbers for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Phone for an entity";
                                    readonly properties: {
                                        readonly phone_number: {
                                            readonly type: "string";
                                            readonly examples: readonly [5555555555];
                                        };
                                    };
                                };
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly examples: readonly ["P-R21gUOQ8rwCvmx8tIscf"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Updated by Entity Token";
                        readonly required: readonly ["entity_token"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly business_name: {
                                readonly type: "string";
                            };
                            readonly business_alternate_name: {
                                readonly type: "string";
                            };
                            readonly business_registry_id: {
                                readonly type: "string";
                            };
                            readonly business_federal_ein: {
                                readonly type: "string";
                            };
                            readonly addresses: {
                                readonly type: "array";
                                readonly description: "List of addresses for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Full address for an entity";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly description: "Allowed values are (`\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`, `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`)";
                                            readonly examples: readonly ["primary"];
                                        };
                                        readonly line_1: {
                                            readonly type: "string";
                                            readonly examples: readonly ["41 E. 11th"];
                                        };
                                        readonly line_2: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2nd floor"];
                                        };
                                        readonly city: {
                                            readonly type: "string";
                                            readonly examples: readonly ["New York"];
                                        };
                                        readonly state: {
                                            readonly type: "string";
                                            readonly examples: readonly ["NY"];
                                        };
                                        readonly postal_code: {
                                            readonly type: "string";
                                            readonly examples: readonly [10003];
                                        };
                                        readonly country_code: {
                                            readonly type: "string";
                                            readonly examples: readonly ["US"];
                                        };
                                    };
                                };
                            };
                            readonly emails: {
                                readonly type: "array";
                                readonly description: "List of emails for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Email for an entity";
                                    readonly properties: {
                                        readonly email_address: {
                                            readonly type: "string";
                                            readonly examples: readonly ["events@alloy.com"];
                                        };
                                    };
                                };
                            };
                            readonly phones: {
                                readonly type: "array";
                                readonly description: "List of phone numbers for the given entity.\n";
                                readonly items: {
                                    readonly type: "object";
                                    readonly description: "Phone for an entity";
                                    readonly properties: {
                                        readonly phone_number: {
                                            readonly type: "string";
                                            readonly examples: readonly [5555555555];
                                        };
                                    };
                                };
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly examples: readonly ["P-R21gUOQ8rwCvmx8tIscf"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                }, {
                    readonly title: "Bank Account Created data";
                    readonly required: readonly ["external_account_id", "entities"];
                    readonly properties: {
                        readonly external_account_id: {
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly type: "string";
                        };
                        readonly account_name: {
                            readonly type: "string";
                        };
                        readonly account_number: {
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly type: "string";
                        };
                        readonly opening_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly maturity_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly closing_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly cif_number: {
                            readonly type: "string";
                        };
                        readonly card_network: {
                            readonly type: "string";
                        };
                        readonly country_code: {
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly type: "string";
                        };
                        readonly product_code: {
                            readonly type: "string";
                        };
                        readonly product_name: {
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly type: "string";
                        };
                        readonly status_detail: {
                            readonly type: "string";
                        };
                        readonly credit_limit: {
                            readonly type: "string";
                        };
                        readonly account_balance: {
                            readonly type: "string";
                        };
                        readonly entities: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly anyOf: readonly [{
                                    readonly title: "Linked by External ID";
                                    readonly required: readonly ["external_entity_id"];
                                    readonly properties: {
                                        readonly account_holder_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["primary", "secondary"];
                                        };
                                        readonly external_entity_id: {
                                            readonly type: "string";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }, {
                                    readonly title: "Linked by Entity Token";
                                    readonly required: readonly ["entity_token"];
                                    readonly properties: {
                                        readonly account_holder_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["primary", "secondary"];
                                        };
                                        readonly external_entity_id: {
                                            readonly type: "string";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }];
                            };
                        };
                        readonly timestamp: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly title: "bank Account Updated data";
                    readonly anyOf: readonly [{
                        readonly title: "Updated by External ID";
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly opening_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly maturity_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly closing_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly cif_number: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly country_code: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                            readonly product_code: {
                                readonly type: "string";
                            };
                            readonly product_name: {
                                readonly type: "string";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly credit_limit: {
                                readonly type: "string";
                            };
                            readonly account_balance: {
                                readonly type: "string";
                            };
                            readonly entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly anyOf: readonly [{
                                        readonly title: "Linked by External ID";
                                        readonly required: readonly ["external_entity_id"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }, {
                                        readonly title: "Linked by Entity Token";
                                        readonly required: readonly ["entity_token"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }];
                                };
                            };
                            readonly account_token: {
                                readonly type: "string";
                                readonly examples: readonly ["A-WO6WloK6odpcoxJkTKAt"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Updated by Account Token";
                        readonly required: readonly ["account_token"];
                        readonly properties: {
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly opening_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly maturity_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly closing_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly cif_number: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly country_code: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                            readonly product_code: {
                                readonly type: "string";
                            };
                            readonly product_name: {
                                readonly type: "string";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly credit_limit: {
                                readonly type: "string";
                            };
                            readonly account_balance: {
                                readonly type: "string";
                            };
                            readonly entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly anyOf: readonly [{
                                        readonly title: "Linked by External ID";
                                        readonly required: readonly ["external_entity_id"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }, {
                                        readonly title: "Linked by Entity Token";
                                        readonly required: readonly ["entity_token"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }];
                                };
                            };
                            readonly account_token: {
                                readonly type: "string";
                                readonly examples: readonly ["A-WO6WloK6odpcoxJkTKAt"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                }, {
                    readonly title: "External Account Created data";
                    readonly required: readonly ["external_account_id", "entities"];
                    readonly properties: {
                        readonly external_account_id: {
                            readonly type: "string";
                        };
                        readonly account_class: {
                            readonly type: "string";
                        };
                        readonly account_name: {
                            readonly type: "string";
                        };
                        readonly account_number: {
                            readonly type: "string";
                        };
                        readonly routing_number: {
                            readonly type: "string";
                        };
                        readonly opening_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly maturity_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly closing_date: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly cif_number: {
                            readonly type: "string";
                        };
                        readonly card_network: {
                            readonly type: "string";
                        };
                        readonly country_code: {
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly type: "string";
                        };
                        readonly product_code: {
                            readonly type: "string";
                        };
                        readonly product_name: {
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly type: "string";
                        };
                        readonly status_detail: {
                            readonly type: "string";
                        };
                        readonly credit_limit: {
                            readonly type: "string";
                        };
                        readonly account_balance: {
                            readonly type: "string";
                        };
                        readonly entities: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly anyOf: readonly [{
                                    readonly title: "Linked by External ID";
                                    readonly required: readonly ["external_entity_id"];
                                    readonly properties: {
                                        readonly account_holder_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["primary", "secondary"];
                                        };
                                        readonly external_entity_id: {
                                            readonly type: "string";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }, {
                                    readonly title: "Linked by Entity Token";
                                    readonly required: readonly ["entity_token"];
                                    readonly properties: {
                                        readonly account_holder_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["primary", "secondary"];
                                        };
                                        readonly external_entity_id: {
                                            readonly type: "string";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }];
                            };
                        };
                        readonly link_timestamp: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly description: "The timestamp of when account was linked, if not supplied taken from timestamp on `external_account_created`";
                        };
                        readonly timestamp: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                    readonly type: "object";
                }, {
                    readonly title: "External Account Updated data";
                    readonly anyOf: readonly [{
                        readonly title: "Updated by External ID";
                        readonly required: readonly ["external_account_id"];
                        readonly properties: {
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly opening_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly maturity_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly closing_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly cif_number: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly country_code: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                            readonly product_code: {
                                readonly type: "string";
                            };
                            readonly product_name: {
                                readonly type: "string";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly credit_limit: {
                                readonly type: "string";
                            };
                            readonly account_balance: {
                                readonly type: "string";
                            };
                            readonly entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly anyOf: readonly [{
                                        readonly title: "Linked by External ID";
                                        readonly required: readonly ["external_entity_id"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }, {
                                        readonly title: "Linked by Entity Token";
                                        readonly required: readonly ["entity_token"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }];
                                };
                            };
                            readonly account_token: {
                                readonly type: "string";
                                readonly examples: readonly ["A-WO6WloK6odpcoxJkTKAt"];
                            };
                            readonly link_timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly description: "The timestamp of when account was linked, if not supplied taken from timestamp on `external_account_created`";
                            };
                            readonly unlink_timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Updated by Account Token";
                        readonly required: readonly ["account_token"];
                        readonly properties: {
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_class: {
                                readonly type: "string";
                            };
                            readonly account_name: {
                                readonly type: "string";
                            };
                            readonly account_number: {
                                readonly type: "string";
                            };
                            readonly routing_number: {
                                readonly type: "string";
                            };
                            readonly opening_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly maturity_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly closing_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly cif_number: {
                                readonly type: "string";
                            };
                            readonly card_network: {
                                readonly type: "string";
                            };
                            readonly country_code: {
                                readonly type: "string";
                            };
                            readonly currency: {
                                readonly type: "string";
                            };
                            readonly product_code: {
                                readonly type: "string";
                            };
                            readonly product_name: {
                                readonly type: "string";
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                            readonly status_detail: {
                                readonly type: "string";
                            };
                            readonly credit_limit: {
                                readonly type: "string";
                            };
                            readonly account_balance: {
                                readonly type: "string";
                            };
                            readonly entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly anyOf: readonly [{
                                        readonly title: "Linked by External ID";
                                        readonly required: readonly ["external_entity_id"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }, {
                                        readonly title: "Linked by Entity Token";
                                        readonly required: readonly ["entity_token"];
                                        readonly properties: {
                                            readonly account_holder_type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["primary", "secondary"];
                                            };
                                            readonly external_entity_id: {
                                                readonly type: "string";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly type: "object";
                                    }];
                                };
                            };
                            readonly account_token: {
                                readonly type: "string";
                                readonly examples: readonly ["A-WO6WloK6odpcoxJkTKAt"];
                            };
                            readonly link_timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly description: "The timestamp of when account was linked, if not supplied taken from timestamp on `external_account_created`";
                            };
                            readonly unlink_timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                }, {
                    readonly title: "Transaction data";
                    readonly required: readonly ["external_transaction_id", "transaction_created_date", "amount", "counterparty", "currency"];
                    readonly anyOf: readonly [{
                        readonly title: "Specify External IDs";
                        readonly required: readonly ["external_entity_id", "external_account_id"];
                        readonly properties: {
                            readonly external_transaction_id: {
                                readonly description: "Unique external identifier for the transaction.";
                                readonly type: "string";
                            };
                            readonly amount: {
                                readonly description: "Amount in cents. +/- indicate direction of funds.";
                                readonly type: "integer";
                            };
                            readonly currency: {
                                readonly description: "3-character currency code (e.g. \"USD\")";
                                readonly type: "string";
                            };
                            readonly entity_token: {
                                readonly type: "string";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_token: {
                                readonly type: "string";
                            };
                            readonly counterparty: {
                                readonly type: "object";
                                readonly anyOf: readonly [{
                                    readonly title: "Specify Account Number";
                                    readonly required: readonly ["account_number"];
                                    readonly properties: {
                                        readonly external_counterparty_id: {
                                            readonly type: "string";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly routing_number: {
                                            readonly type: "string";
                                        };
                                        readonly account_number: {
                                            readonly type: "string";
                                        };
                                        readonly counterparty_type: {
                                            readonly type: "string";
                                        };
                                        readonly account_name: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_1: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_2: {
                                            readonly type: "string";
                                        };
                                        readonly address_city: {
                                            readonly type: "string";
                                        };
                                        readonly address_state: {
                                            readonly type: "string";
                                        };
                                        readonly address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly address_country_code: {
                                            readonly type: "string";
                                        };
                                        readonly card_network: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_code: {
                                            readonly type: "string";
                                        };
                                        readonly name_on_card: {
                                            readonly type: "string";
                                        };
                                        readonly avs: {
                                            readonly type: "string";
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_description: {
                                            readonly type: "string";
                                        };
                                        readonly currency: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }, {
                                    readonly title: "Specify External Counterparty ID";
                                    readonly required: readonly ["external_counterparty_id"];
                                    readonly properties: {
                                        readonly external_counterparty_id: {
                                            readonly type: "string";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly routing_number: {
                                            readonly type: "string";
                                        };
                                        readonly account_number: {
                                            readonly type: "string";
                                        };
                                        readonly counterparty_type: {
                                            readonly type: "string";
                                        };
                                        readonly account_name: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_1: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_2: {
                                            readonly type: "string";
                                        };
                                        readonly address_city: {
                                            readonly type: "string";
                                        };
                                        readonly address_state: {
                                            readonly type: "string";
                                        };
                                        readonly address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly address_country_code: {
                                            readonly type: "string";
                                        };
                                        readonly card_network: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_code: {
                                            readonly type: "string";
                                        };
                                        readonly name_on_card: {
                                            readonly type: "string";
                                        };
                                        readonly avs: {
                                            readonly type: "string";
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_description: {
                                            readonly type: "string";
                                        };
                                        readonly currency: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }];
                            };
                            readonly category: {
                                readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                            };
                            readonly transaction_settled_date: {
                                readonly description: "ISO 8601 date. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly description: {
                                readonly description: "A description of the transaction. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly type_code: {
                                readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly type_description: {
                                readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly is_approved: {
                                readonly description: "If the transaction was approved by the customer";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_reversal: {
                                readonly description: "If the transaction is a refund";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly process_method: {
                                readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`, `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Card", "Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                            };
                            readonly is_triggered_by_user: {
                                readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly interaction_point: {
                                readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                            };
                            readonly return_code: {
                                readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly return_code_reason: {
                                readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Unauthorized"];
                            };
                            readonly status: {
                                readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
                            };
                            readonly status_detail: {
                                readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly response_code: {
                                readonly description: "Response codes returned on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly iso_message: {
                                readonly description: "ISO standard value returned on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly entry_mode: {
                                readonly description: "POS entry modes on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Specify Alloy Tokens";
                        readonly required: readonly ["entity_token", "account_token"];
                        readonly properties: {
                            readonly external_transaction_id: {
                                readonly description: "Unique external identifier for the transaction.";
                                readonly type: "string";
                            };
                            readonly amount: {
                                readonly description: "Amount in cents. +/- indicate direction of funds.";
                                readonly type: "integer";
                            };
                            readonly currency: {
                                readonly description: "3-character currency code (e.g. \"USD\")";
                                readonly type: "string";
                            };
                            readonly entity_token: {
                                readonly type: "string";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly external_account_id: {
                                readonly type: "string";
                            };
                            readonly account_token: {
                                readonly type: "string";
                            };
                            readonly counterparty: {
                                readonly type: "object";
                                readonly anyOf: readonly [{
                                    readonly title: "Specify Account Number";
                                    readonly required: readonly ["account_number"];
                                    readonly properties: {
                                        readonly external_counterparty_id: {
                                            readonly type: "string";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly routing_number: {
                                            readonly type: "string";
                                        };
                                        readonly account_number: {
                                            readonly type: "string";
                                        };
                                        readonly counterparty_type: {
                                            readonly type: "string";
                                        };
                                        readonly account_name: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_1: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_2: {
                                            readonly type: "string";
                                        };
                                        readonly address_city: {
                                            readonly type: "string";
                                        };
                                        readonly address_state: {
                                            readonly type: "string";
                                        };
                                        readonly address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly address_country_code: {
                                            readonly type: "string";
                                        };
                                        readonly card_network: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_code: {
                                            readonly type: "string";
                                        };
                                        readonly name_on_card: {
                                            readonly type: "string";
                                        };
                                        readonly avs: {
                                            readonly type: "string";
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_description: {
                                            readonly type: "string";
                                        };
                                        readonly currency: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }, {
                                    readonly title: "Specify External Counterparty ID";
                                    readonly required: readonly ["external_counterparty_id"];
                                    readonly properties: {
                                        readonly external_counterparty_id: {
                                            readonly type: "string";
                                        };
                                        readonly name_first: {
                                            readonly type: "string";
                                        };
                                        readonly name_last: {
                                            readonly type: "string";
                                        };
                                        readonly routing_number: {
                                            readonly type: "string";
                                        };
                                        readonly account_number: {
                                            readonly type: "string";
                                        };
                                        readonly counterparty_type: {
                                            readonly type: "string";
                                        };
                                        readonly account_name: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_1: {
                                            readonly type: "string";
                                        };
                                        readonly address_line_2: {
                                            readonly type: "string";
                                        };
                                        readonly address_city: {
                                            readonly type: "string";
                                        };
                                        readonly address_state: {
                                            readonly type: "string";
                                        };
                                        readonly address_postal_code: {
                                            readonly type: "string";
                                        };
                                        readonly address_country_code: {
                                            readonly type: "string";
                                        };
                                        readonly card_network: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_code: {
                                            readonly type: "string";
                                        };
                                        readonly name_on_card: {
                                            readonly type: "string";
                                        };
                                        readonly avs: {
                                            readonly type: "string";
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                        };
                                        readonly merchant_category_description: {
                                            readonly type: "string";
                                        };
                                        readonly currency: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly type: "object";
                                }];
                            };
                            readonly category: {
                                readonly description: "Splits process_method into more granular values. Allowed values are (`\"Adjustment\"`, `\"ATM Rebate\"`, `\"Bill Pay\"`, `\"Deposit\"`, `\"Direct Deposit Bonus\"`, `\"Interest\"`, `\"Overdraft Fee\"`, `\"Payment\"`, `\"Promo\"`, `\"Purchase\"`, `\"Purchase Return\"`, `\"Return\"`, `\"Service Charge\"`, `\"Withdrawal\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Adjustment", "ATM Rebate", "Bill Pay", "Deposit", "Direct Deposit Bonus", "Interest", "Overdraft Fee", "Payment", "Promo", "Purchase", "Purchase Return", "Return", "Service Charge", "Withdrawal"];
                            };
                            readonly transaction_settled_date: {
                                readonly description: "ISO 8601 date. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly description: {
                                readonly description: "A description of the transaction. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly type_code: {
                                readonly description: "The raw type code of the transaction.  There should be a 1:1 mapping from type_code to type_description provided to Alloy.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly type_description: {
                                readonly description: "Description of the type code. There should be a 1:1 mapping from type_code to type_description provided to Alloy. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly is_approved: {
                                readonly description: "If the transaction was approved by the customer";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_reversal: {
                                readonly description: "If the transaction is a refund";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly process_method: {
                                readonly description: "Platform or process method of the transaction. Allowed values are (`\"Card\"`, `\"Internal\"`, `\"Check\"`, `\"P2P\"`, `\"ACH\"`, `\"Cash\"`, `\"Wire\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Card", "Internal", "Check", "P2P", "ACH", "Cash", "Wire"];
                            };
                            readonly is_triggered_by_user: {
                                readonly description: "Whether the transaction is initiated by the source entity. Mainly used to distinguish betweeh ACH push and pull";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly interaction_point: {
                                readonly description: "Where the transaction took place. Allow values are (`\"Android\"`, `\"ATM\"`, `\"Card Swipe Terminal\"`, `\"iOS\"`, `\"Mobile\"`, `\"Online Form\"`, `\"Point of Sale\"`, `\"Teller\"`, `\"3rd Party App\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Android", "ATM", "Card Swipe Terminal", "iOS", "Mobile", "Online Form", "Point of Sale", "Teller", "3rd Party App"];
                            };
                            readonly return_code: {
                                readonly description: "This represents the Alphanumeric ACH return Code. (e.g. R01)";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly return_code_reason: {
                                readonly description: "Allowed values are (`\"Unauthorized\"`, `null`). Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Unauthorized"];
                            };
                            readonly status: {
                                readonly description: "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)";
                                readonly type: readonly ["string", "null"];
                                readonly enum: readonly ["Acknowledged", "Accepted", "Rejected", "Paused", "Pending", "Completed", "Declined", "Cancelled"];
                            };
                            readonly status_detail: {
                                readonly description: "Additional description on transaction status. Currently not used in decisioning.";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly response_code: {
                                readonly description: "Response codes returned on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly iso_message: {
                                readonly description: "ISO standard value returned on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly entry_mode: {
                                readonly description: "POS entry modes on card transactions";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                }, {
                    readonly title: "Login data";
                    readonly anyOf: readonly [{
                        readonly title: "Specify External Entity ID";
                        readonly required: readonly ["external_entity_id"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly external_login_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier for grouping multiple login events into a single login.";
                            };
                            readonly username: {
                                readonly type: "string";
                            };
                            readonly login_method: {
                                readonly type: "string";
                                readonly enum: readonly ["biometric", "password", "sso", "passwordless"];
                            };
                            readonly sso: {
                                readonly type: "string";
                                readonly enum: readonly ["okta", "google", "apple"];
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly enum: readonly ["attempted", "failed", "mfa", "successful"];
                            };
                            readonly device: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_device_id: {
                                        readonly type: "string";
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                    };
                                    readonly ip_address_v6: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }, {
                        readonly title: "Specify Entity Token";
                        readonly required: readonly ["entity_token"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                            };
                            readonly external_login_id: {
                                readonly type: "string";
                                readonly description: "Unique identifier for grouping multiple login events into a single login.";
                            };
                            readonly username: {
                                readonly type: "string";
                            };
                            readonly login_method: {
                                readonly type: "string";
                                readonly enum: readonly ["biometric", "password", "sso", "passwordless"];
                            };
                            readonly sso: {
                                readonly type: "string";
                                readonly enum: readonly ["okta", "google", "apple"];
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly enum: readonly ["attempted", "failed", "mfa", "successful"];
                            };
                            readonly device: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_device_id: {
                                        readonly type: "string";
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                    };
                                    readonly ip_address_v6: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly timestamp: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly required: readonly ["login_method", "username", "timestamp"];
                }];
                readonly required: readonly ["timestamp"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [201];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly _href: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly event: {
                    readonly type: "object";
                    readonly properties: {
                        readonly event_type: {
                            readonly type: "string";
                            readonly examples: readonly ["person_created"];
                        };
                        readonly event_status: {
                            readonly type: "string";
                            readonly examples: readonly ["PROCESSED"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "data saved from event";
                            readonly additionalProperties: true;
                        };
                        readonly evaluations: {
                            readonly type: "array";
                            readonly description: "list of source workflows ran";
                            readonly items: {};
                        };
                        readonly journey_applications: {
                            readonly type: "array";
                            readonly description: "list of journey applications created";
                            readonly items: {};
                        };
                    };
                };
                readonly error: {
                    readonly type: "object";
                    readonly description: "error details";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [400];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly _href: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly event: {
                    readonly type: "object";
                    readonly properties: {
                        readonly event_type: {
                            readonly type: "string";
                            readonly examples: readonly ["person_created"];
                        };
                        readonly event_status: {
                            readonly type: "string";
                            readonly examples: readonly ["ERROR"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "data saved from event";
                            readonly additionalProperties: true;
                        };
                        readonly evaluations: {
                            readonly type: "array";
                            readonly description: "list of source workflows ran";
                            readonly items: {};
                        };
                        readonly journey_applications: {
                            readonly type: "array";
                            readonly description: "list of journey applications created";
                            readonly items: {};
                        };
                    };
                };
                readonly error: {
                    readonly type: "object";
                    readonly description: "error details";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "409": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [409];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly _href: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly event: {
                    readonly type: "object";
                    readonly properties: {
                        readonly event_type: {
                            readonly type: "string";
                            readonly examples: readonly ["person_created"];
                        };
                        readonly event_status: {
                            readonly type: "string";
                            readonly examples: readonly ["ERROR"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "data saved from event";
                            readonly additionalProperties: true;
                        };
                        readonly evaluations: {
                            readonly type: "array";
                            readonly description: "list of source workflows ran";
                            readonly items: {};
                        };
                        readonly journey_applications: {
                            readonly type: "array";
                            readonly description: "list of journey applications created";
                            readonly items: {};
                        };
                    };
                };
                readonly error: {
                    readonly type: "object";
                    readonly description: "error details";
                    readonly additionalProperties: true;
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostGroupsGroupTokenReviews: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["agent", "reasons", "outcome"];
        readonly properties: {
            readonly agent: {
                readonly type: "object";
                readonly required: readonly ["email"];
                readonly properties: {
                    readonly email: {
                        readonly description: "Valid email of agent with Alloy account access.";
                        readonly type: "string";
                    };
                };
            };
            readonly reasons: {
                readonly type: "array";
                readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly outcome: {
                readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                readonly type: "string";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Group associated with the Review. When reviewing a Group via this endpoint, the Group Token is set in `group_token` in the response, and the `entity_token` property is not returned.";
                };
            };
            readonly required: readonly ["group_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly review_token: {
                    readonly description: "Unique ID for the Review.";
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly description: "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.";
                    readonly type: "string";
                };
                readonly group_token: {
                    readonly description: "Unique ID for the Group (of Entities) associated with the Review.";
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly description: "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly outcome: {
                    readonly description: "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.";
                    readonly type: "string";
                };
                readonly application_name: {
                    readonly description: "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.";
                    readonly type: "string";
                };
                readonly reviewer: {
                    readonly description: "Email of the Agent that created the Review.";
                    readonly type: "string";
                };
                readonly timestamp: {
                    readonly description: "Unix timestamp when the Review was created.";
                    readonly type: "number";
                };
                readonly reasons: {
                    readonly type: "array";
                    readonly description: "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly agent: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email: {
                            readonly description: "Valid email of agent with Alloy account access.";
                            readonly type: "string";
                        };
                        readonly external_id: {
                            readonly description: "Unique external ID associated with the Agent, if any.";
                            readonly type: "string";
                        };
                    };
                };
                readonly notes: {
                    readonly type: "array";
                    readonly description: "Array of notes associated with the Review, if any.";
                    readonly items: {
                        readonly properties: {
                            readonly note: {
                                readonly description: "Content to include in the body of the note.";
                                readonly type: "string";
                            };
                            readonly note_author_agent_email: {
                                readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                                readonly type: "string";
                            };
                            readonly created_at: {
                                readonly description: "Unix timestamp when the note was created.";
                                readonly type: "number";
                            };
                            readonly updated_at: {
                                readonly description: "Unix timestamp when the note was last updated.";
                                readonly type: "number";
                            };
                        };
                        readonly type: "object";
                    };
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostGroupsGroupTokenReviewsReviewTokenNotes: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["note", "note_author_agent_email"];
        readonly properties: {
            readonly note: {
                readonly description: "Content to include in the body of the note.";
                readonly type: "string";
            };
            readonly note_author_agent_email: {
                readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                readonly type: "string";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_token: {
                    readonly type: "string";
                    readonly examples: readonly ["G-nAq6pvYcJgOhYi4ImwJs"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Group associated with the Review. When reviewing a Group via this endpoint, the Group Token is set in `group_token` in the response, and the `entity_token` property is not returned.";
                };
                readonly review_token: {
                    readonly type: "string";
                    readonly examples: readonly ["R-YdTUzlDapbQ7Y8bZKB4v"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Unique ID for the Review.";
                };
            };
            readonly required: readonly ["group_token", "review_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly review_token: {
                    readonly description: "Unique ID for the Review.";
                    readonly type: "string";
                    readonly examples: readonly ["R-c78PhQHJOeJhPfzYh5MX"];
                };
                readonly note: {
                    readonly description: "Content to include in the body of the note.";
                    readonly type: "string";
                    readonly examples: readonly ["this is a note"];
                };
                readonly note_author_agent_email: {
                    readonly description: "Valid email of agent with Alloy account access, associated with creation of the note.";
                    readonly type: "string";
                    readonly examples: readonly ["this+agent@alloy.co"];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp when the note was created.";
                    readonly type: "number";
                    readonly examples: readonly [1634059958368];
                };
                readonly updated_at: {
                    readonly description: "Unix timestamp when the note was last updated.";
                    readonly type: "number";
                    readonly examples: readonly [1634059958368];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostGroupsGrouptokenEvaluations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly groupToken: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with group.";
                };
            };
            readonly required: readonly ["groupToken"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "number";
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "number";
                };
                readonly summary: {
                    readonly type: "object";
                    readonly properties: {
                        readonly result: {
                            readonly type: "string";
                        };
                        readonly score: {
                            readonly type: "number";
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly outcome: {
                            readonly type: "string";
                        };
                    };
                };
                readonly supplied: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly matching: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly diligence: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly related_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly raw_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly formatted_responses: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly audit_archive: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostGroupsGrouptokenNotes: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly note_author_agent_email: {
                readonly type: "string";
            };
            readonly note: {
                readonly type: "string";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly groupToken: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with group.";
                };
            };
            readonly required: readonly ["groupToken"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                };
                readonly note: {
                    readonly type: "string";
                };
                readonly note_author_agent_email: {
                    readonly type: "string";
                };
                readonly created_at: {
                    readonly type: "number";
                };
                readonly updated_at: {
                    readonly type: "number";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysApplicationsExtExternalApplicationIdLatestRerun: {
    readonly body: {
        readonly properties: {
            readonly external_application_id: {
                readonly type: "string";
                readonly description: "Optional, allows to set a different external identifier for the new Application. If not supplied, the value will be\ncopied from the original Application (null if none had originally been provided). Supported characters are: `a-zA-Z0-9_-`\n";
            };
            readonly exclude_entity_tokens: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                };
                readonly description: "List of entity tokens to be deleted\n";
            };
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities to be processed in this Application.\n";
                readonly items: {
                    readonly type: "object";
                    readonly required: readonly ["data"];
                    readonly properties: {
                        readonly external_entity_id: {
                            readonly type: "string";
                            readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                            readonly examples: readonly ["my_system_entity_id_123"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                            readonly properties: {
                                readonly name_first: {
                                    readonly type: "string";
                                    readonly examples: readonly ["John"];
                                };
                                readonly name_middle: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Franklin"];
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Doe"];
                                };
                                readonly birth_date: {
                                    readonly type: "string";
                                    readonly examples: readonly ["1990-01-25"];
                                };
                                readonly document_ssn: {
                                    readonly type: "string";
                                    readonly description: "Social Security number.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_national_id: {
                                    readonly type: "string";
                                    readonly description: "National ID number for a non-US person entity.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_id_card: {
                                    readonly type: "string";
                                    readonly description: "ID card number";
                                    readonly examples: readonly [1122334455];
                                };
                                readonly document_license: {
                                    readonly type: "string";
                                    readonly description: "U.S. issued driver's license number";
                                    readonly examples: readonly [111222333];
                                };
                                readonly document_passport: {
                                    readonly type: "string";
                                    readonly description: "Passport number";
                                    readonly examples: readonly [123456789];
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                    readonly examples: readonly ["john@alloy.com"];
                                };
                                readonly gender: {
                                    readonly type: "string";
                                    readonly examples: readonly ["male"];
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                    readonly examples: readonly [8443825569];
                                };
                                readonly ip_address_v4: {
                                    readonly type: "string";
                                    readonly examples: readonly ["42.206.213.70"];
                                };
                                readonly addresses: {
                                    readonly type: "array";
                                    readonly description: "List of addresses for the given entity.\n";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly description: "Full address for a person entity";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                readonly examples: readonly ["primary"];
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["41 E. 11th"];
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["2nd floor"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["New York"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["NY"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly [10003];
                                            };
                                            readonly country_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["US"];
                                            };
                                        };
                                    };
                                };
                                readonly meta: {
                                    readonly type: "object";
                                    readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                    readonly additionalProperties: true;
                                };
                            };
                        };
                        readonly entity_type: {
                            readonly default: "person";
                            readonly type: "string";
                            readonly enum: readonly ["person", "business"];
                            readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                            readonly examples: readonly ["person"];
                        };
                        readonly branch_name: {
                            readonly default: "persons";
                            readonly type: "string";
                            readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                            readonly examples: readonly ["my_person_branch_name"];
                        };
                        readonly entity_token: {
                            readonly type: "string";
                            readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                            readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                        };
                    };
                };
            };
            readonly application_meta: {
                readonly type: "object";
                readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application. If not supplied, the value will be copied from the original Application (null if none had originally been provided).";
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly external_application_id: {
                    readonly type: "string";
                    readonly examples: readonly ["EXT-123456"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "External application identifier, used to identify the original Application";
                };
            };
            readonly required: readonly ["external_application_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly journeyToken: {
                    readonly type: "string";
                    readonly examples: readonly ["J-2t94Ur3wOGmaVUyD4r8"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Optional journey token filter";
                };
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-journey-version": {
                    readonly type: "number";
                    readonly description: "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n";
                    readonly examples: readonly [1];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-sandbox": {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "To run the application using Alloy's sandbox environment, set this header to `true`.\n";
                };
                readonly "alloy-sandbox-services": {
                    readonly type: "string";
                    readonly examples: readonly ["Socure3,EnhancedPersonSearch"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of services that should be run using Alloy's sandbox environment.\n";
                };
                readonly "alloy-refresh-cache": {
                    readonly type: "boolean";
                    readonly description: "To refresh any cached responses from external services, set this header to `true`.\n";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                    readonly examples: readonly ["completed"];
                    readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                };
                readonly sandbox: {
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059958368];
                };
                readonly updated_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961458];
                };
                readonly closed_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1634059961464];
                };
                readonly complete_outcome: {
                    readonly type: "string";
                    readonly examples: readonly ["Approved"];
                };
                readonly is_shadow_app: {
                    readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                    readonly type: "boolean";
                };
                readonly is_part_of_shadow_test: {
                    readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                    readonly type: "boolean";
                };
                readonly journey_application_status: {
                    readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                    readonly type: "string";
                };
                readonly is_archived: {
                    readonly type: "boolean";
                };
                readonly external_group_id: {
                    readonly type: "string";
                };
                readonly external_application_id: {
                    readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                    readonly type: "string";
                };
                readonly is_rerun: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly archived_at: {
                    readonly type: "string";
                };
                readonly terminal_reconciliation_output: {
                    readonly type: "object";
                    readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                    readonly properties: {
                        readonly outcome_reasons: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Fraud Risk"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["adverse_action", any];
                                        readonly description: "`adverse_action`";
                                    };
                                };
                            };
                        };
                        readonly tags: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["fraud_tag"];
                            };
                        };
                        readonly output_attributes: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly oneOf: readonly [{
                                    readonly type: "string";
                                }, {
                                    readonly type: "number";
                                }];
                                readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                            };
                        };
                        readonly matrix_models: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                readonly properties: {
                                    readonly matrix_model_public_version: {
                                        readonly type: "integer";
                                    };
                                    readonly matrix_model_token: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly result: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly enum: readonly ["executed", "not_executed"];
                                        readonly examples: readonly ["completed"];
                                        readonly description: "`executed` `not_executed`";
                                    };
                                    readonly x_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "x-coordinate of the matrix";
                                    };
                                    readonly x_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly y_bucket: {
                                        readonly type: readonly ["number", "null"];
                                        readonly description: "y-coordinate of the matrix";
                                    };
                                    readonly y_value: {
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly application_meta: {
                    readonly type: "object";
                    readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                    readonly additionalProperties: true;
                };
                readonly _embedded: {
                    readonly type: "object";
                    readonly properties: {
                        readonly rerun: {
                            readonly description: "Rerun information";
                            readonly type: "object";
                            readonly properties: {
                                readonly initiated_by: {
                                    readonly type: "string";
                                    readonly enum: readonly ["api", "dashboard"];
                                    readonly examples: readonly ["dashboard"];
                                    readonly description: "`api` `dashboard`";
                                };
                                readonly previous_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                                readonly root_external_group_id: {
                                    readonly type: "string";
                                };
                                readonly root_journey_application_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                };
                            };
                        };
                        readonly events: {
                            readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_application_event_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["alert", "application"];
                                        readonly description: "`alert` `application`";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                        readonly examples: readonly ["started_application"];
                                        readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                    };
                                    readonly external_partner_id: {
                                        readonly type: "string";
                                    };
                                    readonly external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly reason: {
                                        readonly type: "string";
                                    };
                                    readonly reasons: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly timestamp: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1634059958414];
                                    };
                                    readonly outcome: {
                                        readonly type: "string";
                                        readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                    };
                                    readonly evaluation_token: {
                                        readonly type: "string";
                                        readonly description: "Identifying evaluation token (only in evaluation type events)";
                                    };
                                    readonly entity_token: {
                                        readonly type: "string";
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                    };
                                    readonly error_data: {
                                        readonly type: "object";
                                        readonly description: "Additional error data populated when available for `error` event types";
                                        readonly properties: {
                                            readonly error: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly details: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly message: {
                                                        readonly type: "string";
                                                    };
                                                    readonly minor_code: {
                                                        readonly type: "integer";
                                                    };
                                                    readonly error_token: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly timestamp: {
                                                readonly type: "integer";
                                            };
                                            readonly status_code: {
                                                readonly type: "integer";
                                            };
                                            readonly entity_token: {
                                                readonly type: "string";
                                            };
                                            readonly evaluation_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_token: {
                                                readonly type: "string";
                                            };
                                            readonly application_version_id: {
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                    readonly _embedded: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly node: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["1632850505316"];
                                                    };
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                        readonly examples: readonly ["workflow"];
                                                        readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                    };
                                                    readonly config: {
                                                        readonly description: "Config related to the specific node, depending on the type";
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                    readonly workflow_name: {
                                                        readonly type: "string";
                                                    };
                                                    readonly sdk_config: {
                                                        readonly type: "object";
                                                        readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                        readonly properties: {
                                                            readonly documents: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                            readonly selfie: {
                                                                readonly type: "boolean";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly evaluation: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly case: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly journey: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["application", "alert"];
                                    readonly examples: readonly ["application"];
                                    readonly description: "`application` `alert`";
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                };
                                readonly journey_version_num: {
                                    readonly type: "string";
                                };
                                readonly _links: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly self: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly href: {
                                                    readonly type: "string";
                                                    readonly description: "GET route for the Journey";
                                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                };
                                            };
                                        };
                                        readonly callback_by_entity_application_token: {
                                            readonly type: "object";
                                            readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                };
                            };
                        };
                        readonly child_entities: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                        readonly examples: readonly ["external_entity_id123"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["person"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_branch_name: {
                                        readonly type: "string";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                    };
                                    readonly sandbox_persona_name: {
                                        readonly type: "string";
                                        readonly description: "When applicable, name of sandbox persona used for this child entity";
                                    };
                                };
                            };
                        };
                        readonly entity_applications: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly entity_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                    };
                                    readonly entity_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                    };
                                    readonly entity_application_outcome: {
                                        readonly type: "string";
                                        readonly examples: readonly ["approved"];
                                    };
                                    readonly entity_application_status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["completed"];
                                    };
                                    readonly entity_application_status_details: {
                                        readonly type: "object";
                                        readonly description: "Additional details for applications that have status `data_request`";
                                        readonly properties: {
                                            readonly required: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly or: {
                                                readonly type: "string";
                                            };
                                            readonly optional: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly key: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly regex: {
                                                            readonly type: "string";
                                                        };
                                                        readonly description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly output: {
                                        readonly type: "object";
                                        readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                        readonly properties: {
                                            readonly outcome_reasons: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Fraud Risk"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["adverse_action", any];
                                                            readonly description: "`adverse_action`";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly tags: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["fraud_tag"];
                                                };
                                            };
                                            readonly output_attributes: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }];
                                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                };
                                            };
                                            readonly matrix_models: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "object";
                                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                    readonly properties: {
                                                        readonly matrix_model_public_version: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly matrix_model_token: {
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly result: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly status: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["executed", "not_executed"];
                                                            readonly examples: readonly ["completed"];
                                                            readonly description: "`executed` `not_executed`";
                                                        };
                                                        readonly x_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "x-coordinate of the matrix";
                                                        };
                                                        readonly x_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly y_bucket: {
                                                            readonly type: readonly ["number", "null"];
                                                            readonly description: "y-coordinate of the matrix";
                                                        };
                                                        readonly y_value: {
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly entity: {
                            readonly description: "The journey application entity";
                            readonly type: "object";
                            readonly properties: {
                                readonly external_entity_identifier: {
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly token: {
                                    readonly type: "string";
                                    readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly examples: readonly ["group"];
                                };
                            };
                        };
                        readonly multi_environment_config: {
                            readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                            readonly type: "object";
                            readonly properties: {
                                readonly multi_environment_config_token: {
                                    readonly type: "string";
                                };
                                readonly multi_environment_config_notes: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "string";
                                    readonly examples: readonly [1634059958368];
                                };
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                                readonly journey_name: {
                                    readonly type: "string";
                                };
                                readonly journey_public_version: {
                                    readonly type: "number";
                                };
                                readonly actions: {
                                    readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly journey_action_id: {
                                                readonly type: "number";
                                            };
                                            readonly action_version: {
                                                readonly type: "number";
                                            };
                                            readonly action_name: {
                                                readonly type: "string";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                                readonly workflows: {
                                    readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly workflow_name: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_node_type: {
                                                readonly description: "The type of node this workflow is used as, for example Step Up";
                                                readonly type: "string";
                                            };
                                            readonly workflow_token: {
                                                readonly type: "string";
                                            };
                                            readonly workflow_public_version: {
                                                readonly type: "number";
                                            };
                                            readonly outcome: {
                                                readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                readonly type: "string";
                                            };
                                            readonly configured_services: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly service_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly has_credentials: {
                                                            readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly sandbox: {
                                                            readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly credentials_description: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        readonly is_pending_additional_entities: {
                            readonly type: "boolean";
                            readonly default: false;
                            readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "GET route for the Application";
                                    readonly type: "string";
                                    readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenApplications: {
    readonly body: {
        readonly required: readonly ["entities"];
        readonly properties: {
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities to be processed in this Application.\n";
                readonly items: {
                    readonly anyOf: readonly [{
                        readonly title: "Person Entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly name_first: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John"];
                                    };
                                    readonly name_middle: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Franklin"];
                                    };
                                    readonly name_last: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Doe"];
                                    };
                                    readonly birth_date: {
                                        readonly type: "string";
                                        readonly examples: readonly ["1990-01-25"];
                                    };
                                    readonly document_ssn: {
                                        readonly type: "string";
                                        readonly description: "Social Security number.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_national_id: {
                                        readonly type: "string";
                                        readonly description: "National ID number for a non-US person entity.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_id_card: {
                                        readonly type: "string";
                                        readonly description: "ID card number";
                                        readonly examples: readonly [1122334455];
                                    };
                                    readonly document_license: {
                                        readonly type: "string";
                                        readonly description: "U.S. issued driver's license number";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly document_passport: {
                                        readonly type: "string";
                                        readonly description: "Passport number";
                                        readonly examples: readonly [123456789];
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["john@alloy.com"];
                                    };
                                    readonly gender: {
                                        readonly type: "string";
                                        readonly examples: readonly ["male"];
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [8443825569];
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                        readonly examples: readonly ["42.206.213.70"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a person entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                    readonly examples: readonly ["primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                            readonly entity_type: {
                                readonly default: "person";
                                readonly type: "string";
                                readonly enum: readonly ["person", "business"];
                                readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                                readonly examples: readonly ["person"];
                            };
                            readonly branch_name: {
                                readonly default: "persons";
                                readonly type: "string";
                                readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                                readonly examples: readonly ["my_person_branch_name"];
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                                readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                            };
                        };
                    }, {
                        readonly title: "Business Entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_345"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly business_name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Acme Corporation"];
                                    };
                                    readonly business_federal_ein: {
                                        readonly type: "string";
                                        readonly description: "Business federal employer ID number for US business entities.";
                                        readonly examples: readonly [122334455];
                                    };
                                    readonly business_registry_id: {
                                        readonly type: "string";
                                        readonly description: "Business registry ID number for non-US business entities.";
                                        readonly examples: readonly [122334455];
                                    };
                                    readonly business_phone_number: {
                                        readonly type: "string";
                                        readonly description: "Business phone number.";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly business_url: {
                                        readonly type: "string";
                                        readonly description: "Business website.";
                                        readonly examples: readonly ["https://www.acmeco.com/"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a business entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"business_primary\"`, `\"business_secondary\"`, `\"business_previous\"`";
                                                    readonly examples: readonly ["business_primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly representatives: {
                                        readonly type: "array";
                                        readonly description: "List of ultimate beneficial owners associated to the business.";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Ultimate beneficial owners associated to the business.";
                                            readonly properties: {
                                                readonly name_first: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["John"];
                                                };
                                                readonly name_middle: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Franklin"];
                                                };
                                                readonly name_last: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Doe"];
                                                };
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"principal_owner\"` or `\"authorized_signer\"`.";
                                                    readonly examples: readonly ["principal_owner"];
                                                };
                                                readonly birth_date: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["1990-01-25"];
                                                };
                                                readonly document_ssn: {
                                                    readonly type: "string";
                                                    readonly description: "Social Security number";
                                                    readonly examples: readonly [111223333];
                                                };
                                                readonly email_address: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["john@alloy.com"];
                                                };
                                                readonly phone_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [8443825569];
                                                };
                                                readonly addresses: {
                                                    readonly type: "array";
                                                    readonly description: "List of addresses for the given entity.\n";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly description: "Full address for a person entity";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                                readonly examples: readonly ["primary"];
                                                            };
                                                            readonly line_1: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["41 E. 11th"];
                                                            };
                                                            readonly line_2: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["2nd floor"];
                                                            };
                                                            readonly city: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["New York"];
                                                            };
                                                            readonly state: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["NY"];
                                                            };
                                                            readonly postal_code: {
                                                                readonly type: "string";
                                                                readonly examples: readonly [10003];
                                                            };
                                                            readonly country_code: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["US"];
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                            readonly entity_type: {
                                readonly default: "business";
                                readonly type: "string";
                                readonly description: "If left blank, defaults to `\"business\"`.";
                                readonly examples: readonly ["business"];
                            };
                            readonly branch_name: {
                                readonly default: "businesses";
                                readonly type: "string";
                                readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                                readonly examples: readonly ["my_business_branch_name"];
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "The token associated with an existing entity.\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                                readonly examples: readonly ["B-4vaKI3CAgBvpdLpMifon"];
                            };
                        };
                    }];
                };
            };
            readonly external_group_id: {
                readonly type: "string";
                readonly description: "Optional, but if you have an identifier in your system that is unique and that you would like to tie to an\nApplication in a 1:1 relationship, you can include it here.\n";
                readonly examples: readonly ["my_system_group_id_456"];
            };
            readonly external_product_id: {
                readonly type: "string";
                readonly description: "Optional, but if you have an identifier in your system for the product that this\nApplication is applying for, include it here.\n";
                readonly examples: readonly ["my_system_product_id_789"];
            };
            readonly external_application_id: {
                readonly type: "string";
                readonly description: "Optional, but if you have an identifier in your system that refers to an application or an entire account,\nand you would like to associate it with one or more Journey Applications, you can include it here. We also have\na number of endpoints that allow you to reference a Journey Application by external application id instead of by\nJourney Application token when retrieving, rerunning or updating the Application. Supported characters are: `a-zA-Z0-9_-`\n";
            };
            readonly do_await_additional_entities: {
                readonly type: "boolean";
                readonly default: false;
                readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                readonly examples: readonly [false];
            };
            readonly application_meta: {
                readonly type: "object";
                readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.\n";
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
            };
            readonly required: readonly ["journey_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
                readonly hideFields: {
                    readonly type: "string";
                    readonly examples: readonly ["name_first,name_last,document_ssn"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of fields to obfuscate in the full evaluation response (only relevant within the `completed_evaluation` type events, and provided the query parameter `fullData` is also set to `true`).\nFor example, if `hideFields=document_ssn`, then `\"document_ssn\": \"123456789\"` would be returned as `\"document_ssn\": \"*********\"`.\nThis obfuscation will apply to the `supplied`, `formatted`, and `meta` objects in the full evaluation response, including inside nested objects within those objects.\n";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-journey-override-sync": {
                    readonly type: "boolean";
                    readonly description: "This endpoint returns a synchronous response by default. If you would like to override this behavior and get an asynchronous response back immediately, send the header `alloy-journey-override-sync` as `true`.\n";
                    readonly examples: readonly [false];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-journey-version": {
                    readonly type: "number";
                    readonly description: "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n";
                    readonly examples: readonly [1];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-sandbox": {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "To run the application using Alloy's sandbox environment, set this header to `true`.\n";
                };
                readonly "alloy-sandbox-services": {
                    readonly type: "string";
                    readonly examples: readonly ["Socure3,EnhancedPersonSearch"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of services that should be run using Alloy's sandbox environment.\n";
                };
                readonly "alloy-refresh-cache": {
                    readonly type: "boolean";
                    readonly description: "To refresh any cached responses from external services, set this header to `true`.\n";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-multi-environment-config-token": {
                    readonly type: "string";
                    readonly description: "Specifies the Multi-Environment Configuration to be used with this application.\n";
                    readonly examples: readonly ["MEC-1t94UrgAwOGmaVUy94rK"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly title: "When header `alloy-journey-override-sync` is set to `false` or not passed in";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                    };
                    readonly status: {
                        readonly type: "string";
                        readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                        readonly examples: readonly ["completed"];
                        readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                    };
                    readonly sandbox: {
                        readonly type: "boolean";
                    };
                    readonly created_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059958368];
                    };
                    readonly updated_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961458];
                    };
                    readonly closed_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961464];
                    };
                    readonly complete_outcome: {
                        readonly type: "string";
                        readonly examples: readonly ["Approved"];
                    };
                    readonly is_shadow_app: {
                        readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly is_part_of_shadow_test: {
                        readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly journey_application_status: {
                        readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                        readonly type: "string";
                    };
                    readonly is_archived: {
                        readonly type: "boolean";
                    };
                    readonly external_group_id: {
                        readonly type: "string";
                    };
                    readonly external_application_id: {
                        readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                        readonly type: "string";
                    };
                    readonly is_rerun: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly archived_at: {
                        readonly type: "string";
                    };
                    readonly terminal_reconciliation_output: {
                        readonly type: "object";
                        readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                        readonly properties: {
                            readonly outcome_reasons: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fraud Risk"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["adverse_action", any];
                                            readonly description: "`adverse_action`";
                                        };
                                    };
                                };
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fraud_tag"];
                                };
                            };
                            readonly output_attributes: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }];
                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                };
                            };
                            readonly matrix_models: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                    readonly properties: {
                                        readonly matrix_model_public_version: {
                                            readonly type: "integer";
                                        };
                                        readonly matrix_model_token: {
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly result: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly ["executed", "not_executed"];
                                            readonly examples: readonly ["completed"];
                                            readonly description: "`executed` `not_executed`";
                                        };
                                        readonly x_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "x-coordinate of the matrix";
                                        };
                                        readonly x_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly y_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "y-coordinate of the matrix";
                                        };
                                        readonly y_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                };
                            };
                        };
                    };
                    readonly application_meta: {
                        readonly type: "object";
                        readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                        readonly additionalProperties: true;
                    };
                    readonly _embedded: {
                        readonly type: "object";
                        readonly properties: {
                            readonly rerun: {
                                readonly description: "Rerun information";
                                readonly type: "object";
                                readonly properties: {
                                    readonly initiated_by: {
                                        readonly type: "string";
                                        readonly enum: readonly ["api", "dashboard"];
                                        readonly examples: readonly ["dashboard"];
                                        readonly description: "`api` `dashboard`";
                                    };
                                    readonly previous_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                    readonly root_external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly root_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                };
                            };
                            readonly events: {
                                readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly journey_application_event_token: {
                                            readonly type: "string";
                                        };
                                        readonly journey_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                        };
                                        readonly journey_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["alert", "application"];
                                            readonly description: "`alert` `application`";
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                            readonly examples: readonly ["started_application"];
                                            readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                        };
                                        readonly external_partner_id: {
                                            readonly type: "string";
                                        };
                                        readonly external_group_id: {
                                            readonly type: "string";
                                        };
                                        readonly reason: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly timestamp: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1634059958414];
                                        };
                                        readonly outcome: {
                                            readonly type: "string";
                                            readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                        };
                                        readonly evaluation_token: {
                                            readonly type: "string";
                                            readonly description: "Identifying evaluation token (only in evaluation type events)";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                        };
                                        readonly error_data: {
                                            readonly type: "object";
                                            readonly description: "Additional error data populated when available for `error` event types";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly details: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minor_code: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly error_token: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly timestamp: {
                                                    readonly type: "integer";
                                                };
                                                readonly status_code: {
                                                    readonly type: "integer";
                                                };
                                                readonly entity_token: {
                                                    readonly type: "string";
                                                };
                                                readonly evaluation_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_version_id: {
                                                    readonly type: "integer";
                                                };
                                            };
                                        };
                                        readonly _embedded: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly node: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["1632850505316"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                            readonly examples: readonly ["workflow"];
                                                            readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                        };
                                                        readonly config: {
                                                            readonly description: "Config related to the specific node, depending on the type";
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly workflow_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly sdk_config: {
                                                            readonly type: "object";
                                                            readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                            readonly properties: {
                                                                readonly documents: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly selfie: {
                                                                    readonly type: "boolean";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly _links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly evaluation: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly case: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly journey: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application", "alert"];
                                        readonly examples: readonly ["application"];
                                        readonly description: "`application` `alert`";
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                    };
                                    readonly journey_version_num: {
                                        readonly type: "string";
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly self: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                        readonly description: "GET route for the Journey";
                                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                    };
                                                };
                                            };
                                            readonly callback_by_entity_application_token: {
                                                readonly type: "object";
                                                readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly child_entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly external_entity_identifier: {
                                            readonly type: "string";
                                            readonly examples: readonly ["external_entity_id123"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["John Doe"];
                                        };
                                        readonly token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["person"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_branch_name: {
                                            readonly type: "string";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                        };
                                        readonly sandbox_persona_name: {
                                            readonly type: "string";
                                            readonly description: "When applicable, name of sandbox persona used for this child entity";
                                        };
                                    };
                                };
                            };
                            readonly entity_applications: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly entity_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_status_details: {
                                            readonly type: "object";
                                            readonly description: "Additional details for applications that have status `data_request`";
                                            readonly properties: {
                                                readonly required: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly message: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly or: {
                                                    readonly type: "string";
                                                };
                                                readonly optional: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly output: {
                                            readonly type: "object";
                                            readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                            readonly properties: {
                                                readonly outcome_reasons: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Fraud Risk"];
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["adverse_action", any];
                                                                readonly description: "`adverse_action`";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly tags: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["fraud_tag"];
                                                    };
                                                };
                                                readonly output_attributes: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "number";
                                                        }];
                                                        readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                    };
                                                };
                                                readonly matrix_models: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "object";
                                                        readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                        readonly properties: {
                                                            readonly matrix_model_public_version: {
                                                                readonly type: "integer";
                                                            };
                                                            readonly matrix_model_token: {
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly result: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly status: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["executed", "not_executed"];
                                                                readonly examples: readonly ["completed"];
                                                                readonly description: "`executed` `not_executed`";
                                                            };
                                                            readonly x_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "x-coordinate of the matrix";
                                                            };
                                                            readonly x_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly y_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "y-coordinate of the matrix";
                                                            };
                                                            readonly y_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly entity: {
                                readonly description: "The journey application entity";
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["group"];
                                    };
                                };
                            };
                            readonly multi_environment_config: {
                                readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                                readonly type: "object";
                                readonly properties: {
                                    readonly multi_environment_config_token: {
                                        readonly type: "string";
                                    };
                                    readonly multi_environment_config_notes: {
                                        readonly type: "string";
                                    };
                                    readonly created_at: {
                                        readonly type: "string";
                                        readonly examples: readonly [1634059958368];
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_public_version: {
                                        readonly type: "number";
                                    };
                                    readonly actions: {
                                        readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly journey_action_id: {
                                                    readonly type: "number";
                                                };
                                                readonly action_version: {
                                                    readonly type: "number";
                                                };
                                                readonly action_name: {
                                                    readonly type: "string";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                    readonly workflows: {
                                        readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly workflow_name: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_node_type: {
                                                    readonly description: "The type of node this workflow is used as, for example Step Up";
                                                    readonly type: "string";
                                                };
                                                readonly workflow_token: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_public_version: {
                                                    readonly type: "number";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                                readonly configured_services: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly service_name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly has_credentials: {
                                                                readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly sandbox: {
                                                                readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly credentials_description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly is_pending_additional_entities: {
                                readonly type: "boolean";
                                readonly default: false;
                                readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                                readonly examples: readonly [false];
                            };
                        };
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly description: "GET route for the Application";
                                        readonly type: "string";
                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                };
                            };
                        };
                    };
                };
            }, {
                readonly type: "object";
                readonly title: "When header `alloy-journey-override-sync` is set to `true";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-LS0GHKjDNhY6dGlvYxx"];
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "GET route for the Application";
                                        readonly examples: readonly ["/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH"];
                                    };
                                };
                            };
                        };
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly title: "Request Body Failure";
                readonly properties: {
                    readonly status_code: {
                        readonly type: "string";
                        readonly examples: readonly [400];
                    };
                    readonly error: {
                        readonly type: "object";
                        readonly properties: {
                            readonly minor_code: {
                                readonly type: "number";
                                readonly examples: readonly [4003];
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly message: {
                                readonly type: "string";
                            };
                            readonly details: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly error_token: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly timestamp: {
                        readonly type: "number";
                        readonly examples: readonly [1725386185011];
                    };
                    readonly evaluation_token: {
                        readonly type: "string";
                        readonly examples: readonly ["L-5zKNd6TaKRoUILGAFTD6"];
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly examples: readonly ["P-A7dEY59iV6SZhLKGq812"];
                    };
                    readonly application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["nsDnk3oWWaKg2doAv9RWGrRnPOPs126X"];
                    };
                    readonly application_version_id: {
                        readonly type: "string";
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [401];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4011];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Unauthorized"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Your supplied credentials are invalid."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725393617598];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [404];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["93d34663-93ef-425f-aca3-a51d443d55bX"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["nsDnk3oWWaKg2doAv9RWGrRnPOPsy1fX"];
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "409": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [409];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [4091];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly document_token: {
                                    readonly type: "string";
                                };
                                readonly entity_token: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [500];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5000];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly error_token: {
                            readonly type: "string";
                            readonly examples: readonly ["31e6e353-e62b-4fe2-be16-ea37ea9a992c"];
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "503": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "string";
                    readonly examples: readonly [503];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly examples: readonly [5031];
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly examples: readonly ["Oops our database server is unreachable. The engineers have been notified."];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly journey_token: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly error_token: {
                            readonly type: "string";
                        };
                    };
                };
                readonly timestamp: {
                    readonly type: "number";
                    readonly examples: readonly [1725386185011];
                };
                readonly evaluation_token: {
                    readonly type: "string";
                };
                readonly entity_token: {
                    readonly type: "string";
                };
                readonly application_token: {
                    readonly type: "string";
                };
                readonly application_version_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenApplicationsJourneyApplicationTokenCasesCaseTokenReview: {
    readonly body: {
        readonly properties: {
            readonly note: {
                readonly type: "string";
                readonly description: "Note to be attached to the review.";
                readonly examples: readonly ["This is good to go"];
            };
            readonly outcome: {
                readonly type: "string";
                readonly description: "Outcome to complete the manual review with.";
                readonly examples: readonly ["Approved"];
            };
            readonly reason: {
                readonly type: "string";
                readonly description: "Reason for the given outcome. This must be associated with the outcome in the Alloy portal.";
                readonly examples: readonly ["Passed manual checks"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
                readonly case_token: {
                    readonly type: "string";
                    readonly examples: readonly ["C-9fYQgwCIFIrlzmFBu8Im"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the case that's being reviewed. You can get this from the list of Journey Application events returned by the GET request where the event `type` is `pending_review` and the `entity_application_token` is for the entity application you wish to review.";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token", "case_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly additionalProperties: true;
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenApplicationsJourneyApplicationTokenNotes: {
    readonly body: {
        readonly required: readonly ["note_author_agent_email", "note"];
        readonly properties: {
            readonly note_author_agent_email: {
                readonly type: "string";
                readonly description: "Email address of the agent creating the note\n";
                readonly examples: readonly ["matt@alloy.com"];
            };
            readonly note: {
                readonly type: "string";
                readonly description: "The text content of the note being added to the journey application\n";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly note: {
                    readonly type: "string";
                    readonly description: "The text content of the note being added to the Journey Application";
                };
                readonly note_author_agent_email: {
                    readonly type: "string";
                    readonly description: "Email address of the agent that created the note";
                    readonly examples: readonly ["matt@alloy.com"];
                };
                readonly created_at: {
                    readonly type: "string";
                    readonly description: "Timestamp of when the Journey Application was created";
                };
                readonly updated_at: {
                    readonly type: "string";
                    readonly description: "Timestamp of when the Journey Application was last updated";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenApplicationsJourneyApplicationTokenRerun: {
    readonly body: {
        readonly properties: {
            readonly external_application_id: {
                readonly type: "string";
                readonly description: "Optional, allows to set a different external identifier for the new Application. If not supplied, the value will be\ncopied from the original Application (null if none had originally been provided). Supported characters are: `a-zA-Z0-9_-`\n";
            };
            readonly exclude_entity_tokens: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                };
                readonly description: "List of entity tokens to be deleted\n";
            };
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities to be processed in this Application.\n";
                readonly items: {
                    readonly type: "object";
                    readonly required: readonly ["data"];
                    readonly properties: {
                        readonly external_entity_id: {
                            readonly type: "string";
                            readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                            readonly examples: readonly ["my_system_entity_id_123"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                            readonly properties: {
                                readonly name_first: {
                                    readonly type: "string";
                                    readonly examples: readonly ["John"];
                                };
                                readonly name_middle: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Franklin"];
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Doe"];
                                };
                                readonly birth_date: {
                                    readonly type: "string";
                                    readonly examples: readonly ["1990-01-25"];
                                };
                                readonly document_ssn: {
                                    readonly type: "string";
                                    readonly description: "Social Security number.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_national_id: {
                                    readonly type: "string";
                                    readonly description: "National ID number for a non-US person entity.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_id_card: {
                                    readonly type: "string";
                                    readonly description: "ID card number";
                                    readonly examples: readonly [1122334455];
                                };
                                readonly document_license: {
                                    readonly type: "string";
                                    readonly description: "U.S. issued driver's license number";
                                    readonly examples: readonly [111222333];
                                };
                                readonly document_passport: {
                                    readonly type: "string";
                                    readonly description: "Passport number";
                                    readonly examples: readonly [123456789];
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                    readonly examples: readonly ["john@alloy.com"];
                                };
                                readonly gender: {
                                    readonly type: "string";
                                    readonly examples: readonly ["male"];
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                    readonly examples: readonly [8443825569];
                                };
                                readonly ip_address_v4: {
                                    readonly type: "string";
                                    readonly examples: readonly ["42.206.213.70"];
                                };
                                readonly addresses: {
                                    readonly type: "array";
                                    readonly description: "List of addresses for the given entity.\n";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly description: "Full address for a person entity";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                readonly examples: readonly ["primary"];
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["41 E. 11th"];
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["2nd floor"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["New York"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["NY"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly [10003];
                                            };
                                            readonly country_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["US"];
                                            };
                                        };
                                    };
                                };
                                readonly meta: {
                                    readonly type: "object";
                                    readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                    readonly additionalProperties: true;
                                };
                            };
                        };
                        readonly entity_type: {
                            readonly default: "person";
                            readonly type: "string";
                            readonly enum: readonly ["person", "business"];
                            readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                            readonly examples: readonly ["person"];
                        };
                        readonly branch_name: {
                            readonly default: "persons";
                            readonly type: "string";
                            readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                            readonly examples: readonly ["my_person_branch_name"];
                        };
                        readonly entity_token: {
                            readonly type: "string";
                            readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                            readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                        };
                    };
                };
            };
            readonly application_meta: {
                readonly type: "object";
                readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application. If not supplied, the value will be copied from the original Application (null if none had originally been provided).";
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-sandbox": {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "To run the application using Alloy's sandbox environment, set this header to `true`.\n";
                };
                readonly "alloy-sandbox-services": {
                    readonly type: "string";
                    readonly examples: readonly ["Socure3,EnhancedPersonSearch"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A comma separated list of services that should be run using Alloy's sandbox environment.\n";
                };
                readonly "alloy-refresh-cache": {
                    readonly type: "boolean";
                    readonly description: "To refresh any cached responses from external services, set this header to `true`.\n";
                    readonly examples: readonly [true];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "alloy-journey-application-sync": {
                    readonly type: "boolean";
                    readonly description: "This endpoint returns an immediate asynchronous response by default. If you would like to override this behavior and get a synchronous response back, send the header `alloy-journey-application-sync` as `true`.\n";
                    readonly examples: readonly [false];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly oneOf: readonly [{
                readonly title: "When header `alloy-journey-application-sync` is set to `false` or not passed in";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-LS0GHKjDNhY6dGlvYxx"];
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "GET route for the Application";
                                        readonly examples: readonly ["/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH"];
                                    };
                                };
                            };
                        };
                    };
                };
            }, {
                readonly title: "When header `alloy-journey-application-sync` is set to `true`";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                    };
                    readonly status: {
                        readonly type: "string";
                        readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                        readonly examples: readonly ["completed"];
                        readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                    };
                    readonly sandbox: {
                        readonly type: "boolean";
                    };
                    readonly created_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059958368];
                    };
                    readonly updated_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961458];
                    };
                    readonly closed_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961464];
                    };
                    readonly complete_outcome: {
                        readonly type: "string";
                        readonly examples: readonly ["Approved"];
                    };
                    readonly is_shadow_app: {
                        readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly is_part_of_shadow_test: {
                        readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly journey_application_status: {
                        readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                        readonly type: "string";
                    };
                    readonly is_archived: {
                        readonly type: "boolean";
                    };
                    readonly external_group_id: {
                        readonly type: "string";
                    };
                    readonly external_application_id: {
                        readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                        readonly type: "string";
                    };
                    readonly is_rerun: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly archived_at: {
                        readonly type: "string";
                    };
                    readonly terminal_reconciliation_output: {
                        readonly type: "object";
                        readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                        readonly properties: {
                            readonly outcome_reasons: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fraud Risk"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["adverse_action", any];
                                            readonly description: "`adverse_action`";
                                        };
                                    };
                                };
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fraud_tag"];
                                };
                            };
                            readonly output_attributes: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }];
                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                };
                            };
                            readonly matrix_models: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                    readonly properties: {
                                        readonly matrix_model_public_version: {
                                            readonly type: "integer";
                                        };
                                        readonly matrix_model_token: {
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly result: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly ["executed", "not_executed"];
                                            readonly examples: readonly ["completed"];
                                            readonly description: "`executed` `not_executed`";
                                        };
                                        readonly x_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "x-coordinate of the matrix";
                                        };
                                        readonly x_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly y_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "y-coordinate of the matrix";
                                        };
                                        readonly y_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                };
                            };
                        };
                    };
                    readonly application_meta: {
                        readonly type: "object";
                        readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                        readonly additionalProperties: true;
                    };
                    readonly _embedded: {
                        readonly type: "object";
                        readonly properties: {
                            readonly rerun: {
                                readonly description: "Rerun information";
                                readonly type: "object";
                                readonly properties: {
                                    readonly initiated_by: {
                                        readonly type: "string";
                                        readonly enum: readonly ["api", "dashboard"];
                                        readonly examples: readonly ["dashboard"];
                                        readonly description: "`api` `dashboard`";
                                    };
                                    readonly previous_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                    readonly root_external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly root_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                };
                            };
                            readonly events: {
                                readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly journey_application_event_token: {
                                            readonly type: "string";
                                        };
                                        readonly journey_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                        };
                                        readonly journey_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["alert", "application"];
                                            readonly description: "`alert` `application`";
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                            readonly examples: readonly ["started_application"];
                                            readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                        };
                                        readonly external_partner_id: {
                                            readonly type: "string";
                                        };
                                        readonly external_group_id: {
                                            readonly type: "string";
                                        };
                                        readonly reason: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly timestamp: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1634059958414];
                                        };
                                        readonly outcome: {
                                            readonly type: "string";
                                            readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                        };
                                        readonly evaluation_token: {
                                            readonly type: "string";
                                            readonly description: "Identifying evaluation token (only in evaluation type events)";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                        };
                                        readonly error_data: {
                                            readonly type: "object";
                                            readonly description: "Additional error data populated when available for `error` event types";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly details: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minor_code: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly error_token: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly timestamp: {
                                                    readonly type: "integer";
                                                };
                                                readonly status_code: {
                                                    readonly type: "integer";
                                                };
                                                readonly entity_token: {
                                                    readonly type: "string";
                                                };
                                                readonly evaluation_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_version_id: {
                                                    readonly type: "integer";
                                                };
                                            };
                                        };
                                        readonly _embedded: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly node: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["1632850505316"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                            readonly examples: readonly ["workflow"];
                                                            readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                        };
                                                        readonly config: {
                                                            readonly description: "Config related to the specific node, depending on the type";
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly workflow_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly sdk_config: {
                                                            readonly type: "object";
                                                            readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                            readonly properties: {
                                                                readonly documents: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly selfie: {
                                                                    readonly type: "boolean";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly _links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly evaluation: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly case: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly journey: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application", "alert"];
                                        readonly examples: readonly ["application"];
                                        readonly description: "`application` `alert`";
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                    };
                                    readonly journey_version_num: {
                                        readonly type: "string";
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly self: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                        readonly description: "GET route for the Journey";
                                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                    };
                                                };
                                            };
                                            readonly callback_by_entity_application_token: {
                                                readonly type: "object";
                                                readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly child_entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly external_entity_identifier: {
                                            readonly type: "string";
                                            readonly examples: readonly ["external_entity_id123"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["John Doe"];
                                        };
                                        readonly token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["person"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_branch_name: {
                                            readonly type: "string";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                        };
                                        readonly sandbox_persona_name: {
                                            readonly type: "string";
                                            readonly description: "When applicable, name of sandbox persona used for this child entity";
                                        };
                                    };
                                };
                            };
                            readonly entity_applications: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly entity_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_status_details: {
                                            readonly type: "object";
                                            readonly description: "Additional details for applications that have status `data_request`";
                                            readonly properties: {
                                                readonly required: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly message: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly or: {
                                                    readonly type: "string";
                                                };
                                                readonly optional: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly output: {
                                            readonly type: "object";
                                            readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                            readonly properties: {
                                                readonly outcome_reasons: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Fraud Risk"];
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["adverse_action", any];
                                                                readonly description: "`adverse_action`";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly tags: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["fraud_tag"];
                                                    };
                                                };
                                                readonly output_attributes: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "number";
                                                        }];
                                                        readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                    };
                                                };
                                                readonly matrix_models: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "object";
                                                        readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                        readonly properties: {
                                                            readonly matrix_model_public_version: {
                                                                readonly type: "integer";
                                                            };
                                                            readonly matrix_model_token: {
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly result: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly status: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["executed", "not_executed"];
                                                                readonly examples: readonly ["completed"];
                                                                readonly description: "`executed` `not_executed`";
                                                            };
                                                            readonly x_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "x-coordinate of the matrix";
                                                            };
                                                            readonly x_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly y_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "y-coordinate of the matrix";
                                                            };
                                                            readonly y_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly entity: {
                                readonly description: "The journey application entity";
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["group"];
                                    };
                                };
                            };
                            readonly multi_environment_config: {
                                readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                                readonly type: "object";
                                readonly properties: {
                                    readonly multi_environment_config_token: {
                                        readonly type: "string";
                                    };
                                    readonly multi_environment_config_notes: {
                                        readonly type: "string";
                                    };
                                    readonly created_at: {
                                        readonly type: "string";
                                        readonly examples: readonly [1634059958368];
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_public_version: {
                                        readonly type: "number";
                                    };
                                    readonly actions: {
                                        readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly journey_action_id: {
                                                    readonly type: "number";
                                                };
                                                readonly action_version: {
                                                    readonly type: "number";
                                                };
                                                readonly action_name: {
                                                    readonly type: "string";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                    readonly workflows: {
                                        readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly workflow_name: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_node_type: {
                                                    readonly description: "The type of node this workflow is used as, for example Step Up";
                                                    readonly type: "string";
                                                };
                                                readonly workflow_token: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_public_version: {
                                                    readonly type: "number";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                                readonly configured_services: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly service_name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly has_credentials: {
                                                                readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly sandbox: {
                                                                readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly credentials_description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly is_pending_additional_entities: {
                                readonly type: "boolean";
                                readonly default: false;
                                readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                                readonly examples: readonly [false];
                            };
                        };
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly description: "GET route for the Application";
                                        readonly type: "string";
                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                };
                            };
                        };
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenApplicationsJourneyApplicationTokenReview: {
    readonly body: {
        readonly properties: {
            readonly note: {
                readonly type: "string";
                readonly description: "Note to be attached to the review.";
                readonly examples: readonly ["This is good to go"];
            };
            readonly outcome: {
                readonly type: "string";
                readonly description: "Outcome to complete the manual review with.";
                readonly examples: readonly ["Approved"];
            };
            readonly reason: {
                readonly type: "string";
                readonly description: "Reason for the given outcome. This must be associated with the outcome in the Alloy portal.";
                readonly examples: readonly ["Passed manual checks"];
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-LS0GHKjDNhY6dGlvYxx"];
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly type: "string";
                                    readonly description: "GET route for the Application";
                                    readonly examples: readonly ["/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH"];
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostJourneysJourneyTokenBatches: {
    readonly body: {
        readonly required: readonly ["entities"];
        readonly properties: {
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities to be processed in this Application.\n";
                readonly items: {
                    readonly type: "object";
                    readonly required: readonly ["data"];
                    readonly properties: {
                        readonly external_entity_id: {
                            readonly type: "string";
                            readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                            readonly examples: readonly ["my_system_entity_id_123"];
                        };
                        readonly data: {
                            readonly type: "object";
                            readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                            readonly properties: {
                                readonly name_first: {
                                    readonly type: "string";
                                    readonly examples: readonly ["John"];
                                };
                                readonly name_middle: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Franklin"];
                                };
                                readonly name_last: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Doe"];
                                };
                                readonly birth_date: {
                                    readonly type: "string";
                                    readonly examples: readonly ["1990-01-25"];
                                };
                                readonly document_ssn: {
                                    readonly type: "string";
                                    readonly description: "Social Security number.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_national_id: {
                                    readonly type: "string";
                                    readonly description: "National ID number for a non-US person entity.";
                                    readonly examples: readonly [111223333];
                                };
                                readonly document_id_card: {
                                    readonly type: "string";
                                    readonly description: "ID card number";
                                    readonly examples: readonly [1122334455];
                                };
                                readonly document_license: {
                                    readonly type: "string";
                                    readonly description: "U.S. issued driver's license number";
                                    readonly examples: readonly [111222333];
                                };
                                readonly document_passport: {
                                    readonly type: "string";
                                    readonly description: "Passport number";
                                    readonly examples: readonly [123456789];
                                };
                                readonly email_address: {
                                    readonly type: "string";
                                    readonly examples: readonly ["john@alloy.com"];
                                };
                                readonly gender: {
                                    readonly type: "string";
                                    readonly examples: readonly ["male"];
                                };
                                readonly phone_number: {
                                    readonly type: "string";
                                    readonly examples: readonly [8443825569];
                                };
                                readonly ip_address_v4: {
                                    readonly type: "string";
                                    readonly examples: readonly ["42.206.213.70"];
                                };
                                readonly addresses: {
                                    readonly type: "array";
                                    readonly description: "List of addresses for the given entity.\n";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly description: "Full address for a person entity";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                readonly examples: readonly ["primary"];
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["41 E. 11th"];
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["2nd floor"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["New York"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["NY"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly [10003];
                                            };
                                            readonly country_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["US"];
                                            };
                                        };
                                    };
                                };
                                readonly meta: {
                                    readonly type: "object";
                                    readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                    readonly additionalProperties: true;
                                };
                            };
                        };
                        readonly entity_type: {
                            readonly default: "person";
                            readonly type: "string";
                            readonly enum: readonly ["person", "business"];
                            readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                            readonly examples: readonly ["person"];
                        };
                        readonly branch_name: {
                            readonly default: "persons";
                            readonly type: "string";
                            readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                            readonly examples: readonly ["my_person_branch_name"];
                        };
                        readonly entity_token: {
                            readonly type: "string";
                            readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                            readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                        };
                        readonly multi_entity_application_batch_key: {
                            readonly type: "string";
                            readonly description: "Use this key to group together multiple entities into the same application, i.e. whichever\nentities have the same multi_entity_application_batch_key, will be created in the same\njourney application. The key will be unique to the batch.\n";
                        };
                        readonly auto_decision_node_outcomes: {
                            readonly type: "object";
                            readonly description: "Supported for both sandbox and prod. This key allows to set outcomes in advance for specified nodes\nin the journey, and skips executing those nodes while running the application. This can be done by\nsupplying a node identifier and its desired outcome. If a workflow or action name is specified, any\nappearances of that workflow/action in the journey will be auto-decisioned. If a node's public id is\nspecified, only that node will be auto-decisioned. If \"Manual Review\" is specified as the node\nidentifier, any manual review nodes in the journey will be auto-decisioned. Workflow/action names\nare case sensitive. Outcomes are case insensitive.\n";
                            readonly additionalProperties: true;
                        };
                        readonly external_partner_id: {
                            readonly type: "string";
                        };
                        readonly external_product_id: {
                            readonly type: "string";
                        };
                        readonly external_group_id: {
                            readonly type: "string";
                        };
                    };
                };
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the journey";
                };
            };
            readonly required: readonly ["journey_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-sandbox-use-webhooks": {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Evaluation header";
                };
                readonly "alloy-bypass-formatter": {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Evaluation header";
                };
                readonly "alloy-journey-version": {
                    readonly type: "number";
                    readonly description: "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n";
                    readonly examples: readonly [1];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "202": {
            readonly type: "object";
            readonly properties: {
                readonly journey_batch_status: {
                    readonly type: "string";
                    readonly enum: readonly ["pending", "complete", "failed", "pre_run"];
                    readonly description: "Current status of batch\n\n`pending` `complete` `failed` `pre_run`";
                };
                readonly journey_batch_token: {
                    readonly type: "string";
                    readonly description: "Unique identifier for newly created batch";
                };
                readonly _links: {
                    readonly type: "object";
                    readonly properties: {
                        readonly self: {
                            readonly type: "object";
                            readonly properties: {
                                readonly href: {
                                    readonly description: "Link to journey batch";
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostLists: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly listName: {
                readonly type: "string";
                readonly examples: readonly ["Custom List A"];
            };
            readonly isBlacklist: {
                readonly type: "boolean";
            };
            readonly isWhitelist: {
                readonly type: "boolean";
            };
            readonly description: {
                readonly type: "string";
                readonly examples: readonly ["This is a testing custom list"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [201];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly list_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-EHbNvGzkeGdy3mXcfbIJ"];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [403];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1708968846525];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "409": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [409];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1708973284933];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostListsListToken: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name_first: {
                readonly type: "string";
                readonly examples: readonly ["John"];
            };
            readonly name_last: {
                readonly type: "string";
                readonly examples: readonly ["Doe"];
            };
            readonly birth_date: {
                readonly type: "string";
                readonly examples: readonly ["1980-01-01"];
            };
            readonly document_ssn: {
                readonly type: "string";
                readonly examples: readonly [123321123];
            };
            readonly address_line_1: {
                readonly type: "string";
                readonly examples: readonly ["123 Fake Street"];
            };
            readonly address_line_2: {
                readonly type: "string";
                readonly examples: readonly ["Apt 10D"];
            };
            readonly address_city: {
                readonly type: "string";
                readonly examples: readonly ["Brooklyn"];
            };
            readonly address_state: {
                readonly type: "string";
                readonly examples: readonly ["NY"];
            };
            readonly address_postal_code: {
                readonly type: "string";
                readonly examples: readonly [11221];
            };
            readonly address_country_code: {
                readonly type: "string";
                readonly examples: readonly ["US"];
            };
            readonly ip_address_v4: {
                readonly type: "string";
                readonly examples: readonly ["192.168.1.168"];
            };
            readonly ip_address_v6: {
                readonly type: "string";
            };
            readonly email_address: {
                readonly type: "string";
                readonly examples: readonly ["john.doe@gmail.com"];
            };
            readonly phone_number: {
                readonly type: "string";
                readonly examples: readonly [5558031203];
            };
            readonly acm_party_id: {
                readonly type: "string";
                readonly examples: readonly [12341231];
            };
            readonly customer_id: {
                readonly type: "string";
                readonly examples: readonly [1249403039484];
            };
            readonly system: {
                readonly type: "string";
                readonly examples: readonly ["bridger"];
            };
            readonly secret_question: {
                readonly type: "string";
                readonly examples: readonly ["what is your quest"];
            };
            readonly secret_answer: {
                readonly type: "string";
                readonly examples: readonly ["to seek the holy grail"];
            };
            readonly comment: {
                readonly type: "string";
                readonly examples: readonly ["this is a comment"];
            };
            readonly group: {
                readonly type: "string";
                readonly examples: readonly ["aml"];
            };
            readonly device_alias: {
                readonly type: "string";
            };
            readonly digital_profile_uuid: {
                readonly type: "string";
            };
            readonly smart_uuid: {
                readonly type: "string";
            };
            readonly session_uuid: {
                readonly type: "string";
            };
            readonly fingerprint_uuid: {
                readonly type: "string";
            };
            readonly external_counterparty_id: {
                readonly type: "string";
            };
            readonly expires_at: {
                readonly type: "string";
                readonly format: "date-time";
                readonly description: "timestamp of when the list row will not be used";
                readonly examples: readonly ["2023-09-01T00:00:00.000Z"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly list_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of List to operate on";
                };
            };
            readonly required: readonly ["list_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [200];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Denylisted entities"];
                };
                readonly list_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-grYZsEoy623M3LiZrK66"];
                };
                readonly data: {
                    readonly type: "string";
                    readonly examples: readonly ["https://sandbox.alloy.co/lists/I-grYZsEoy623M3LiZrK66"];
                };
                readonly records_added: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly total_records: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostOauthBearer: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly application_token: {
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{32}$";
                readonly description: "Application token for the client. This is the application token for a particular workflow.";
            };
            readonly application_secret: {
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{32}$";
                readonly description: "Application secret for the client. This is the application secret for a particular workflow (and must match the application token).";
            };
            readonly grant_type: {
                readonly type: "string";
                readonly description: "OAuth grant type. Only the \"Client Credentials\" grant type is supported.";
                readonly enum: readonly ["client_credentials"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly Authorization: {
                    readonly type: "string";
                    readonly description: "Basic authorization header per the OAuth Client Authorization Header standard.\n\nThe format is `Basic <auth_string>`, where `<auth_string>` is the base64 encode of the string `application_token:application_secret` (the application token and application secret, separated by a colon character).\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly access_token: {
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$";
                    readonly description: "OAuth bearer token in JWT format.";
                };
                readonly bearer_token: {
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$";
                    readonly description: "OAuth bearer token.";
                };
                readonly token_type: {
                    readonly type: "string";
                    readonly enum: readonly ["bearer"];
                    readonly description: "`bearer`";
                };
                readonly expires_in: {
                    readonly type: "number";
                    readonly description: "Seconds until expiration.";
                };
                readonly expires: {
                    readonly type: "number";
                    readonly description: "Expiration time, in **milliseconds** past the epoch.";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly required: readonly ["minor_code", "type", "message"];
                };
            };
            readonly required: readonly ["error"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly enum: readonly [4011];
                            readonly description: "`4011`";
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["Unauthorized"];
                            readonly description: "`Unauthorized`";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly required: readonly ["minor_code", "type", "message"];
                };
            };
            readonly required: readonly ["error"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostOauthValidate: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly bearer_token: {
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$";
                readonly description: "OAuth bearer token in JWT format.";
            };
        };
        readonly required: readonly ["bearer_token"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly valid: {
                    readonly type: "boolean";
                };
                readonly application_active: {
                    readonly type: "boolean";
                };
                readonly expires: {
                    readonly type: "number";
                    readonly description: "Expiration time, in **milliseconds** past the epoch.";
                };
            };
            readonly required: readonly ["valid", "application_active", "expires"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                        };
                        readonly type: {
                            readonly type: "string";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly required: readonly ["minor_code", "type", "message"];
                };
            };
            readonly required: readonly ["error"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly enum: readonly [4011];
                            readonly description: "`4011`";
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["Unauthorized"];
                            readonly description: "`Unauthorized`";
                        };
                        readonly message: {
                            readonly type: "string";
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly required: readonly ["minor_code", "type", "message"];
                };
            };
            readonly required: readonly ["error"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostPortfolioEvaluations: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["source"];
        readonly properties: {
            readonly source: {
                readonly description: "Allowed values are (`\"adhoc\"`)";
                readonly type: "string";
                readonly examples: readonly ["adhoc"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly Authorization: {
                    readonly type: "string";
                    readonly description: "Basic authorization header per the OAuth Client Authorization Header standard.\n\nThe format is `Basic <auth_string>`, where `<auth_string>` is the base64 encode of the string `application_token:application_secret` (the application token and application secret, separated by a colon character).\n";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly portfolio_evaluation_token: {
                    readonly description: "Unique token corresponding to a portfolio evaluation";
                    readonly type: "string";
                    readonly examples: readonly ["SPE-54321"];
                };
                readonly status: {
                    readonly description: "The current state of the portfolio evaluation specified by portfolio_evaluation_token";
                    readonly type: "string";
                    readonly examples: readonly ["pending"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostPublishedAttributes: {
    readonly body: {
        readonly required: readonly ["published_attribute_name", "data_type", "default_value", "contains_pii", "object_type"];
        readonly type: "object";
        readonly properties: {
            readonly published_attribute_token: {
                readonly type: "string";
                readonly readOnly: true;
                readonly description: "An Alloy system generated unique ID for the published attribute.";
            };
            readonly published_attribute_name: {
                readonly description: "The name of the published attribute. If the published attribute is an input attribute in a workflow, this name will serve as the selector in the Evaluation payload.";
                readonly type: "string";
                readonly examples: readonly ["income"];
            };
            readonly data_type: {
                readonly description: "The data type of the published attribute.";
                readonly type: "string";
                readonly enum: readonly ["integer", "decimal", "string", "boolean", "date", "timestamp"];
                readonly examples: readonly ["integer"];
            };
            readonly default_value: {
                readonly description: "A default value is assigned to the published attribute for each object of the `object_type`. If the published attribute is being used as an input attribute, then this value will be used if there is no value provided in the evaluation payload.";
                readonly anyOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "number";
                }, {
                    readonly type: "boolean";
                }];
                readonly examples: readonly [100000];
            };
            readonly default_value_note: {
                readonly description: "A description of the default value.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly ["income of the entity"];
            };
            readonly contains_pii: {
                readonly description: "This is set to true when the published attribute contains PII. If it's true this field will be stored encrypted. Unable to be changed once set.";
                readonly type: "boolean";
            };
            readonly object_type: {
                readonly description: "The object type to which this published attribute applies. Currently only entity is supported.";
                readonly type: "string";
                readonly enum: readonly ["entity"];
                readonly examples: readonly ["entity"];
            };
            readonly value_expires_in: {
                readonly description: "The number of seconds that this published attribute's values will persist for.";
                readonly type: readonly ["integer", "null"];
                readonly examples: readonly ["3000"];
            };
            readonly jq_filter: {
                readonly description: "A way to transform JSON using the jq cli tool.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly [". + 0.5 | floor"];
            };
            readonly description: {
                readonly description: "A description of the published attribute.";
                readonly type: readonly ["string", "null"];
                readonly examples: readonly ["customer's income"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly published_attribute_token: {
                    readonly type: "string";
                    readonly description: "An Alloy system generated unique ID for the published attribute.";
                    readonly examples: readonly ["PA-54eKJIaGGzXdJcyBgrqK"];
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "A message indicating that the published attribute was created.";
                    readonly examples: readonly ["published attribute has been created"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [400];
                };
                readonly timestamp: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly description: "The minor code associated with the error.";
                            readonly examples: readonly [4002];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly description: "The type of error.";
                            readonly examples: readonly ["Request Body Validation Failure"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly description: "A message indicating what the validation errors are.";
                            readonly examples: readonly ["Your request body contained invalid field(s)"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly description: "The details of the validation error.";
                            readonly additionalProperties: true;
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostPublishedAttributesPublishedAttributeTokenValues: {
    readonly body: {
        readonly type: "array";
        readonly items: {
            readonly type: "object";
            readonly required: readonly ["value"];
            readonly anyOf: readonly [{
                readonly required: readonly ["external_entity_id"];
                readonly properties: {
                    readonly external_entity_id: {
                        readonly description: "external entity identifier for the entity you are creating this value for";
                        readonly type: "string";
                    };
                    readonly value: {
                        readonly oneOf: readonly [{
                            readonly type: "string";
                        }, {
                            readonly type: "number";
                        }, {
                            readonly type: "boolean";
                        }];
                        readonly description: "The published attribute's value must be one of the following types:\n  * Option 1: string\n  * Option 2: number\n  * Option 3: boolean\n";
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly description: "Alloy-generated identifier for the entity that you want to set this published attribute's value for.";
                    };
                    readonly timestamp: {
                        readonly description: "ISO 8601 date. Used to determine the most recent value of the published attribute, which will be used in the evaluation. If not provided, defaults to the current date time.";
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly expires_at: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value expires";
                        readonly readOnly: true;
                    };
                    readonly created_at: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value was created.";
                        readonly readOnly: true;
                    };
                };
                readonly type: "object";
            }, {
                readonly required: readonly ["entity_token"];
                readonly properties: {
                    readonly external_entity_id: {
                        readonly description: "external entity identifier for the entity you are creating this value for";
                        readonly type: "string";
                    };
                    readonly value: {
                        readonly oneOf: readonly [{
                            readonly type: "string";
                        }, {
                            readonly type: "number";
                        }, {
                            readonly type: "boolean";
                        }];
                        readonly description: "The published attribute's value must be one of the following types:\n  * Option 1: string\n  * Option 2: number\n  * Option 3: boolean\n";
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly description: "Alloy-generated identifier for the entity that you want to set this published attribute's value for.";
                    };
                    readonly timestamp: {
                        readonly description: "ISO 8601 date. Used to determine the most recent value of the published attribute, which will be used in the evaluation. If not provided, defaults to the current date time.";
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly expires_at: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value expires";
                        readonly readOnly: true;
                    };
                    readonly created_at: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value was created.";
                        readonly readOnly: true;
                    };
                };
                readonly type: "object";
            }];
        };
        readonly minItems: 1;
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "published-attribute-token": {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Published attribute token associated with published attribute.";
                };
            };
            readonly required: readonly ["published-attribute-token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly status: {
                        readonly enum: readonly ["inserted", "errored"];
                        readonly type: "string";
                        readonly description: "The status of creating a published attribute value. The published attribute value was successfully created when the status equals `inserted`.\n\n`inserted` `errored`";
                        readonly examples: readonly ["inserted"];
                    };
                    readonly error: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "The error associated the request.  For example, a payload validation error.";
                    };
                    readonly message: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "Details about the error.";
                    };
                    readonly value: {
                        readonly oneOf: readonly [{
                            readonly type: "string";
                        }, {
                            readonly type: "number";
                        }, {
                            readonly type: "boolean";
                        }];
                        readonly description: "The published attribute's value must be one of the following types:\n  * Option 1: string\n  * Option 2: number\n  * Option 3: boolean\n";
                        readonly examples: readonly [999];
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly description: "Alloy-generated identifier for the entity that you want to set this published attribute's value for.";
                        readonly examples: readonly ["P-xfLo1NUtvxeVCpQHtx8c"];
                    };
                    readonly timestamp: {
                        readonly description: "ISO 8601 date. Used to determine the most recent value of the published attribute, which will be used in the evaluation. If not provided, defaults to the current date time.";
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly examples: readonly ["2022-11-11 20:11:22"];
                    };
                    readonly expires_at: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value expires";
                        readonly readOnly: true;
                    };
                    readonly created_at: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value was created.";
                        readonly readOnly: true;
                        readonly examples: readonly ["2023-09-03T02:03:36.052Z"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "206": {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly status: {
                        readonly enum: readonly ["inserted", "errored"];
                        readonly type: "string";
                        readonly description: "The status of creating a published attribute value. The published attribute value was successfully created when the status equals `inserted`.\n\n`inserted` `errored`";
                        readonly examples: readonly ["inserted"];
                    };
                    readonly error: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "The error associated the request.  For example, a payload validation error.";
                    };
                    readonly message: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "Details about the error.";
                    };
                    readonly value: {
                        readonly oneOf: readonly [{
                            readonly type: "string";
                        }, {
                            readonly type: "number";
                        }, {
                            readonly type: "boolean";
                        }];
                        readonly description: "The published attribute's value must be one of the following types:\n  * Option 1: string\n  * Option 2: number\n  * Option 3: boolean\n";
                        readonly examples: readonly [999];
                    };
                    readonly entity_token: {
                        readonly type: "string";
                        readonly description: "Alloy-generated identifier for the entity that you want to set this published attribute's value for.";
                        readonly examples: readonly ["P-xfLo1NUtvxeVCpQHtx8c"];
                    };
                    readonly timestamp: {
                        readonly description: "ISO 8601 date. Used to determine the most recent value of the published attribute, which will be used in the evaluation. If not provided, defaults to the current date time.";
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly examples: readonly ["2022-11-11 20:11:22"];
                    };
                    readonly expires_at: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value expires";
                        readonly readOnly: true;
                    };
                    readonly created_at: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly description: "The date and time the published attribute value was created.";
                        readonly readOnly: true;
                        readonly examples: readonly ["2023-09-03T02:03:36.052Z"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [404];
                };
                readonly timestamp: {
                    readonly type: "string";
                };
                readonly evaluation_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly entity_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_token: {
                    readonly type: readonly ["string", "null"];
                };
                readonly application_version_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly error: {
                    readonly type: "object";
                    readonly properties: {
                        readonly minor_code: {
                            readonly type: "number";
                            readonly description: "The minor code associated with the error.";
                            readonly examples: readonly [4041];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly description: "The type of error.";
                            readonly examples: readonly ["Not Found"];
                        };
                        readonly message: {
                            readonly type: "string";
                            readonly description: "A message indicating what the error is.";
                            readonly examples: readonly ["Unable to find the requested resource"];
                        };
                        readonly details: {
                            readonly type: "object";
                            readonly description: "The details of the error.";
                            readonly additionalProperties: true;
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutDocumentsDocumentToken: {
    readonly body: {
        readonly type: "string";
        readonly format: "binary";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with document.";
                };
            };
            readonly required: readonly ["document_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly document_token: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly extension: {
                        readonly type: "string";
                    };
                    readonly uploaded: {
                        readonly type: "boolean";
                    };
                    readonly timestamp: {
                        readonly type: "number";
                    };
                    readonly approved: {
                        readonly type: "string";
                    };
                    readonly approval_agent_email: {
                        readonly type: "string";
                    };
                    readonly approval_timestamp: {
                        readonly type: "number";
                    };
                    readonly notes: {
                        readonly type: "array";
                        readonly items: {
                            readonly properties: {
                                readonly note: {
                                    readonly type: "string";
                                };
                                readonly note_author_agent_email: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "number";
                                };
                                readonly updated_at: {
                                    readonly type: "number";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutEntitiesEntityTokenDocumentsDocumentToken: {
    readonly body: {
        readonly type: "string";
        readonly format: "binary";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly document_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with document.";
                };
                readonly entity_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of entity for associated documents.";
                };
            };
            readonly required: readonly ["document_token", "entity_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "array";
            readonly items: {
                readonly properties: {
                    readonly document_token: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly extension: {
                        readonly type: "string";
                    };
                    readonly uploaded: {
                        readonly type: "boolean";
                    };
                    readonly timestamp: {
                        readonly type: "number";
                    };
                    readonly approved: {
                        readonly type: "string";
                    };
                    readonly approval_agent_email: {
                        readonly type: "string";
                    };
                    readonly approval_timestamp: {
                        readonly type: "number";
                    };
                    readonly notes: {
                        readonly type: "array";
                        readonly items: {
                            readonly properties: {
                                readonly note: {
                                    readonly type: "string";
                                };
                                readonly note_author_agent_email: {
                                    readonly type: "string";
                                };
                                readonly created_at: {
                                    readonly type: "number";
                                };
                                readonly updated_at: {
                                    readonly type: "number";
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
                readonly type: "object";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutJourneysApplicationsExtExternalApplicationIdLatest: {
    readonly body: {
        readonly properties: {
            readonly has_finished_sending_additional_entities: {
                readonly type: "boolean";
                readonly description: "If the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application, sending this value as `true` informs the system that all additional entities have been sent in.\n";
            };
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities that can refer either of the following, or a mix of both:\n  * Option 1: Adding new entities\n    * This option is valid in the case where the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application.\n    * The parameters for this option are exactly the same as the `entity` object in the POST request to create the journey application.\n  * Option 2: Updating data for an existing person entity\n    * This option is valid in the case where the entity's application status is `data_request`.\n    * For multi-entity applications, the entity application must be identified by using at least one of the following parameters: `external_entity_id`, `entity_application_token`, or `entity_token`. See those parameters' descriptions for more detail.\n    * For single entity applications, no entity identifier is necessary.\n    * The data in the field `data` is recursively merged with the existing data object for the entity (i.e., the data passed in the POST request and the previous requests to this endpoint, if any).\n  * Option 3: Associating documents for an existing person entity\n    * This option is valid in the case where the entity's application status is `pending_step_up` or `pending_documents` (legacy).\n";
                readonly items: {
                    readonly anyOf: readonly [{
                        readonly title: "Adding new entities";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly name_first: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John"];
                                    };
                                    readonly name_middle: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Franklin"];
                                    };
                                    readonly name_last: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Doe"];
                                    };
                                    readonly birth_date: {
                                        readonly type: "string";
                                        readonly examples: readonly ["1990-01-25"];
                                    };
                                    readonly document_ssn: {
                                        readonly type: "string";
                                        readonly description: "Social Security number.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_national_id: {
                                        readonly type: "string";
                                        readonly description: "National ID number for a non-US person entity.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_id_card: {
                                        readonly type: "string";
                                        readonly description: "ID card number";
                                        readonly examples: readonly [1122334455];
                                    };
                                    readonly document_license: {
                                        readonly type: "string";
                                        readonly description: "U.S. issued driver's license number";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly document_passport: {
                                        readonly type: "string";
                                        readonly description: "Passport number";
                                        readonly examples: readonly [123456789];
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["john@alloy.com"];
                                    };
                                    readonly gender: {
                                        readonly type: "string";
                                        readonly examples: readonly ["male"];
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [8443825569];
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                        readonly examples: readonly ["42.206.213.70"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a person entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                    readonly examples: readonly ["primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                            readonly entity_type: {
                                readonly default: "person";
                                readonly type: "string";
                                readonly enum: readonly ["person", "business"];
                                readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                                readonly examples: readonly ["person"];
                            };
                            readonly branch_name: {
                                readonly default: "persons";
                                readonly type: "string";
                                readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                                readonly examples: readonly ["my_person_branch_name"];
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                                readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                            };
                        };
                    }, {
                        readonly title: "Updating data for an existing person entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n";
                                readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly entity_application_token: {
                                readonly type: "string";
                                readonly description: "Can be used to identify and edit a specific entity application of an existing entity\n";
                                readonly examples: readonly ["EA-0923jfss093ioawo"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly name_first: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John"];
                                    };
                                    readonly name_middle: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Franklin"];
                                    };
                                    readonly name_last: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Doe"];
                                    };
                                    readonly birth_date: {
                                        readonly type: "string";
                                        readonly examples: readonly ["1990-01-25"];
                                    };
                                    readonly document_ssn: {
                                        readonly type: "string";
                                        readonly description: "Social Security number.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_national_id: {
                                        readonly type: "string";
                                        readonly description: "National ID number for a non-US person entity.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_id_card: {
                                        readonly type: "string";
                                        readonly description: "ID card number";
                                        readonly examples: readonly [1122334455];
                                    };
                                    readonly document_license: {
                                        readonly type: "string";
                                        readonly description: "U.S. issued driver's license number";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly document_passport: {
                                        readonly type: "string";
                                        readonly description: "Passport number";
                                        readonly examples: readonly [123456789];
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["john@alloy.com"];
                                    };
                                    readonly gender: {
                                        readonly type: "string";
                                        readonly examples: readonly ["male"];
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [8443825569];
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                        readonly examples: readonly ["42.206.213.70"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a person entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                    readonly examples: readonly ["primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                        };
                    }, {
                        readonly title: "Associating documents for an existing person entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n";
                                readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "For existing entities that were created with external_entity_id, this can be used to identify and edit the entity's ACTIVE entity\napplication.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly entity_application_token: {
                                readonly type: "string";
                                readonly description: "Can be used to identify and edit a specific entity application of an existing entity\n";
                                readonly examples: readonly ["EA-0923jfss093ioawo"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Properties of documents sent for a `pending_step_up` or `pending_documents` (legacy) step. The documents must be uploaded in a seperate request and then associated with the entity in this request. You may either use our SDK ([see here](https://developer.alloy.com/public/docs/document-verification-web-sdk)) or our API ([see here](https://developer.alloy.com/public/reference/put_entities-entity-token-documents-document-token-1)) to upload documents.";
                                readonly properties: {
                                    readonly document_token_selfie: {
                                        readonly type: "string";
                                        readonly description: "The document token for the previously uploaded selfie";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_token_back: {
                                        readonly type: "string";
                                        readonly description: "The document token for the back of the previously uploaded image";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_token_front: {
                                        readonly type: "string";
                                        readonly description: "The document token for the front of a previously uploaded image";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_step: {
                                        readonly type: "string";
                                        readonly description: "This is a field primarily used for legacy Alloy SDK. For journeys, the value should always be `final`. This will tell us to evaluate the document. If `front` or `back` is passed in, then only the quality of the corresponding image will be examined.";
                                        readonly enum: readonly ["front", "back", "final"];
                                    };
                                };
                            };
                        };
                    }];
                };
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly external_application_id: {
                    readonly type: "string";
                    readonly examples: readonly ["EXT-123456"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "External application identifier";
                };
            };
            readonly required: readonly ["external_application_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
                readonly journeyToken: {
                    readonly type: "string";
                    readonly examples: readonly ["J-2t94Ur3wOGmaVUyD4r8"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Optional journey token filter";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-journey-override-sync": {
                    readonly type: "boolean";
                    readonly description: "This endpoint returns a synchronous response by default. If you would like to override this behavior and get an asynchronous response back immediately, send the header `alloy-journey-override-sync` as `true`.\n";
                    readonly examples: readonly [false];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly oneOf: readonly [{
                readonly title: "When header `alloy-journey-override-sync` is set to `true`";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-LS0GHKjDNhY6dGlvYxx"];
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "GET route for the Application";
                                        readonly examples: readonly ["/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH"];
                                    };
                                };
                            };
                        };
                    };
                };
            }, {
                readonly title: "When header `alloy-journey-override-sync` is set to `false` or not passed in";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                    };
                    readonly status: {
                        readonly type: "string";
                        readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                        readonly examples: readonly ["completed"];
                        readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                    };
                    readonly sandbox: {
                        readonly type: "boolean";
                    };
                    readonly created_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059958368];
                    };
                    readonly updated_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961458];
                    };
                    readonly closed_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961464];
                    };
                    readonly complete_outcome: {
                        readonly type: "string";
                        readonly examples: readonly ["Approved"];
                    };
                    readonly is_shadow_app: {
                        readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly is_part_of_shadow_test: {
                        readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly journey_application_status: {
                        readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                        readonly type: "string";
                    };
                    readonly is_archived: {
                        readonly type: "boolean";
                    };
                    readonly external_group_id: {
                        readonly type: "string";
                    };
                    readonly external_application_id: {
                        readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                        readonly type: "string";
                    };
                    readonly is_rerun: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly archived_at: {
                        readonly type: "string";
                    };
                    readonly terminal_reconciliation_output: {
                        readonly type: "object";
                        readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                        readonly properties: {
                            readonly outcome_reasons: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fraud Risk"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["adverse_action", any];
                                            readonly description: "`adverse_action`";
                                        };
                                    };
                                };
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fraud_tag"];
                                };
                            };
                            readonly output_attributes: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }];
                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                };
                            };
                            readonly matrix_models: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                    readonly properties: {
                                        readonly matrix_model_public_version: {
                                            readonly type: "integer";
                                        };
                                        readonly matrix_model_token: {
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly result: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly ["executed", "not_executed"];
                                            readonly examples: readonly ["completed"];
                                            readonly description: "`executed` `not_executed`";
                                        };
                                        readonly x_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "x-coordinate of the matrix";
                                        };
                                        readonly x_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly y_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "y-coordinate of the matrix";
                                        };
                                        readonly y_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                };
                            };
                        };
                    };
                    readonly application_meta: {
                        readonly type: "object";
                        readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                        readonly additionalProperties: true;
                    };
                    readonly _embedded: {
                        readonly type: "object";
                        readonly properties: {
                            readonly rerun: {
                                readonly description: "Rerun information";
                                readonly type: "object";
                                readonly properties: {
                                    readonly initiated_by: {
                                        readonly type: "string";
                                        readonly enum: readonly ["api", "dashboard"];
                                        readonly examples: readonly ["dashboard"];
                                        readonly description: "`api` `dashboard`";
                                    };
                                    readonly previous_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                    readonly root_external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly root_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                };
                            };
                            readonly events: {
                                readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly journey_application_event_token: {
                                            readonly type: "string";
                                        };
                                        readonly journey_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                        };
                                        readonly journey_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["alert", "application"];
                                            readonly description: "`alert` `application`";
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                            readonly examples: readonly ["started_application"];
                                            readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                        };
                                        readonly external_partner_id: {
                                            readonly type: "string";
                                        };
                                        readonly external_group_id: {
                                            readonly type: "string";
                                        };
                                        readonly reason: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly timestamp: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1634059958414];
                                        };
                                        readonly outcome: {
                                            readonly type: "string";
                                            readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                        };
                                        readonly evaluation_token: {
                                            readonly type: "string";
                                            readonly description: "Identifying evaluation token (only in evaluation type events)";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                        };
                                        readonly error_data: {
                                            readonly type: "object";
                                            readonly description: "Additional error data populated when available for `error` event types";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly details: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minor_code: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly error_token: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly timestamp: {
                                                    readonly type: "integer";
                                                };
                                                readonly status_code: {
                                                    readonly type: "integer";
                                                };
                                                readonly entity_token: {
                                                    readonly type: "string";
                                                };
                                                readonly evaluation_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_version_id: {
                                                    readonly type: "integer";
                                                };
                                            };
                                        };
                                        readonly _embedded: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly node: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["1632850505316"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                            readonly examples: readonly ["workflow"];
                                                            readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                        };
                                                        readonly config: {
                                                            readonly description: "Config related to the specific node, depending on the type";
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly workflow_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly sdk_config: {
                                                            readonly type: "object";
                                                            readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                            readonly properties: {
                                                                readonly documents: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly selfie: {
                                                                    readonly type: "boolean";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly _links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly evaluation: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly case: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly journey: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application", "alert"];
                                        readonly examples: readonly ["application"];
                                        readonly description: "`application` `alert`";
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                    };
                                    readonly journey_version_num: {
                                        readonly type: "string";
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly self: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                        readonly description: "GET route for the Journey";
                                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                    };
                                                };
                                            };
                                            readonly callback_by_entity_application_token: {
                                                readonly type: "object";
                                                readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly child_entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly external_entity_identifier: {
                                            readonly type: "string";
                                            readonly examples: readonly ["external_entity_id123"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["John Doe"];
                                        };
                                        readonly token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["person"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_branch_name: {
                                            readonly type: "string";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                        };
                                        readonly sandbox_persona_name: {
                                            readonly type: "string";
                                            readonly description: "When applicable, name of sandbox persona used for this child entity";
                                        };
                                    };
                                };
                            };
                            readonly entity_applications: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly entity_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_status_details: {
                                            readonly type: "object";
                                            readonly description: "Additional details for applications that have status `data_request`";
                                            readonly properties: {
                                                readonly required: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly message: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly or: {
                                                    readonly type: "string";
                                                };
                                                readonly optional: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly output: {
                                            readonly type: "object";
                                            readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                            readonly properties: {
                                                readonly outcome_reasons: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Fraud Risk"];
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["adverse_action", any];
                                                                readonly description: "`adverse_action`";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly tags: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["fraud_tag"];
                                                    };
                                                };
                                                readonly output_attributes: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "number";
                                                        }];
                                                        readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                    };
                                                };
                                                readonly matrix_models: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "object";
                                                        readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                        readonly properties: {
                                                            readonly matrix_model_public_version: {
                                                                readonly type: "integer";
                                                            };
                                                            readonly matrix_model_token: {
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly result: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly status: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["executed", "not_executed"];
                                                                readonly examples: readonly ["completed"];
                                                                readonly description: "`executed` `not_executed`";
                                                            };
                                                            readonly x_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "x-coordinate of the matrix";
                                                            };
                                                            readonly x_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly y_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "y-coordinate of the matrix";
                                                            };
                                                            readonly y_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly entity: {
                                readonly description: "The journey application entity";
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["group"];
                                    };
                                };
                            };
                            readonly multi_environment_config: {
                                readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                                readonly type: "object";
                                readonly properties: {
                                    readonly multi_environment_config_token: {
                                        readonly type: "string";
                                    };
                                    readonly multi_environment_config_notes: {
                                        readonly type: "string";
                                    };
                                    readonly created_at: {
                                        readonly type: "string";
                                        readonly examples: readonly [1634059958368];
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_public_version: {
                                        readonly type: "number";
                                    };
                                    readonly actions: {
                                        readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly journey_action_id: {
                                                    readonly type: "number";
                                                };
                                                readonly action_version: {
                                                    readonly type: "number";
                                                };
                                                readonly action_name: {
                                                    readonly type: "string";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                    readonly workflows: {
                                        readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly workflow_name: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_node_type: {
                                                    readonly description: "The type of node this workflow is used as, for example Step Up";
                                                    readonly type: "string";
                                                };
                                                readonly workflow_token: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_public_version: {
                                                    readonly type: "number";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                                readonly configured_services: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly service_name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly has_credentials: {
                                                                readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly sandbox: {
                                                                readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly credentials_description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly is_pending_additional_entities: {
                                readonly type: "boolean";
                                readonly default: false;
                                readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                                readonly examples: readonly [false];
                            };
                        };
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly description: "GET route for the Application";
                                        readonly type: "string";
                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                };
                            };
                        };
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutJourneysJourneyTokenApplicationsJourneyApplicationToken: {
    readonly body: {
        readonly properties: {
            readonly has_finished_sending_additional_entities: {
                readonly type: "boolean";
                readonly description: "If the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application, sending this value as `true` informs the system that all additional entities have been sent in.\n";
            };
            readonly entities: {
                readonly type: "array";
                readonly description: "List of entities that can refer either of the following, or a mix of both:\n  * Option 1: Adding new entities\n    * This option is valid in the case where the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application.\n    * The parameters for this option are exactly the same as the `entity` object in the POST request to create the journey application.\n  * Option 2: Updating data for an existing person entity\n    * This option is valid in the case where the entity's application status is `data_request`.\n    * For multi-entity applications, the entity application must be identified by using at least one of the following parameters: `external_entity_id`, `entity_application_token`, or `entity_token`. See those parameters' descriptions for more detail.\n    * For single entity applications, no entity identifier is necessary.\n    * The data in the field `data` is recursively merged with the existing data object for the entity (i.e., the data passed in the POST request and the previous requests to this endpoint, if any).\n  * Option 3: Associating documents for an existing person entity\n    * This option is valid in the case where the entity's application status is `pending_step_up` or `pending_documents` (legacy).\n";
                readonly items: {
                    readonly anyOf: readonly [{
                        readonly title: "Adding new entities";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly name_first: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John"];
                                    };
                                    readonly name_middle: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Franklin"];
                                    };
                                    readonly name_last: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Doe"];
                                    };
                                    readonly birth_date: {
                                        readonly type: "string";
                                        readonly examples: readonly ["1990-01-25"];
                                    };
                                    readonly document_ssn: {
                                        readonly type: "string";
                                        readonly description: "Social Security number.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_national_id: {
                                        readonly type: "string";
                                        readonly description: "National ID number for a non-US person entity.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_id_card: {
                                        readonly type: "string";
                                        readonly description: "ID card number";
                                        readonly examples: readonly [1122334455];
                                    };
                                    readonly document_license: {
                                        readonly type: "string";
                                        readonly description: "U.S. issued driver's license number";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly document_passport: {
                                        readonly type: "string";
                                        readonly description: "Passport number";
                                        readonly examples: readonly [123456789];
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["john@alloy.com"];
                                    };
                                    readonly gender: {
                                        readonly type: "string";
                                        readonly examples: readonly ["male"];
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [8443825569];
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                        readonly examples: readonly ["42.206.213.70"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a person entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                    readonly examples: readonly ["primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                            readonly entity_type: {
                                readonly default: "person";
                                readonly type: "string";
                                readonly enum: readonly ["person", "business"];
                                readonly description: "If left blank, defaults to `\"person\"`.\n\nDefault: `person`";
                                readonly examples: readonly ["person"];
                            };
                            readonly branch_name: {
                                readonly default: "persons";
                                readonly type: "string";
                                readonly description: "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n";
                                readonly examples: readonly ["my_person_branch_name"];
                            };
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "The token associated with an existing entity.\n\nBy passing a value for this field, the entity application processes for the existing entity associated with the token.\n";
                                readonly examples: readonly ["P-1GoQALm40nPQSp7UVTJS"];
                            };
                        };
                    }, {
                        readonly title: "Updating data for an existing person entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n";
                                readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly entity_application_token: {
                                readonly type: "string";
                                readonly description: "Can be used to identify and edit a specific entity application of an existing entity\n";
                                readonly examples: readonly ["EA-0923jfss093ioawo"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n";
                                readonly properties: {
                                    readonly name_first: {
                                        readonly type: "string";
                                        readonly examples: readonly ["John"];
                                    };
                                    readonly name_middle: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Franklin"];
                                    };
                                    readonly name_last: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Doe"];
                                    };
                                    readonly birth_date: {
                                        readonly type: "string";
                                        readonly examples: readonly ["1990-01-25"];
                                    };
                                    readonly document_ssn: {
                                        readonly type: "string";
                                        readonly description: "Social Security number.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_national_id: {
                                        readonly type: "string";
                                        readonly description: "National ID number for a non-US person entity.";
                                        readonly examples: readonly [111223333];
                                    };
                                    readonly document_id_card: {
                                        readonly type: "string";
                                        readonly description: "ID card number";
                                        readonly examples: readonly [1122334455];
                                    };
                                    readonly document_license: {
                                        readonly type: "string";
                                        readonly description: "U.S. issued driver's license number";
                                        readonly examples: readonly [111222333];
                                    };
                                    readonly document_passport: {
                                        readonly type: "string";
                                        readonly description: "Passport number";
                                        readonly examples: readonly [123456789];
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly examples: readonly ["john@alloy.com"];
                                    };
                                    readonly gender: {
                                        readonly type: "string";
                                        readonly examples: readonly ["male"];
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly examples: readonly [8443825569];
                                    };
                                    readonly ip_address_v4: {
                                        readonly type: "string";
                                        readonly examples: readonly ["42.206.213.70"];
                                    };
                                    readonly addresses: {
                                        readonly type: "array";
                                        readonly description: "List of addresses for the given entity.\n";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly description: "Full address for a person entity";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly description: "Allowed values are `\"primary\"`, `\"secondary\"`, `\"previous\"`, `\"mailing\"`, `\"shipping\"`, `\"service\"`, `\"other\"`";
                                                    readonly examples: readonly ["primary"];
                                                };
                                                readonly line_1: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["41 E. 11th"];
                                                };
                                                readonly line_2: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2nd floor"];
                                                };
                                                readonly city: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["New York"];
                                                };
                                                readonly state: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["NY"];
                                                };
                                                readonly postal_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly [10003];
                                                };
                                                readonly country_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["US"];
                                                };
                                            };
                                        };
                                    };
                                    readonly meta: {
                                        readonly type: "object";
                                        readonly description: "Any additional metadata to be accessed for decisioning or review purposes that are not sent to a data service can be referenced here.";
                                        readonly additionalProperties: true;
                                    };
                                };
                            };
                        };
                    }, {
                        readonly title: "Associating documents for an existing person entity";
                        readonly type: "object";
                        readonly required: readonly ["data"];
                        readonly properties: {
                            readonly entity_token: {
                                readonly type: "string";
                                readonly description: "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n";
                                readonly examples: readonly ["P-w34k2W324cfgo53ZqX"];
                            };
                            readonly external_entity_id: {
                                readonly type: "string";
                                readonly description: "For existing entities that were created with external_entity_id, this can be used to identify and edit the entity's ACTIVE entity\napplication.\n";
                                readonly examples: readonly ["my_system_entity_id_123"];
                            };
                            readonly entity_application_token: {
                                readonly type: "string";
                                readonly description: "Can be used to identify and edit a specific entity application of an existing entity\n";
                                readonly examples: readonly ["EA-0923jfss093ioawo"];
                            };
                            readonly data: {
                                readonly type: "object";
                                readonly description: "Properties of documents sent for a `pending_step_up` or `pending_documents` (legacy) step. The documents must be uploaded in a seperate request and then associated with the entity in this request. You may either use our SDK ([see here](https://developer.alloy.com/public/docs/document-verification-web-sdk)) or our API ([see here](https://developer.alloy.com/public/reference/put_entities-entity-token-documents-document-token-1)) to upload documents.";
                                readonly properties: {
                                    readonly document_token_selfie: {
                                        readonly type: "string";
                                        readonly description: "The document token for the previously uploaded selfie";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_token_back: {
                                        readonly type: "string";
                                        readonly description: "The document token for the back of the previously uploaded image";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_token_front: {
                                        readonly type: "string";
                                        readonly description: "The document token for the front of a previously uploaded image";
                                        readonly examples: readonly ["D-zzniuGvvvhkrGo0nUMcO"];
                                    };
                                    readonly document_step: {
                                        readonly type: "string";
                                        readonly description: "This is a field primarily used for legacy Alloy SDK. For journeys, the value should always be `final`. This will tell us to evaluate the document. If `front` or `back` is passed in, then only the quality of the corresponding image will be examined.";
                                        readonly enum: readonly ["front", "back", "final"];
                                    };
                                };
                            };
                        };
                    }];
                };
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly fullData: {
                    readonly type: "string";
                    readonly enum: readonly ["true", "false"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded._events` includes the full evaluation response.";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "alloy-journey-override-sync": {
                    readonly type: "boolean";
                    readonly description: "This endpoint returns a synchronous response by default. If you would like to override this behavior and get an asynchronous response back immediately, send the header `alloy-journey-override-sync` as `true`.\n";
                    readonly examples: readonly [false];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly oneOf: readonly [{
                readonly title: "When header `alloy-journey-override-sync` is set to `true`";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-LS0GHKjDNhY6dGlvYxx"];
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "GET route for the Application";
                                        readonly examples: readonly ["/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH"];
                                    };
                                };
                            };
                        };
                    };
                };
            }, {
                readonly title: "When header `alloy-journey-override-sync` is set to `false` or not passed in";
                readonly type: "object";
                readonly properties: {
                    readonly journey_application_token: {
                        readonly type: "string";
                        readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                    };
                    readonly status: {
                        readonly type: "string";
                        readonly enum: readonly ["completed", "data_request", "error", "expired", "pending_action", "pending_additional_entities", "pending_documents", "pending_journey_application_review", "pending_reconciliation", "pending_step_up", "pending_workflow_service", "running", "waiting_review"];
                        readonly examples: readonly ["completed"];
                        readonly description: "`completed` `data_request` `error` `expired` `pending_action` `pending_additional_entities` `pending_documents` `pending_journey_application_review` `pending_reconciliation` `pending_step_up` `pending_workflow_service` `running` `waiting_review`";
                    };
                    readonly sandbox: {
                        readonly type: "boolean";
                    };
                    readonly created_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059958368];
                    };
                    readonly updated_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961458];
                    };
                    readonly closed_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1634059961464];
                    };
                    readonly complete_outcome: {
                        readonly type: "string";
                        readonly examples: readonly ["Approved"];
                    };
                    readonly is_shadow_app: {
                        readonly description: "indicates if the application was generated for a shadow test. This value is false for the parent applications that trigger the generation of the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly is_part_of_shadow_test: {
                        readonly description: "indicates if the application is a part of a shadow test. This value is true for both the parent applications that trigger the generation of the shadow applications, as well as the shadow applications.";
                        readonly type: "boolean";
                    };
                    readonly journey_application_status: {
                        readonly description: "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.";
                        readonly type: "string";
                    };
                    readonly is_archived: {
                        readonly type: "boolean";
                    };
                    readonly external_group_id: {
                        readonly type: "string";
                    };
                    readonly external_application_id: {
                        readonly description: "allows to associate one or multiple Journey Applications with an external identifier";
                        readonly type: "string";
                    };
                    readonly is_rerun: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly archived_at: {
                        readonly type: "string";
                    };
                    readonly terminal_reconciliation_output: {
                        readonly type: "object";
                        readonly description: "Data aggregated from the output of the terminal reconciliation evaluation";
                        readonly properties: {
                            readonly outcome_reasons: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fraud Risk"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["adverse_action", any];
                                            readonly description: "`adverse_action`";
                                        };
                                    };
                                };
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fraud_tag"];
                                };
                            };
                            readonly output_attributes: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }];
                                    readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                };
                            };
                            readonly matrix_models: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                    readonly properties: {
                                        readonly matrix_model_public_version: {
                                            readonly type: "integer";
                                        };
                                        readonly matrix_model_token: {
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly result: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly status: {
                                            readonly type: "string";
                                            readonly enum: readonly ["executed", "not_executed"];
                                            readonly examples: readonly ["completed"];
                                            readonly description: "`executed` `not_executed`";
                                        };
                                        readonly x_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "x-coordinate of the matrix";
                                        };
                                        readonly x_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly y_bucket: {
                                            readonly type: readonly ["number", "null"];
                                            readonly description: "y-coordinate of the matrix";
                                        };
                                        readonly y_value: {
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                };
                            };
                        };
                    };
                    readonly application_meta: {
                        readonly type: "object";
                        readonly description: "Optional, allows to provide additional metadata applied to all entities in the Application.";
                        readonly additionalProperties: true;
                    };
                    readonly _embedded: {
                        readonly type: "object";
                        readonly properties: {
                            readonly rerun: {
                                readonly description: "Rerun information";
                                readonly type: "object";
                                readonly properties: {
                                    readonly initiated_by: {
                                        readonly type: "string";
                                        readonly enum: readonly ["api", "dashboard"];
                                        readonly examples: readonly ["dashboard"];
                                        readonly description: "`api` `dashboard`";
                                    };
                                    readonly previous_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                    readonly root_external_group_id: {
                                        readonly type: "string";
                                    };
                                    readonly root_journey_application_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["JA-zvtpApEGBnmKepPwygBx"];
                                    };
                                };
                            };
                            readonly events: {
                                readonly description: "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly journey_application_event_token: {
                                            readonly type: "string";
                                        };
                                        readonly journey_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["JA-ddjP31DhduTI334Cs3uT"];
                                        };
                                        readonly journey_type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["alert", "application"];
                                            readonly description: "`alert` `application`";
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly enum: readonly ["application_expired", "completed_action", "completed_application", "completed_branch", "completed_evaluation", "completed_reconciliation", "completed_review", "completed_review_journey_application", "data_request_evaluation", "error", "has_finished_sending_additional_entities", "pending_action", "pending_action_expired", "pending_documents", "pending_review", "pending_step_up", "pending_workflow_service", "reached_auto_decision_node", "started_application", "started_evaluation", "started_reconciliation"];
                                            readonly examples: readonly ["started_application"];
                                            readonly description: "`application_expired` `completed_action` `completed_application` `completed_branch` `completed_evaluation` `completed_reconciliation` `completed_review` `completed_review_journey_application` `data_request_evaluation` `error` `has_finished_sending_additional_entities` `pending_action` `pending_action_expired` `pending_documents` `pending_review` `pending_step_up` `pending_workflow_service` `reached_auto_decision_node` `started_application` `started_evaluation` `started_reconciliation`";
                                        };
                                        readonly external_partner_id: {
                                            readonly type: "string";
                                        };
                                        readonly external_group_id: {
                                            readonly type: "string";
                                        };
                                        readonly reason: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly timestamp: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1634059958414];
                                        };
                                        readonly outcome: {
                                            readonly type: "string";
                                            readonly description: "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`";
                                        };
                                        readonly evaluation_token: {
                                            readonly type: "string";
                                            readonly description: "Identifying evaluation token (only in evaluation type events)";
                                        };
                                        readonly entity_token: {
                                            readonly type: "string";
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                        };
                                        readonly error_data: {
                                            readonly type: "object";
                                            readonly description: "Additional error data populated when available for `error` event types";
                                            readonly properties: {
                                                readonly error: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                        };
                                                        readonly details: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly message: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minor_code: {
                                                            readonly type: "integer";
                                                        };
                                                        readonly error_token: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly timestamp: {
                                                    readonly type: "integer";
                                                };
                                                readonly status_code: {
                                                    readonly type: "integer";
                                                };
                                                readonly entity_token: {
                                                    readonly type: "string";
                                                };
                                                readonly evaluation_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_token: {
                                                    readonly type: "string";
                                                };
                                                readonly application_version_id: {
                                                    readonly type: "integer";
                                                };
                                            };
                                        };
                                        readonly _embedded: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly node: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["1632850505316"];
                                                        };
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["start", "workflow", "review", "outcome", "action", "docv"];
                                                            readonly examples: readonly ["workflow"];
                                                            readonly description: "`start` `workflow` `review` `outcome` `action` `docv`";
                                                        };
                                                        readonly config: {
                                                            readonly description: "Config related to the specific node, depending on the type";
                                                            readonly type: "object";
                                                            readonly additionalProperties: true;
                                                        };
                                                        readonly workflow_name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly sdk_config: {
                                                            readonly type: "object";
                                                            readonly description: "Settings to be read by SDK to handle processing. Only present on workflow node events.";
                                                            readonly properties: {
                                                                readonly documents: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly selfie: {
                                                                    readonly type: "boolean";
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly _links: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly evaluation: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly case: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly journey: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["application", "alert"];
                                        readonly examples: readonly ["application"];
                                        readonly description: "`application` `alert`";
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["J-qDydegaMK8otdsRYquOR"];
                                    };
                                    readonly journey_version_num: {
                                        readonly type: "string";
                                    };
                                    readonly _links: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly self: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly href: {
                                                        readonly type: "string";
                                                        readonly description: "GET route for the Journey";
                                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                                    };
                                                };
                                            };
                                            readonly callback_by_entity_application_token: {
                                                readonly type: "object";
                                                readonly description: "When applicable, the route to send a PUT request to for each entity application to resolve its current pending state";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly child_entities: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly external_entity_identifier: {
                                            readonly type: "string";
                                            readonly examples: readonly ["external_entity_id123"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["John Doe"];
                                        };
                                        readonly token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["person"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_branch_name: {
                                            readonly type: "string";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly examples: readonly ["2021-10-12T20:38:26.493Z"];
                                        };
                                        readonly sandbox_persona_name: {
                                            readonly type: "string";
                                            readonly description: "When applicable, name of sandbox persona used for this child entity";
                                        };
                                    };
                                };
                            };
                            readonly entity_applications: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly entity_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["P-tZOLIOQGVxfixICuvkS0"];
                                        };
                                        readonly entity_application_token: {
                                            readonly type: "string";
                                            readonly examples: readonly ["EA-GessHRonFRTSXCmErk7J"];
                                        };
                                        readonly entity_application_outcome: {
                                            readonly type: "string";
                                            readonly examples: readonly ["approved"];
                                        };
                                        readonly entity_application_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["completed"];
                                        };
                                        readonly entity_application_status_details: {
                                            readonly type: "object";
                                            readonly description: "Additional details for applications that have status `data_request`";
                                            readonly properties: {
                                                readonly required: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly message: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly or: {
                                                    readonly type: "string";
                                                };
                                                readonly optional: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly key: {
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly regex: {
                                                                readonly type: "string";
                                                            };
                                                            readonly description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                        readonly output: {
                                            readonly type: "object";
                                            readonly description: "Data aggregated from the outputs of every evaluation run for the entity application";
                                            readonly properties: {
                                                readonly outcome_reasons: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Fraud Risk"];
                                                            };
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["adverse_action", any];
                                                                readonly description: "`adverse_action`";
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly tags: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["fraud_tag"];
                                                    };
                                                };
                                                readonly output_attributes: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "number";
                                                        }];
                                                        readonly description: "NOTE the dynamic property name refers to the name of the output attribute";
                                                    };
                                                };
                                                readonly matrix_models: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "object";
                                                        readonly description: "NOTE the dynamic property name refers to the name of the matrix model";
                                                        readonly properties: {
                                                            readonly matrix_model_public_version: {
                                                                readonly type: "integer";
                                                            };
                                                            readonly matrix_model_token: {
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly result: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly status: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["executed", "not_executed"];
                                                                readonly examples: readonly ["completed"];
                                                                readonly description: "`executed` `not_executed`";
                                                            };
                                                            readonly x_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "x-coordinate of the matrix";
                                                            };
                                                            readonly x_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                            readonly y_bucket: {
                                                                readonly type: readonly ["number", "null"];
                                                                readonly description: "y-coordinate of the matrix";
                                                            };
                                                            readonly y_value: {
                                                                readonly type: readonly ["number", "null"];
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly entity: {
                                readonly description: "The journey application entity";
                                readonly type: "object";
                                readonly properties: {
                                    readonly external_entity_identifier: {
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly token: {
                                        readonly type: "string";
                                        readonly examples: readonly ["G-wBdsvC7hA84j7p4PTVcD"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["group"];
                                    };
                                };
                            };
                            readonly multi_environment_config: {
                                readonly description: "If the application has been created with a Multi-Environment Configuration, the details will be included here.";
                                readonly type: "object";
                                readonly properties: {
                                    readonly multi_environment_config_token: {
                                        readonly type: "string";
                                    };
                                    readonly multi_environment_config_notes: {
                                        readonly type: "string";
                                    };
                                    readonly created_at: {
                                        readonly type: "string";
                                        readonly examples: readonly [1634059958368];
                                    };
                                    readonly journey_token: {
                                        readonly type: "string";
                                    };
                                    readonly journey_name: {
                                        readonly type: "string";
                                    };
                                    readonly journey_public_version: {
                                        readonly type: "number";
                                    };
                                    readonly actions: {
                                        readonly description: "List of journey actions that have been configured as part of this Multi-Environment Configuration.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly journey_action_id: {
                                                    readonly type: "number";
                                                };
                                                readonly action_version: {
                                                    readonly type: "number";
                                                };
                                                readonly action_name: {
                                                    readonly type: "string";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all action nodes for this journey action will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                    readonly workflows: {
                                        readonly description: "List of workflows that have been configured as part of this Multi-Environment Configuration.\nWorkflows will either have an outcome or a list of configured services.\n";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly workflow_name: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_node_type: {
                                                    readonly description: "The type of node this workflow is used as, for example Step Up";
                                                    readonly type: "string";
                                                };
                                                readonly workflow_token: {
                                                    readonly type: "string";
                                                };
                                                readonly workflow_public_version: {
                                                    readonly type: "number";
                                                };
                                                readonly outcome: {
                                                    readonly description: "The outcome that all workflow nodes using this workflow will be decisioned to.";
                                                    readonly type: "string";
                                                };
                                                readonly configured_services: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly service_name: {
                                                                readonly type: "string";
                                                            };
                                                            readonly has_credentials: {
                                                                readonly description: "True if this service has been configured with test credentials, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly sandbox: {
                                                                readonly description: "True if this service has been configured to run in Alloy's sandbox environment, false otherwise.";
                                                                readonly type: "boolean";
                                                            };
                                                            readonly credentials_description: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly is_pending_additional_entities: {
                                readonly type: "boolean";
                                readonly default: false;
                                readonly description: "If this value is true, additional entities can be sent by using the PUT endpoint that updates a Journey Application.\n\nThe Journey Application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n";
                                readonly examples: readonly [false];
                            };
                        };
                    };
                    readonly _links: {
                        readonly type: "object";
                        readonly properties: {
                            readonly self: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly description: "GET route for the Application";
                                        readonly type: "string";
                                        readonly examples: readonly ["/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"];
                                    };
                                };
                            };
                        };
                    };
                };
            }];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutJourneysJourneyTokenApplicationsJourneyApplicationTokenNodesNodeId: {
    readonly body: {
        readonly required: readonly ["outcome"];
        readonly properties: {
            readonly outcome: {
                readonly type: "string";
                readonly enum: readonly ["approved", "denied", "manual review"];
                readonly description: "Action outcome to set for the given entity. This outcome must be a valid outcome of the node.\n";
            };
            readonly data: {
                readonly type: "object";
                readonly description: "Optional payload to be merged into the application's existing payload and passed\nto subsequent nodes as input attributes\n";
                readonly additionalProperties: true;
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly journey_token: {
                    readonly type: "string";
                    readonly examples: readonly ["J-VCQoADBJxeHtmdAvFqoS"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey";
                };
                readonly journey_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["JA-mhjlfS6nZe1G6HuvAKVq"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token associated with your Journey Application";
                };
                readonly node_id: {
                    readonly type: "string";
                    readonly examples: readonly ["1653494699250"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Id of action node. This can be retrieved through the `pending_action` event in the journey application response";
                };
            };
            readonly required: readonly ["journey_token", "journey_application_token", "node_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly entity_token: {
                    readonly type: "string";
                    readonly examples: readonly ["P-VJy577gSbYvm5cpKwkjH"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the entity";
                };
                readonly entity_application_token: {
                    readonly type: "string";
                    readonly examples: readonly ["EA-mj6K0TmIHTa7ufo0hQSC"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the entity's application";
                };
                readonly external_entity_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the entity as supplied in the create journey application request";
                };
            };
            readonly required: readonly [];
        }];
    };
};
declare const PutListsListToken: {
    readonly body: {
        readonly type: "array";
        readonly items: {
            readonly type: "object";
            readonly properties: {
                readonly name_first: {
                    readonly type: "string";
                    readonly examples: readonly ["John"];
                };
                readonly name_last: {
                    readonly type: "string";
                    readonly examples: readonly ["Doe"];
                };
                readonly birth_date: {
                    readonly type: "string";
                    readonly examples: readonly ["1980-01-01"];
                };
                readonly document_ssn: {
                    readonly type: "string";
                    readonly examples: readonly [123321123];
                };
                readonly address_line_1: {
                    readonly type: "string";
                    readonly examples: readonly ["123 Fake Street"];
                };
                readonly address_line_2: {
                    readonly type: "string";
                    readonly examples: readonly ["Apt 10D"];
                };
                readonly address_city: {
                    readonly type: "string";
                    readonly examples: readonly ["Brooklyn"];
                };
                readonly address_state: {
                    readonly type: "string";
                    readonly examples: readonly ["NY"];
                };
                readonly address_postal_code: {
                    readonly type: "string";
                    readonly examples: readonly [11221];
                };
                readonly address_country_code: {
                    readonly type: "string";
                    readonly examples: readonly ["US"];
                };
                readonly ip_address_v4: {
                    readonly type: "string";
                    readonly examples: readonly ["192.168.1.168"];
                };
                readonly ip_address_v6: {
                    readonly type: "string";
                };
                readonly email_address: {
                    readonly type: "string";
                    readonly examples: readonly ["john.doe@gmail.com"];
                };
                readonly phone_number: {
                    readonly type: "string";
                    readonly examples: readonly [5558031203];
                };
                readonly acm_party_id: {
                    readonly type: "string";
                    readonly examples: readonly [12341231];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly [1249403039484];
                };
                readonly system: {
                    readonly type: "string";
                    readonly examples: readonly ["bridger"];
                };
                readonly secret_question: {
                    readonly type: "string";
                    readonly examples: readonly ["what is your quest"];
                };
                readonly secret_answer: {
                    readonly type: "string";
                    readonly examples: readonly ["to seek the holy grail"];
                };
                readonly comment: {
                    readonly type: "string";
                    readonly examples: readonly ["this is a comment"];
                };
                readonly group: {
                    readonly type: "string";
                    readonly examples: readonly ["aml"];
                };
                readonly device_alias: {
                    readonly type: "string";
                };
                readonly digital_profile_uuid: {
                    readonly type: "string";
                };
                readonly smart_uuid: {
                    readonly type: "string";
                };
                readonly session_uuid: {
                    readonly type: "string";
                };
                readonly fingerprint_uuid: {
                    readonly type: "string";
                };
                readonly external_counterparty_id: {
                    readonly type: "string";
                };
                readonly expires_at: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly description: "timestamp of when the list row will not be used";
                    readonly examples: readonly ["2023-09-01T00:00:00.000Z"];
                };
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly list_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of List to operate on";
                };
            };
            readonly required: readonly ["list_token"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [200];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Denylisted entities"];
                };
                readonly list_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-grYZsEoy623M3LiZrK66"];
                };
                readonly data: {
                    readonly type: "string";
                    readonly examples: readonly ["https://sandbox.alloy.co/lists/I-grYZsEoy623M3LiZrK66"];
                };
                readonly records_added: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly total_records: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PutListsListTokenMeta: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly listName: {
                readonly type: "string";
                readonly examples: readonly ["Test updating list name"];
            };
            readonly description: {
                readonly type: "string";
                readonly examples: readonly ["Test updating description"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly list_token: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Token of list to operate on";
                };
            };
            readonly required: readonly ["list_token"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [201];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
                readonly list_token: {
                    readonly type: "string";
                    readonly examples: readonly ["I-EHbNvGzkeGdy3mXcfbIJ"];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [404];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "409": {
            readonly properties: {
                readonly status_code: {
                    readonly type: "number";
                    readonly examples: readonly [409];
                };
                readonly error: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly timestamp: {
                    readonly type: "integer";
                    readonly examples: readonly [1557675468774];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
export { GetBankAccountsAccountIdentifierOrToken, GetBatchesBatchToken, GetCases, GetCasesCaseToken, GetCasesCaseTokenEvidences, GetCasesCaseTokenEvidencesEvaluationTokenAlert, GetCasesCaseTokenWorks, GetEntitiesBusinessesEntityToken, GetEntitiesEntityToken, GetEntitiesEntityTokenDocuments, GetEntitiesEntityTokenDocumentsDocumentToken, GetEntitiesEntityTokenEvaluationsEvaluationToken, GetEntitiesEntityTokenReviews, GetEntitiesEntityTokenReviewsReviewToken, GetEntitiesPersonsEntityToken, GetEntityFeedback, GetEvaluationsEvaluationToken, GetEventsSchema, GetGroupsEntityToken, GetJourneysApplicationsExtExternalApplicationIdLatest, GetJourneysJourneyTokenApplicationsJourneyApplicationToken, GetJourneysJourneyTokenApplicationsJourneyApplicationTokenNotes, GetJourneysJourneyTokenBatchesJourneyBatchToken, GetJourneysJourneyTokenBatchesJourneyBatchTokenApplications, GetJourneysJourneyTokenParameters, GetLists, GetListsListToken, GetParameters, GetPublishedAttributes, GetPublishedAttributesPublishedAttributeToken, GetPublishedAttributesPublishedAttributeTokenValues, GetTransactionsTransactionId, PatchAccountsBankAccountToken, PatchEntitiesBusinessesEntityToken, PatchEntitiesEntityTokenDocumentsDocumentToken, PatchEntitiesPersonsEntityToken, PatchEvaluationsEvaluationToken, PatchPublishedAttributesPublishedAttributeToken, PatchTransactionsTransactionId, PostAccounts, PostCasesCaseTokenEvidences, PostCasesCaseTokenWorks, PostCasesMultiWorks, PostDocuments, PostEntitiesBusinesses, PostEntitiesEntityTokenDocuments, PostEntitiesEntityTokenDocumentsDocumentTokenNotes, PostEntitiesEntityTokenNotes, PostEntitiesEntityTokenReviews, PostEntitiesEntityTokenReviewsReviewTokenNotes, PostEntitiesMerge, PostEntitiesPersons, PostEntityFeedback, PostEvaluations, PostEvents, PostGroupsGroupTokenReviews, PostGroupsGroupTokenReviewsReviewTokenNotes, PostGroupsGrouptokenEvaluations, PostGroupsGrouptokenNotes, PostJourneysApplicationsExtExternalApplicationIdLatestRerun, PostJourneysJourneyTokenApplications, PostJourneysJourneyTokenApplicationsJourneyApplicationTokenCasesCaseTokenReview, PostJourneysJourneyTokenApplicationsJourneyApplicationTokenNotes, PostJourneysJourneyTokenApplicationsJourneyApplicationTokenRerun, PostJourneysJourneyTokenApplicationsJourneyApplicationTokenReview, PostJourneysJourneyTokenBatches, PostLists, PostListsListToken, PostOauthBearer, PostOauthValidate, PostPortfolioEvaluations, PostPublishedAttributes, PostPublishedAttributesPublishedAttributeTokenValues, PutDocumentsDocumentToken, PutEntitiesEntityTokenDocumentsDocumentToken, PutJourneysApplicationsExtExternalApplicationIdLatest, PutJourneysJourneyTokenApplicationsJourneyApplicationToken, PutJourneysJourneyTokenApplicationsJourneyApplicationTokenNodesNodeId, PutListsListToken, PutListsListTokenMeta };
